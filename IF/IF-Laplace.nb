(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    261501,       5106]
NotebookOptionsPosition[    256549,       4937]
NotebookOutlinePosition[    257090,       4957]
CellTagsIndexPosition[    257047,       4954]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Laplace", ":"}]], "Input",
 CellChangeTimes->{{3.543684992882703*^9, 3.543684994655665*^9}, {
  3.544320894879453*^9, 3.544320906231942*^9}, {3.544321013728986*^9, 
  3.544321015677552*^9}, {3.546148492799015*^9, 3.546148493722613*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"\[Alpha]", ",", "\[Sigma]", ",", "\[Mu]", ",", "x"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.54613653746201*^9, 3.546136542655197*^9}, {
  3.546136596080742*^9, 3.546136617338891*^9}, {3.546139146090529*^9, 
  3.546139146249962*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "\[Sigma]"}], ")"}]}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Abs", "[", 
       RowBox[{"x", "-", "\[Mu]"}], "]"}]}], "/", "\[Sigma]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.543684783475436*^9, 3.543684946824956*^9}, 
   3.543685129663494*^9, {3.544295734613175*^9, 3.54429574288267*^9}, {
   3.54429580082901*^9, 3.54429582329368*^9}, {3.544320780873962*^9, 
   3.544320785346142*^9}, 3.544320837287442*^9, {3.544320881922005*^9, 
   3.54432088239278*^9}, {3.54432100764836*^9, 3.544321019573801*^9}, {
   3.546148133543341*^9, 3.546148190255555*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Abs", "[", 
      RowBox[{"x", "-", "\[Mu]"}], "]"}], "\[Sigma]"]}]], 
  RowBox[{"2", " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{
  3.544320837880473*^9, {3.544320883580563*^9, 3.544320911227469*^9}, 
   3.545309803843712*^9, 3.546016483142384*^9, 3.546017657044242*^9, 
   3.546060076762132*^9, 3.546060141670154*^9, 3.546060377463162*^9, 
   3.546061431182232*^9, 3.54606188717779*^9, 3.546071462150901*^9, 
   3.546136812639187*^9, 3.546138975120109*^9, 3.546148046460689*^9, 
   3.546148194936451*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]", " ", "=", " ", "\[Sigma]"}], ";"}]], "Input",
 CellChangeTimes->{{3.546137329720142*^9, 3.546137340576589*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ss", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Log", "[", "p", "]"}], ",", "\[Theta]"}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.543684996758039*^9, 3.543685116992625*^9}, {
   3.543685161495624*^9, 3.543685164824434*^9}, {3.543685617602922*^9, 
   3.543685622261405*^9}, {3.544295746546906*^9, 3.544295827428027*^9}, {
   3.544295874222879*^9, 3.544295884036298*^9}, 3.546016486016091*^9, {
   3.54601942039296*^9, 3.546019421197285*^9}, {3.546137342783463*^9, 
   3.54613734607702*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "\[Sigma]"}], "+", 
   RowBox[{"Abs", "[", 
    RowBox[{"x", "-", "\[Mu]"}], "]"}]}], 
  SuperscriptBox["\[Sigma]", "2"]]], "Output",
 CellChangeTimes->{
  3.544295884678365*^9, 3.545309805435313*^9, 3.546016487855942*^9, 
   3.546017670089106*^9, 3.546019421888676*^9, 3.546059377336055*^9, 
   3.546060078214513*^9, {3.546060139149627*^9, 3.546060144271088*^9}, 
   3.546060382291988*^9, 3.546061435830015*^9, 3.546061887191896*^9, 
   3.546071462301595*^9, 3.546136812733527*^9, {3.546137347255125*^9, 
   3.546137353812429*^9}, 3.54613897527059*^9, 3.546148046689522*^9, 
   3.546148242728744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ss", "'"}], " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"ss", ",", "\[Theta]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.543685180126496*^9, 3.543685298634426*^9}, {
   3.543685431540192*^9, 3.543685489527895*^9}, 3.543685534481716*^9, {
   3.543685624867701*^9, 3.543685665571384*^9}, {3.543688058809387*^9, 
   3.543688137132826*^9}, {3.54368832453227*^9, 3.543688330973921*^9}, {
   3.544295753339424*^9, 3.544295760783175*^9}, {3.544295853271568*^9, 
   3.544295889194162*^9}, {3.546016489095013*^9, 3.54601649563242*^9}, {
   3.546019427600456*^9, 3.546019428430676*^9}, {3.54613735651055*^9, 
   3.546137357241563*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Sigma]", "-", 
   RowBox[{"2", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{"x", "-", "\[Mu]"}], "]"}]}]}], 
  SuperscriptBox["\[Sigma]", "3"]]], "Output",
 CellChangeTimes->{{3.543685658802668*^9, 3.54368566906248*^9}, {
   3.54368807593941*^9, 3.543688142568622*^9}, 3.543688332640362*^9, {
   3.54429586658533*^9, 3.544295890282246*^9}, 3.545309806594238*^9, {
   3.54601648969558*^9, 3.546016496189694*^9}, 3.546017677241552*^9, 
   3.546019429586647*^9, 3.546059378810901*^9, 3.546060079358672*^9, 
   3.546060145605671*^9, 3.546060384883913*^9, 3.546061436928236*^9, 
   3.546061887206539*^9, 3.546071462474284*^9, 3.546136812904919*^9, 
   3.546137359182575*^9, 3.546138975369357*^9, 3.546148046818373*^9, 
   3.54614824482764*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"p", "^", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}]}], "*", "ss"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.546016522942259*^9, 3.546016539967992*^9}, {
   3.546017704408171*^9, 3.546017705125968*^9}, 3.546019441035926*^9, {
   3.546019471091529*^9, 3.546019479505023*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"x", "-", "\[Mu]"}], "]"}], "\[Sigma]"]}]], "\[Sigma]"], 
     ")"}], 
    RowBox[{"1", "+", "\[Alpha]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Sigma]"}], "+", 
     RowBox[{"Abs", "[", 
      RowBox[{"x", "-", "\[Mu]"}], "]"}]}], ")"}]}], 
  SuperscriptBox["\[Sigma]", "2"]]], "Output",
 CellChangeTimes->{
  3.546016544655516*^9, {3.546017682666078*^9, 3.546017707524088*^9}, 
   3.546019442560441*^9, 3.546019480115117*^9, 3.546060081264836*^9, 
   3.546060146559043*^9, 3.546060400916709*^9, 3.546061439971061*^9, 
   3.546061887221677*^9, 3.546071464395533*^9, 3.546136814598201*^9, 
   3.546137368746807*^9, 3.546138977048079*^9, 3.54614804861861*^9, 
   3.546148248450005*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"csIntCitatel1", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Rule]", " ", 
      RowBox[{"y", "*", "\[Sigma]"}]}]}], ",", 
    RowBox[{"\[Sigma]", "\[GreaterEqual]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016644463204*^9, 3.546016698494855*^9}, {
   3.546017718072268*^9, 3.546017718824221*^9}, {3.546019484592136*^9, 
   3.546019489873669*^9}, {3.5460588628943*^9, 3.546058863025369*^9}, {
   3.546058985559764*^9, 3.54605898695691*^9}, 3.546148333934883*^9, {
   3.546148369796557*^9, 3.546148409219734*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"Abs", "[", "y", "]"}]], " ", "\[Sigma]"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Abs", "[", "y", "]"}]}], ")"}]}], "\[Sigma]"]], "Output",
 CellChangeTimes->{
  3.546016699867985*^9, {3.54601771087677*^9, 3.546017720075646*^9}, 
   3.546019451857504*^9, 3.54601949082593*^9, 3.546058865086693*^9, 
   3.546058991110302*^9, 3.546059305292639*^9, {3.546060081368136*^9, 
   3.546060082414614*^9}, 3.546060147815039*^9, 3.546060407046361*^9, 
   3.546061531311124*^9, 3.546061887295093*^9, 3.546071465443946*^9, 
   3.546136815322759*^9, 3.546137371159345*^9, 3.546138977799651*^9, 
   3.546148049399068*^9, 3.546148258393925*^9, {3.54614838576676*^9, 
   3.546148411396184*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"2", "*", "csIntCitatel2", "*", "\[Sigma]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.546016758763041*^9, 3.546016792970542*^9}, {
  3.546017733204061*^9, 3.546017740186443*^9}, {3.546017914630278*^9, 
  3.546017915139312*^9}, {3.54601813955664*^9, 3.546018141998787*^9}, {
  3.546019493851544*^9, 3.546019499184226*^9}, {3.546058803868124*^9, 
  3.546058826478995*^9}, {3.546058870461028*^9, 3.546058872003744*^9}, {
  3.546059018757644*^9, 3.546059019951728*^9}, {3.546059209756854*^9, 
  3.546059224271504*^9}, {3.546060118428053*^9, 3.546060118951836*^9}, {
  3.546060429719045*^9, 3.546060435859049*^9}, {3.54606155661684*^9, 
  3.546061556750753*^9}, {3.54606187684573*^9, 3.546061879156262*^9}, {
  3.546148267816775*^9, 3.546148277920996*^9}, {3.546148431709436*^9, 
  3.546148436940593*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"-", "\[Alpha]"}]], " ", "\[Alpha]", " ", 
      SuperscriptBox["\[Sigma]", 
       RowBox[{
        RowBox[{"-", "1"}], "-", "\[Alpha]"}]]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"]]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546016797608153*^9, 3.546017744115164*^9, {3.546017901155742*^9, 
   3.546017918255887*^9}, 3.54601814479272*^9, 3.5460194592406*^9, 
   3.546019501847466*^9, 3.546058816227488*^9, 3.546058858910903*^9, 
   3.546058988908802*^9, 3.546059027020108*^9, {3.546059207468971*^9, 
   3.546059213730049*^9}, 3.546059311153677*^9, 3.54606008545984*^9, {
   3.546060121584368*^9, 3.54606015090936*^9}, 3.546060482353594*^9, 
   3.546061561105924*^9, 3.546061888934606*^9, 3.546071469576597*^9, 
   3.546136819048198*^9, 3.546137375365945*^9, 3.546138981516168*^9, 
   3.546148053135883*^9, 3.546148325651202*^9, 3.546148445127922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"p", "^", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Alpha]"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016812881654*^9, 3.546016818147665*^9}, {
  3.546016886250683*^9, 3.546016904857094*^9}, {3.546018151081055*^9, 
  3.546018151902321*^9}, {3.546019505441384*^9, 3.546019506907304*^9}, {
  3.546059876912032*^9, 3.546059883931349*^9}, {3.546060057180457*^9, 
  3.546060062381365*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Abs", "[", 
         RowBox[{"x", "-", "\[Mu]"}], "]"}], "\[Sigma]"]}]], "\[Sigma]"], 
    ")"}], 
   RowBox[{"1", "+", "\[Alpha]"}]]}]], "Output",
 CellChangeTimes->{
  3.546059884316431*^9, {3.54606006350173*^9, 3.546060085628376*^9}, 
   3.546060152429164*^9, 3.546060487613641*^9, 3.546061563038276*^9, 
   3.546061889005262*^9, 3.546071469972666*^9, 3.546136819448887*^9, 
   3.546137376078972*^9, 3.546138981908363*^9, 3.54614805372105*^9, 
   3.546148453279892*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"csIntJmenovatel1", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Rule]", " ", 
      RowBox[{"y", "*", "\[Sigma]"}]}]}], ",", 
    RowBox[{"\[Sigma]", "\[GreaterEqual]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016918820028*^9, 3.546016933459735*^9}, {
  3.546018162034847*^9, 3.546018162802109*^9}, {3.546019511970786*^9, 
  3.546019518337126*^9}, {3.546059893179542*^9, 3.546059893847781*^9}, {
  3.546060047266137*^9, 3.546060052681203*^9}, {3.546148458338255*^9, 
  3.54614846127925*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"Abs", "[", "y", "]"}]], " ", "\[Sigma]"}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Alpha]"}]]}]], "Output",
 CellChangeTimes->{
  3.546016923575523*^9, 3.546017064644657*^9, 3.54601816733437*^9, 
   3.546019519156449*^9, 3.546059316503319*^9, 3.546059393343114*^9, 
   3.546059588516448*^9, 3.546059894431348*^9, {3.546060064924788*^9, 
   3.546060086001004*^9}, 3.546060156246333*^9, 3.546060505013231*^9, 
   3.546061566515456*^9, 3.546061889013432*^9, 3.546071470260381*^9, 
   3.546136819734045*^9, 3.546137379438253*^9, 3.546138982186393*^9, 
   3.546148054034486*^9, 3.546148463699813*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"2", "*", "csIntJmenovatel2", "*", "\[Sigma]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.546017079018856*^9, 3.546017090969569*^9}, {
  3.546018190056803*^9, 3.546018190821094*^9}, {3.546059043677427*^9, 
  3.54605904460088*^9}, {3.546059403368323*^9, 3.546059411524818*^9}, {
  3.546059479614725*^9, 3.546059492483282*^9}, {3.546059617399394*^9, 
  3.546059617680817*^9}, {3.546059915271946*^9, 3.546059916341114*^9}, {
  3.546060024912348*^9, 3.546060025553251*^9}, {3.546061569414866*^9, 
  3.546061603372963*^9}, {3.54606187218996*^9, 3.546061873288195*^9}, {
  3.54614847100994*^9, 3.546148474277757*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"-", "\[Alpha]"}]], " ", 
     SuperscriptBox["\[Sigma]", 
      RowBox[{"-", "\[Alpha]"}]]}], 
    RowBox[{"1", "+", "\[Alpha]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017129629872*^9, {3.546018185130961*^9, 3.546018193247052*^9}, 
   3.546019531385107*^9, 3.546059048224064*^9, {3.546059319837184*^9, 
   3.546059326263401*^9}, 3.546059398031549*^9, {3.546059485206171*^9, 
   3.546059497029928*^9}, {3.546059600135839*^9, 3.546059619744119*^9}, {
   3.546059902110613*^9, 3.546059918797663*^9}, 3.546060032150784*^9, {
   3.546060066913525*^9, 3.546060090042542*^9}, 3.546060159740637*^9, 
   3.546060290156587*^9, 3.546060519250223*^9, 3.546061573570523*^9, 
   3.54606160547765*^9, 3.546061890499446*^9, 3.546071472984868*^9, 
   3.546136822248697*^9, 3.546137382344213*^9, 3.546138984948668*^9, 
   3.546148056318565*^9, 3.546148476621707*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cs", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"csIntCitatel3", "/", "csIntJmenovatel3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546017159619789*^9, 3.546017171553549*^9}, {
   3.546018198699244*^9, 3.54601820322215*^9}, 3.546061584597621*^9, {
   3.546061615263666*^9, 3.546061627686996*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Alpha]", 
     RowBox[{"\[Sigma]", "+", 
      RowBox[{"\[Alpha]", " ", "\[Sigma]"}]}]]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017173049018*^9, 3.546018204442568*^9, 3.546019534525334*^9, 
   3.546059053644503*^9, 3.546060092729884*^9, 3.546060126263668*^9, 
   3.546060162380328*^9, 3.54606029189522*^9, 3.546060530244291*^9, 
   3.546061576542723*^9, 3.546061631929342*^9, 3.546061890565066*^9, 
   3.54607147309259*^9, 3.54608081889764*^9, 3.546136822442753*^9, 
   3.546137385359962*^9, 3.546138985121945*^9, 3.546148056449513*^9, {
   3.546148481690994*^9, 3.546148504627675*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cs", "'"}], " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"cs", ",", "\[Theta]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546017177523059*^9, 3.546017189050696*^9}, {
  3.546018219369372*^9, 3.546018251272656*^9}, {3.546137392518803*^9, 
  3.546137393253288*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox["\[Alpha]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
     SuperscriptBox["\[Sigma]", "2"]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017189978016*^9, 3.546017505585954*^9, {3.546018213521305*^9, 
   3.546018252329528*^9}, 3.546019535664949*^9, 3.546059054652897*^9, 
   3.546060095789459*^9, 3.54606013262094*^9, 3.546060172383065*^9, 
   3.546060295503429*^9, 3.54606055374719*^9, 3.546061634658587*^9, 
   3.54606189057455*^9, 3.546071473171214*^9, 3.546136822576293*^9, {
   3.54613738679792*^9, 3.546137394710698*^9}, 3.546138985242507*^9, 
   3.546148056555802*^9, 3.54614850739174*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia", " ", "=", 
  RowBox[{"FullSimplify", "[", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ss", "'"}], " ", "-", " ", 
      RowBox[{"cs", "'"}], "-", 
      RowBox[{"\[Alpha]", 
       RowBox[{"(", 
        RowBox[{"ss", "-", "cs"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"cs", "-", "ss"}], ")"}]}]}], ")"}], "*", 
    RowBox[{"p", "^", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016927559429*^9, 3.546016927697169*^9}, {
   3.546017069821145*^9, 3.546017085073989*^9}, 3.546017230368702*^9, {
   3.546017453638702*^9, 3.546017454633499*^9}, {3.546017487540381*^9, 
   3.546017511750122*^9}, 3.546060275246113*^9, {3.546060594894228*^9, 
   3.546060607304117*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"], " ", 
      SuperscriptBox["\[Sigma]", "4"]}]], 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"Abs", "[", 
            RowBox[{"x", "-", "\[Mu]"}], "]"}], "\[Sigma]"]}]], "\[Sigma]"], 
       ")"}], 
      RowBox[{"1", "+", "\[Alpha]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
        SuperscriptBox["\[Sigma]", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"x", "-", "\[Mu]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Sigma]", "+", 
             RowBox[{"2", " ", "\[Alpha]", " ", "\[Sigma]"}]}], ")"}]}], "+", 
          
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
           RowBox[{"Abs", "[", 
            RowBox[{"x", "-", "\[Mu]"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017256490459*^9, 3.546017457244757*^9, {3.546017489726901*^9, 
   3.546017516275889*^9}, {3.546018256852577*^9, 3.546018260098833*^9}, 
   3.546019563020585*^9, 3.546060105887493*^9, 3.546060175004406*^9, {
   3.546060258495388*^9, 3.546060300214475*^9}, {3.546060588816648*^9, 
   3.54606060801996*^9}, 3.546061640615294*^9, 3.546061890584713*^9, 
   3.546071477817601*^9, 3.546136827059069*^9, 3.546137402444307*^9, 
   3.546138989676323*^9, 3.54614806130983*^9, 3.546148521916207*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Ia", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Rule]", 
      RowBox[{"y", "*", "\[Sigma]"}]}]}], ",", 
    RowBox[{"\[Sigma]", "\[GreaterEqual]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016832069324*^9, 3.54601683491256*^9}, {
  3.546016912126374*^9, 3.546016916727737*^9}, {3.546017322178493*^9, 
  3.546017372508301*^9}, {3.546017463020216*^9, 3.54601752428375*^9}, {
  3.546148541316331*^9, 3.546148589155214*^9}, {3.546148703398337*^9, 
  3.546148726001202*^9}, {3.54614880197456*^9, 3.546148827190601*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"]], 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}], " ", 
       RowBox[{"Abs", "[", "y", "]"}]}]], " ", 
     SuperscriptBox["\[Sigma]", 
      RowBox[{
       RowBox[{"-", "3"}], "-", "\[Alpha]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Alpha]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
        RowBox[{"Abs", "[", "y", "]"}]}], "+", 
       RowBox[{"y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"], " ", 
        RowBox[{"Conjugate", "[", "y", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546018279534565*^9, 3.546019565998986*^9, 3.546060183851695*^9, 
   3.546060303687034*^9, 3.546060617535814*^9, 3.546061648930034*^9, 
   3.54606189059513*^9, 3.546071480580858*^9, 3.546136829650342*^9, 
   3.546137402591788*^9, 3.546138992333017*^9, 3.546148064234442*^9, 
   3.54614855158205*^9, {3.546148710882962*^9, 3.546148726676994*^9}, {
   3.546148818812681*^9, 3.54614882787126*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"2", "*", "Ia1", "*", "\[Sigma]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.546017553376211*^9, 3.546017578186591*^9}, {
  3.546060190028669*^9, 3.546060215541151*^9}, {3.546148778651467*^9, 
  3.546148782934408*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"-", "\[Alpha]"}]], " ", 
      SuperscriptBox["\[Sigma]", 
       RowBox[{
        RowBox[{"-", "2"}], "-", "\[Alpha]"}]]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Alpha]"}], ")"}], "3"]]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017581525956*^9, 3.546018298476216*^9, 3.546019591866922*^9, {
   3.546060198866893*^9, 3.546060217651798*^9}, 3.546060305919824*^9, 
   3.546060630129236*^9, 3.546061654525928*^9, 3.546061891049295*^9, 
   3.546071482133935*^9, {3.546080914253364*^9, 3.546080918402068*^9}, 
   3.546136831104139*^9, 3.54613740394295*^9, 3.546138993856325*^9, 
   3.546148065829187*^9, 3.546148785796602*^9, 3.546148829818306*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IF", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Ia2", "^", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]}], " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{"p", "^", "\[Alpha]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"ss", "-", "cs"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546018347393014*^9, 3.546018403066614*^9}, {
   3.546018436099692*^9, 3.546018441274599*^9}, 3.546019614310392*^9, {
   3.546019656617135*^9, 3.546019704529838*^9}, {3.546057935083661*^9, 
   3.546057940051575*^9}, {3.546060690488888*^9, 3.546060692698881*^9}, {
   3.546136907926816*^9, 3.54613692580183*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"Abs", "[", 
           RowBox[{"x", "-", "\[Mu]"}], "]"}], "\[Sigma]"]}]], "\[Sigma]"], 
      ")"}], "\[Alpha]"], " ", 
    SuperscriptBox["\[Sigma]", "\[Alpha]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Sigma]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"x", "-", "\[Mu]"}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546018404404153*^9, 3.546018443169971*^9, 3.546018629101108*^9, {
   3.546019667419693*^9, 3.546019705617033*^9}, 3.546057940717521*^9, 
   3.546060221228167*^9, 3.546060308848118*^9, 3.546060698993428*^9, 
   3.546061658414636*^9, 3.546061891057757*^9, 3.546071483795239*^9, 
   3.546080008567537*^9, 3.54608080405*^9, {3.546080909027874*^9, 
   3.546080920813304*^9}, 3.546136832732765*^9, 3.546136928984752*^9, 
   3.546137408183165*^9, 3.546138995440497*^9, 3.546148067504229*^9, 
   3.546148833831956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IF1", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"IF", "/.", 
     RowBox[{"\[Mu]", "->", "0"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.546017428290329*^9, {3.546018467395976*^9, 3.546018491191415*^9}, {
   3.546018587031472*^9, 3.546018597806486*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"Abs", "[", "x", "]"}], "\[Sigma]"]}]], "\[Sigma]"], ")"}], 
     "\[Alpha]"], " ", 
    SuperscriptBox["\[Sigma]", "\[Alpha]"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Sigma]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"Abs", "[", "x", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.546018482088292*^9, 3.546018491764403*^9}, {
   3.546018592076636*^9, 3.54601859900646*^9}, 3.546018631243809*^9, 
   3.54601904808341*^9, {3.546019682797311*^9, 3.546019707755424*^9}, 
   3.546057945478465*^9, 3.54606022766859*^9, 3.546060313691759*^9, 
   3.546060708677693*^9, 3.546061660974805*^9, 3.546061891066516*^9, 
   3.546071484501638*^9, 3.546079996627684*^9, 3.546136078734947*^9, 
   3.546136322826237*^9, 3.546136834719354*^9, 3.546136940787303*^9, 
   3.546137429657752*^9, 3.546138996088825*^9, 3.546148068176976*^9, 
   3.546148845460475*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IFun", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "\[Alpha]"}], "}"}], " ", ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Abs", "[", "x", "]"}], "\[Sigma]"]}]], "\[Sigma]"], 
        ")"}], "\[Alpha]"], " ", 
      SuperscriptBox["\[Sigma]", "\[Alpha]"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Sigma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"Abs", "[", "x", "]"}]}]}], ")"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.54608073954952*^9, 3.546080787340927*^9}, {
   3.546080827508503*^9, 3.546080832763547*^9}, {3.546080881724667*^9, 
   3.54608089839569*^9}, {3.546136031913543*^9, 3.546136106756538*^9}, {
   3.546136264957334*^9, 3.546136269166274*^9}, {3.546136300237964*^9, 
   3.546136302873075*^9}, 3.546136404353272*^9, {3.546136877306471*^9, 
   3.546136878124014*^9}, {3.546136974390393*^9, 3.546136995325726*^9}, {
   3.546137115334749*^9, 3.546137121892679*^9}, 3.546148882116439*^9}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.546078399638204*^9, 3.546078434270568*^9}, {
  3.546078523483738*^9, 3.546078526611331*^9}, {3.546078631725602*^9, 
  3.546078677869414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "0.05"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "0.1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "0.3"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegend", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Alpha] = 0.05\>\"", ",", "\"\<\[Alpha] = 0.1\>\"", ",", 
      "\"\<\[Alpha] = 0.3\>\"", ",", "\"\<\[Alpha] = 0.5\>\"", ",", 
      "\"\<\[Alpha] = 1\>\"", ",", "\"\<\[Alpha] = 2\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LegendPosition", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "0.4"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Dashed", ",", " ", "Thick", ",", "Thin", ",", " ", "Dotted", ",", " ", 
      "Yellow", ",", " ", "Blue"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.546071566443362*^9, 3.546071604772914*^9}, {
   3.546071664304524*^9, 3.546071734557583*^9}, {3.546071769565434*^9, 
   3.546071781503191*^9}, {3.546077877666447*^9, 3.546077878779971*^9}, {
   3.546078077257591*^9, 3.546078094273397*^9}, {3.546078128979278*^9, 
   3.546078131508565*^9}, {3.546078195525481*^9, 3.546078246143438*^9}, {
   3.54607831567725*^9, 3.546078368785814*^9}, {3.546078441904356*^9, 
   3.546078501052553*^9}, 3.546078697301196*^9, {3.546078795298968*^9, 
   3.546078819926423*^9}, {3.546078851304196*^9, 3.54607891370029*^9}, {
   3.546079894604615*^9, 3.546079946211399*^9}, {3.546136122778719*^9, 
   3.546136164810206*^9}, 3.546136449027762*^9, {3.54622939533012*^9, 
   3.546229401269654*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    GraphicsBox[{{}, {}, 
      {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Thickness[Large], 
       LineBox[CompressedData["
1:eJw1l3k0Vev7wA9RxpwtKkPOsLsqU+RGJXc/5UoDDUSDIkOipJLQJTJElDJl
VjI2UKlLRN5XxxS+lKREyJDhGI8MKfXbv7W+3z/22uuz3r32fvfzPut5Pg/H
/oz5cWEGg9FAX/9/v9RvJvj9m8ShkhGOGg0EfPVZOtX2k8RTY14Rvf8hYDez
c+b5dxLHsA+vTaGZvfHs/JlJEu+vsPssTvOr8Gixrq8kLo4T7+ioI0BM64MK
/g+JtQ/Pmp15TUCsx7Fdl5NJfNJwW83qCgLmxdbsPpJAYs26NNzII8ApdWLv
hlskLjlbp+FJs35VoNX4DRL7Jw7alr8i4NOyLLtjgSSut3mmsa+c/n7JoBe4
kFjxZa6BVRkBD4XOZzL0SfxpSeHCqecEbLB4sDBRl8T8hN1kAM1VmV+cdbRJ
vDK3J1aK5i6TvZr2a0j8qG+VJ6eQgKU3NAt5SiR+4S+nbvQvAYGKA9UhDBJf
G1yr5fSEgIO6R/lStVzc9mql3Jp7dHyCY82yqrj4ddyw450cAs631D025HHx
03fFC+RpvnFxk4dbKRfnzQWo/coigIeWzTc+4uI/RGOX1mQQoGXatDgmhosb
qwb0Nt0hQPS4yTqFo1zsFFi4MO4WAU02Ogf4h7hY+EfmHgbNtw8q+b604uLA
36ozLrEE6JmOVdrt5eIct1V2BjF0/HTjDz0w4mJmfU9ySyQBNUL9lw3UuNja
5kLg6DUCrt8OaTw6w8HhmhK89AAClnysdE2P4uD5zuDjsqcIwOp3rwbf4OCp
YZdEq5MEuPr7Zjpd42C9HifVJBc6fqq67WpXOPhgytBOljMB/1xI2/XMm+Yj
fUWc4wR0y/qoVdhysEJE36+FtgQ8NdMe6NPk4IInvO595gSY85Ic1tSycdTx
HIcOPQJWNvd2VFexcagnUdGznoDpXq3DTjw2DmH+u2/gTwISF/L2ZpSysZll
+uToOvq8dvANVzxmY+VhpV0CLQJOvzFYTsSysZzMUuZbVQKufm6vnz3Kxs1P
/dRH5AnwGTN0jexhYVfC/6+oCSak2OkPwGcWbtvrss9jnAml77QdJ1pYOFXd
5rbVGBN+PSePmNey8Fbl8L7lI0wIvCxuKpfPwsUSrdzYASaEE+/VE/xYmGxM
Wn28kwlJuq78OwosrKBg8fFMPROKvJJOPt6jgvPEG6yVMpmwO9qS/StRGX9x
szZU38IEk9SXu7cPK+JNdtnbve7IQHb1xZbz1gp4y+TGgFu5i8EmOFa+8d4y
fCI+MyT7sjT4HVvwSHLJUuyfZ/W+30gKGJosZHRFDhtIWnyPHpCAT9cSQx++
l8U5pobyuUbioCzhfP/bVgJ/2sCqbLixCE6tVxNtU5bBdiru1u8DRMFBv+Me
jyeJg+TzGV3bFoCa96bfbpliWDWZJ+02z4C7ny0qLm4RxT2/7nzLCvtJ9QfI
bzZZLow1E5aZSM9NUy9urTYesJpHdYPntHY7jlPag63f1qZOoxjnsKVVWd3U
3y/axOetxlE5rL9lCeXU2fuPZ4klPeifrlN/81VakfZit6CtXd2ouMSIeyq9
FU24ayw+n9eNPO2zSTnVT8h9832y2aQb6UjLFH3RbEMXGtN3x/l+QRGc6Q2u
1Gc0OaS+Y319J0p+KBtPFnShhUGzadvcW5GNdt5U7lgvCjW9UJgj1YqM793M
EPuzD4ktFdSJ5XxEQXOGARe9+5DEff50bdsHVKUk2pUk9BXJNHaY7jFuQZI/
7j1vl+tHy5UqZw8sf4eWKavo2VGDyMqJvNvk+xotmbXoiMwcQeHnzl+NLqhB
WgOXx/SGRtBLX94Z89FqZFRo/31i7ShaGePwV5NtFZo6lymRUzKKBCij7e1W
HhJZMvVAunkMqehu10gnXqChPUejnUUm0JUdA3OcoCI0p2wY3LtqAg3bXn19
91shKog5q3Bq1wR6cb3G6e6HZ8j+dLp+QvQEyquP2rrF4CEKLpgPdecIkM/3
t52gcg8Vqxm1GhkL0A5V2UsglIX894d9YbkIUN3vlWf8b6SiZ+Mz7NknAuR8
KOu+3/54dLqMOPqtWYBEnv3Re0kxCgXPLD78Y1aAQMHUcA5fQR03XRSlV0yi
8YREx4lEdyT7KzltzZZJ5CscW7ltwyGq76RTnpDFJNJKcqiW0/OnFF4VN3dq
TaIOhfxRSZnrlNURFV6NxCSy0P1YGrIllvIMVPAs/SpAha0HAkN9kiiCocN/
8UqApDGfrDicRtmSfFbFbQE653RqsCI2mwpgO5RNWwlQ+kZ108r8+5QEqU2y
dQWoWYr/qLIhl/JRLjPcLyNAKYfWb3IIzqfyPkN4e/UEYjAKfjuUPae2uHw3
OL1xAlXXt4brWtRQq3R2XbwrNYqcvT9VW6u/poz8HTeKlY8gsZVtIsELaqng
BzGZoRdG0E6fdr/mZ3WUk1ugw5uOYVS/ptP9glwjZdW89MPVp3zkbOSe1zbU
RFl/274+0mYQuaZ53VqR20ptbtRY1lDTizZplj/dG99D4ccPj558/QEJe8q3
OyqMU49T+x438F9Si6T2BtiPTlMqk7rmyQd6qKCuFiP3jHnKKPlPK5X8cepJ
csheP4EQ6HRraV/7d5o6k+7I7LUShdUveVa5eT8pm5NJK0IDxOCL2eBYVjcD
wvZ5btRNkYS3a59ksdUXgIjcra/+c4tBVjpKWMxVFD7UXRkPliHAPVDkTZ3F
IrD0sddL4slCRH15qZCOOLhK8rkNh+XgoJHSHqpcAlgPq+IWDsnD9Z123m84
UuBTZGQhk7wM+KH7DII8peFstmuh3loFWOW+2aPl5mKQEta31+pThCdoMMIt
WQaMT++/pRajDKuDEqT8KSYsL15xxnilCqz44CoknEzXV4ccJUJdBRrn+frn
UpjQu1inpl2HXpdZ4tWZyoQnjn9zPCgV6I/0Yxan0fWSeepd+mEV8Lra8PxY
NhM8TxTpM6JUILpOd3lgPhPey1swSuZVIH1/gJJMNROi3a9GaX9gQdsL0wY7
up7P1ecWXf3MgvFqaUYAXe/tV73t7OphgWdCqcsduh/otitoRY2zwMumoq91
kglD6ZZ9syJsiMu9E2I8y4TrUv0Bh1TYkN/vkTLDIKChU7xEcR8bbFV9U2sI
up+F7NFMLWQDe+ydYI0OAdmHxncUF7Nh/Vdbrhzdr75rRDm9L2XDuaLK2/M0
p71ruiPNY0OkWL9fA93fRthWsn6NbNBPmv5yYgPdv0qOzNgMsGGku8XmIkVA
2bhLOVuRA5YXyiKWmxEgWyHRsXkFBzZk3ykapvl4/MO5g2wOPN0eood3EyD1
14hulCoHjp1T1Ti+l4BD185mC+nS6++FRHIsCPj2h9e17l0ceERdipQ4TICa
dbBl5iUOmNnJnDZ3op8/VygrEsABed7MFc4Jej+hA40OwRzw1j/waYzmvmem
O8lrHAj94qoXTvtAmpQ8lZ7AgQ/l4a8KXAmQL8tanfaMAyPxyrYD7gQwONU/
kgc5IJk2vfOlHwFr9b8X/RjmANfjwTYPfwJszNQ9rcc5UPrc+IraZQJKLt4c
V5yh/7deuT6W9hPPpgN9iSJcuFeWH3IsmAB+0EBDPIsLsvau3c1hBLR8FU+P
seTCnGVfzTrah6r2h6UUH+RCJmvtQDXNha/E4jutuTC0aJnLEdqf4m4vuq5u
z4WTry9GBsURYGkl6slz4wK/Kfaf2gQCmisZOydDuXDkhGnvplTavzJnJsxf
cGFxyTfTHNrfXsl6DXu/5MKYR8bs6mzaby5Pf72NuVA9mCb5gOboI1NtQ1Vc
MDlq4PyA9r99cpOVge+4EBb/jpF5n4A3QaOJT4e58Gg0oeWfPDqf7Pu2yLJI
GG5P3FlE++YXkZzZW1wSxoQUlvxZQJ9XtvNjBVUS9nQbrHxMswKfr8zRJIHS
sOVk0L7qeF4ws9aAhM9tRRGBRQTMBf3OMztAQtj20w6sUgJUsxQUw26S4L7N
PKuJ9ueNJm1vpGJIKMi/Mq1P+7XpYEpoZBwJLImm+BSaz2myp+JTSWhcmVbn
QPt5aYHqm+yHJHxkX/w1WEnne5VuSEU1CSVhf1S8r6Hzz3lq8/Y6EjS9TdZp
037vLfF8sq6BhIgFqt/CaE7dvcnu3XsSbBt+nzeoJWCgBTZ399D7/+l+Mo6e
D+a8hSeP95PQK1zty6dZWqni/uAQ/f72jF6qnoB1tibLJiZImBP/XPCVZmMh
8QaPKRL+LnrI2kjPGwczaoNnZ0kIHOvvDKf5pPF1A9+fJMgV1U630fzfeQb+
N8/8H0ZODf8=
        "]]}, 
      {Hue[0.14213595499957954`, 0.6, 0.6], Thickness[Tiny], 
       LineBox[CompressedData["
1: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
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1:eJw1mXk8Vd/3/7nuvcbIUCFjV2WINCHqvXZSUpIQJanMJIlIxkRCKjKVVDSn
pBJK5WwlMktSImS4mZLZde/B93wej9/vr/N4Ps7e55y91mutvV+Po+p0wsqV
xsfHV8bPx/e/a9if3WPz8yw8uOmuRqtmNbBDFk+2kiwccXPe7Y5RNVgs7Jgu
mmHhfekcQ3/zalDZ6Dt7YpyF88OS36zxqYYP8VeFOtksPGd/PnXZy2oQ0vmu
hGtZOGAp++93oxpIOXVk19kbLFz37tu1l7a18ITf/x6fPgtfGPczMHhSDwxX
07Vyh5bhltn3umqPGkH6xyfvO0mqeH1qW4Dsy29g9THDWaNKBWvuTFV6JdsC
If82eyd2K+Mvy56kO1v8gtenM7zy9ijhqKsi2tu6OsHi6j6VuesK2Hs8lL7s
ZjeY3nxvsWNIHvcu3+cbkcWGBxVnmv0PyuHuJeZ/+Ur6wTE6ZVH9oyV4V63Y
e1e/vxB+ROCZqPRi7DgwFLHi2gjwaSsTW8/L4JVC9y41xI3Bz4vXLzz5JoXJ
OYPE9jcToCDi8XjCWBKzvleSx8qn4NgGTUarggQ2efxF5HwPB/wYbx4GSkjg
oCeKe7yGOBD8zXSnFE0Cl5JRe3dNcCA+wPWK2R9xjK7XHOKjz0BOQZbc6xfi
WD48etUG1gz0b1iik7pdHC9MkltZcmQG3PXodnt8F+Ab7r8+/f0+Az7M5JkB
pwXYI/Z5pW7HDAQ2q2bG7FuAh1YGNxxnz0BMIPx+b7gAp0qa5nybmIEHhcHH
VjEW4KjZ4N/2klzo1RuNEM4Qwyd/C+Vqm3HBWb/90cePorhfd3HWuXwuuD3S
t91eJIp1Pt7jBb3hgpdckkBljijmeU3beRBc8OVtdaxLEsWToxE/1lRzIZR4
LN1yWBSnPlvl4NPFhRTTgPBhngi++CRux1kJHqS/rtM6+U8EyyxQfjEvw4MM
DfWW8S4RHPjBWP20PA+yRFvXzVSK4H8VNAGL5TzIrUf9AtdE8Cq5nCfXDXlQ
bidmI7deBC+pTUjKcOZB5WdX/syVIvg/04i9yR48qNlIPFNaKoLvHhGTjzrO
g8alfsJqNBFcdfX+WdPTPOjo+F6i0yCM36lP4aPxPOC439Uw8RbGEwqHntc8
4wHvB9lcflgYc/6Q1dr5PJgzs402sxbGnuYrv0UX8YC+SrjDwlAYdw7udZPB
PJAc8Uk5ICSMQ/6FBxc18EAzyHDe554Q3i2T3kj+4wH+ZaHZnSaEW1d86BWY
4IHtVud9dnFC+GX7usLZaR6cE094Aj5CuPT9Jo3KeR603Ptlt9BACAtycOw7
cRJ8RMbORWsK4cch7CJbKRLovsxnHAUhnHj5/LeuRSToGq2m/+YXwim9//k1
KJAQ++Xs8xfVgvjkoaMmcxokKOmnti4vEcSK7oI8NW0SXmU+ZmY8F8RDTfmf
N+mS0One6HAuVRDbZXw0BD0S9OdYwtaHBfE3oz3HE7aQUONssL5iryD+ef9l
g4EJCU6V5oeNTATxZOxLr2/bSbicElDA0hDE7pfT69t3kcDWrDg6McbEphJr
dVfvIyE0sTXBo5eJf94uUrC3I0Fq6l9R23eK05fbnjpAwn+lsuKf3jHxUxUx
g8BDJDSt0N64MY+JL1wwv3foMAleCVtccrOZOPAxvXfdURJS7byKU2OYuLzr
vedTFxI034f3Cp9h4kiT3b4WbiTgZckLw48xsWymb0O7OwlDf9+6uVkycePy
nypVXiScs25I+mnMxI+DTjSqeZMg+6bnncUGJnZ7qHfk+HESTKIXSOvLM/E+
T6OkihMk/OxX/e+JGBPf2Bw18cOXBN89ep7K8wzMkJZ89f0kCcyCnSnJowwc
KhmV99GPhBvyhwnBHgbe17a7PNOfys9Z/4GQZgY2cH733ekUCeW9FxaNfGbg
qpf/PiwKIMFhVyZyecvAaz61uxVQPPb8+bEfuQy818r2zpZAKp+LP6WZZzFw
522OdTHFSqEtpfgqA9vu3WyvfJrK5++/Q+vPM/A1/ZPJvhTvNKXJPj7NwM4q
hb9yKe58unirohcD596nLflOcaCUlk+SA8WkquIQxWJBcJ2xh4FLy/Jr/8fZ
v6zLzmxhYOlmLWYLxWt71nKb1jPw7YOWM/kUlw1I6uqqMzCfx+u2UIr3jY64
XlzKwJGoJ3kdxezp+htscQbe7riW9oP63tNzz75soTFw3s4OES+KhRiXBW9O
0nFwCCOpn1rvddHjmzl9dPxX5+ZpW4o1pcz9rdvouMg0NPs5Fa+3slqPn9XT
8Wd129FpKp7myiIdwh+p8YlvzVZR/Gt5v4xrIR07B8pf2k3F32fV5534MR1r
dL2/eZDKz/zah2eX3qRjy+raQ7ZU/hI3xhQGJtLx/KhF3mYqvy+3myzTPk3H
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
/D+wmxA8
        "]]}, 
      {RGBColor[1, 1, 0], LineBox[CompressedData["
1:eJw1mnk0VV/Yx2XOPM/DNfaLIppEPCeFREWmKIqQSpIkMkQoZMicMitzpcFY
nC1DpjLLPERmMl/uvfHed633/eec9V37nP08+3v2Pvv5rLWl7O5ccKCloaFp
pl7+9+47dXZlZ0cGNbolHNp1yhkmvQXWBygyqIY936zzljOc4xohlm7JoJE+
+YbBWGcgHHP9d2dVBjHpZbQmTDjDt7AY5tFJGdTXmPDtfchtYFb6JYF+yKCc
Vi3L8gEXiHO/auD/SgYZqibTffjlCv+Y9567/EIGZbBoHrv81xUcU5aN1OJl
UOx64OH/mO7C0frH5kuRMojmufUhmaN3oV/wje3VxzLIXzBPLf/FXSB8mXmA
3ZBB3v3e4bJ2blCw695rmqMy6PERg9dCXO6gZpLPmHRQBl1vmhxPUHKH+tdj
TioHZNA16SP12mfdYVTPaL/dXhn0+TfrI9ln7iAQub+kRlQG0QZaKAruvg+P
Raa/P6GRQfnigv/W2T3g4kHrObYmaaTE7VYUo+kJk0FxZ9/US6Nv9PDwnJ0n
3Otpfq9ZI40adpOYTjz1hEgvdXeXr9Ko7bPZ++Z2T6jBBf+1vpNG5A19Jv8b
XqBk2MERGyuNShOOy73NeggMDnqqwtbSyGu/y9w9HV/osFGxmLOURgd1NL59
cfGF1IuiPpXm0mhFXqfj+AtfOGL4t87WSBr1pyR0zc35guPBRMv8k9Jo4Z72
BkOCHzTsmvLXUJBGdnzyWa7rjyA89UmrNVEKEUmTGR/vBsDFF65rymtSyNXk
r/qxsACQjbESpl2WQqdy3haNZQZAZbDStexZKVQnwDHzoisAFp17NhaHpJDc
eEXSm2OPwUhDXsK/Vgrd/JUta8sSCLy9dc6Z0VIot8iVpvR7ECDFjJCgSCnU
qReTcXIiCJwf+bx2fCaFmA3OV27QBEO9/MFBhWApRN9Lq9yuHgwP76cbfPKU
QsLXVGMuFwXDbx5vhdorUuiZ8cAEKfMJfDx7YPrPfink2/V8tjUnBK5ksNI3
KEih6eTSlpjGEGBbn5TM3yOF1MgZlMdzIeCYnGLhIiWFYOSl6rxyKIjMsXzf
4JNCRv8uB0xXhMLjkD9vmCgENF1kvFbZFwYXal5e29tEQF4Frg8SjkeAbNfE
8Pd6AmrXfxsycj0CNiaUrBxrCOiMwqzJ9dgISGKsMcr6SkDjJye9Ds1FwKj+
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
lX1JV5bKM+e8PH0/WRLhU5KJtTmVd9LjHn996k6Ev5UMt1WoPLTyPpx8KYoI
yZZqMSVUXjrVnKB+IJ8IXH/mJyepPJUwme5FX0cEhgOOj2uovDW9q6Csd4QI
rx4qeZ2l8pi6eDGxkESENwHiQ8FUHa6GHwng3wRLP5vK21Q9bNJ43+zAJngJ
e8gzUvWBO52f9xpsAu+F09JG1P4ehw2t/nPYhBkLiTJDaryuN1OqHf6bkG9Z
OE+h5idfvXw3+9Um7OgKfrOl8qbnILnoYckmJD4hHfWh8mgTkWHpXPsmHEu/
bXCWyqtivFzKMvObwDqwm9hN5VkXJREXIuMW7G77qypI9Qvpy75tlqKus6WW
NW6qnzwOSvNpx7dAgm5M+TvV75JX2jdPu23BWf28DnsqTzOXGuaJRWyBju0M
33kqb1t1mE8v5WxBRd/jYCKVx7eZbzkmDW1BQ6BsxBMqvxvJ3n9ze3MLhv8Q
5l2o8yMTHk2c4CWByMUbu4UtKKDjEWs3e5oETXHr68UGVH+jUzKqrpHAvUnd
O5/Ka9OFOaMxfiRoH+lVsAeqn+NfbDQ+k+Bu/35rBVWqP0YTVuGSZKAJ8hoX
ovKYvPNi0lV1MsjqsKefZaf683Sz95AZlbM0TTfPMlD9qGKzGKJyUhwpPuLz
GnX9Kh42UdogQ7y1vIVSOxlKdCGGlps6jpafrN3fycBsp9/eo0j9blk2hmer
yFD4wvr8I+q4XovPnSrOJ8MawxODthYKsL+09fAIIEPgaM9Jt6x/UOJdx26y
hwzD5Qa3Pb/+g8JVOj1VKm+px6IEv+5/EEmYUl7hIsOSTv5MGNM2GOwcphUg
kcCmwDcq69Y2iDqa05CbSKDuITvQdXAH9odStDKuk2CL4Vi5KHVturbajFlF
bUHRqydGfiu7sE1WOcT7lgh3Mu25JswZMI2t/iyJk6tgc/Ol+NMAZuyDVo/k
ZP4ikPt2/1yOYMZOLYY2TkYswgt9L7/LL5mxT7V3vhFdF6H9v4sjKp+YsYRc
nYUzRxfh1BR/xuAEMxbKLCZdVrsAe+2jZVVP78b2xbq8/fp7HtasQxSHOFgw
Y7Uct3bFOQg19jh2MJkVO3RaeUxnbQpiWhScC/NYMaL15t3XfVOQrDeSKlfK
il0f3ZkVwqegSPM0vVAHKyby+dGrk2FT0LtXpJXCxIbFprVypktNwX+0Vfb1
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
//PJ/wOK2j0z
        "]]}, 
      {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
zw6Hqw7My0tU4u/HuT7qOHLC/wCcdxmy
        "]], LineBox[CompressedData["
1:eJwVVnc4148T//D5yN57xccnhJTMwvd9p6gohaKIlFBSEiUilUQZmdGQlYym
lWhYoUj2yt6bzKzw8/vrnnvuXq/X3T333HNUm8smdvQkEmmajkT6v3W1sQpP
FvkCHwf5ivfa8hbaJquW2i5+hZ0ytFcsnjyFtjIWpcrCxVBmuMdQDjgLlURZ
Ol26i6H24/Pizf3shaucn/5mpnyDO54uVYdC2QqjloS3qqiXQobcaZOGVebC
75W/A1SO/gBr61b2XfIMhefdW7+fVCiHp2sBTqwT5EKmLW0UX3IF1JzznMWP
9IUGnu3eDVk/AdhlEnTPkAor5bpcrvFVg0beI9kuzsWCi41d75+PV8NIpc5V
KuVvgR86/7WxqQG5wqKrnAxzBbLjziqBmrVwPdEiZUFhquD8Xpe3baN1wH3E
4f4gR2/BriczP/+Y1YN5StBrwQsdBUx/XEbJ3+ohc8VrU2lPU0HaU1fZbc8a
YJf308nfcSUFo9NXE7wONgGX0V/yjc5y+LR/viD0YxN4c1/YnXyqDgKeX+tM
ojUDh4dAJiWtGRT03UR/rTSDDy20vnS4Gy7GX38k/uY3tO4b2/Npzyho/13I
2inUCpZxITvlnMeB7ZB7nZ5vK/RMVv2qD56EtwvunE6WbXBU8Vx/iOE0eBsu
Kfr8aIOSrVp57/Vm4PALj0NRqu0QFFjxIVB9FiYP33iQz9YBga1dTRzkechP
Wk6pc++A2IN6qeud8/Bw+UbZYH8HaC7/JGH2X9iR7Enm/NoJexhu+GodXIRc
7/z89+rdUO3i1lmzfQXi09Z+5V3sBqFGa6/5lhW430B0fEvshtVL1GMuN//B
CfmClWaOHiiDTZTJD6uApussvbo9cODdnOxWgzXYehtExm/0wNynFerO32uw
1FiwizTUA6sFt6wlh9ehl0Q6wCLeC38quro2q5KwQgGP8x3thYM5a8KVV0j4
9E7hta0FvTA0YhumPkhCTcWiTKPoPji8aibwNpsO1RqaovLL+6DS1bGfuZsO
lTzHb2z71wdHAu8ZpDHTo0y54F6mM/3wVqg/reE4PVKdFWXdIvrBQ+f4Cxcv
ehQT3MvaX9oPUbNX1a/H0SOvnVN9gfwAmP/O92jqpkcONt+PilYDYDzdPKOz
To8sWU+ePQsZAMektMdqYmQk0ZWevT43AFqO3+wbjcm4ktK6f0BmEJjv/VMJ
u0DGv4enFI6aD0LApRn3uTtkHI8RnduePwiz7I81qt+QcWjvzpaYqUGQenta
17SQjL2j+76w0IZg6e/Wqbg6MnaGWca7mw5B8gkNlZw+Mv7e5eI76D8Ezy4R
g7GzZGzo8j9/7NMQGDp3Fp+mp2CN3/NDxeNDwJqzxZaei4I/FbOUlCSGYVqb
eX+AGAXLGn7wxRoPg+HR0Yo1WQoWeXYusvoOwx3rTcr2yhT8IjXX7pEzDNbV
swllWhT8WM5cNDQ8DCtqgltkdCmY6Szx0lR0BOJiBZMDDlLwraDag2+GIxAj
ary8ZEzB1HyDSztvj8DnaL0Wj+MUTLI7bRyXOQIPplg7OC0pGMfmpsY+MALy
p78GFllT8GlWoLCn4CgMaPcYRtpQMMoiYXVYfxRS+Jpdg20pGEb3scfMaxRK
5EEt046CQamVpSXvRqHc6kwGoz0F/Y/0pin3jEKoZ/if8I24z9+F4HjeMbjI
/LjrxAb+5nN2F459YyDix2JxaoPfXZdm5uU+BnYKOZKpG/quY7s0R1+NwZLq
cqfmRn1O4Yc3n+gYA+ZMGXnRExS8sNuWvoxzHJSGWu4YHqWgXbfHoMqecWDZ
Z2bUZEjB0/4hFQlXx6F5fWA0bz8FLbe/fMeZMg6Gu+TC/yEFTbxq3MZYJyBl
m1DS+50UNKQNWpgTE/C0u0phqxwFD1SsEN+dJyBO7O8ypyQFCSFZxheNE5Cq
adOkzUbB3QXaY1xMk6DzLfHcAzoKqtqbVHtrTkKywrDBsb9kVMi+GW0RNwmf
l2sOunaSUeZkhOeP2kloF1Y+XVVLRin6NGt1yh/YJZKS/aGEjEJGDbI8Dn9g
JPOyiXoaGend+NtthadgB12G4YlLZLQ4/aouV3UKlvveK/JbkjHTAMrZjKag
xrnO55wBGW0kHHKy/abAp0Oxu1WajMU/voRS5qbASSHD3bKFHu+K2uolVU3D
MzqVlZDt9NjOsKS1ODINlTPJxQpC9Kg6Fax8iGEGjH0tpB/S0WN/yUeJOa0Z
aGje+zO9ng51nViX96bNwNv7sl3p1+iQUpT5ru/uLMSunJMMyCQhI5vRHZvJ
v8D+iDX6PvMKnJC1KFRnXoD2tKY0qZZleLXHdp1lywIUmYaV/k5ehsMe7jez
zBfgtEvL4yTdZYgajPeglC6AfnzlfM2dJZApmr6S/GwRDscclfYnL4KeW4TN
6IFlkN1HvCqUn4eosOcJ+WeXwdvt238ra3Mw/CalO9x7GTRpxD2n+jkI6vt8
Sit7GYxz1lpJN+egwajfIkhiBSwr7ih21c2CrYLa0e1/V6De6SXf9wczcLe7
aa/Li1WITlKafyg9BZ15By+5f1mFRqPAhe/kKdCMKIzyblyFMAO1jkslf2BK
79VIAOMafEmclrsEf+DU65shLxzXIPdM4hu3jT3QdNvS1qCyDtMNL5oidMdh
iWF3nqgNCYtN9NJOpAxDssvsr1gnElYfOMo46jwMx7re9lI9SUjn5PGwS3MY
0nOl2LZGkvBAwFzEfPUQ2DuyWauWkbDronVY8dogNNR0UQzl6VCY5di8r9MA
pD/zM/KeocNx+M35PKIXfvL6DXGS6FGgrrLFwK4XBgPveSew06MULb/TSqMX
xLx835RspUeLArJSRnsP3Lf0YWK1psfZgPW8FYUeOC3uXRj9cyNfaPratrwu
8Hx087jcb3qMF5xbfHa+C6LYb05+GqRHvcSju4qFuqBy1VOsk27jbuoHLCl6
dsKuTg/3LbvImKysPmt9oAO44q4pZSSRUW1vf4QIuQ0UBK9935NJxntTDto2
X1thX8jVUw0FZFQ5W8Zi6N4KXrdcgxZayVg16GvAOPUbhq2vDP/HTcGc6f7e
8cEWKJS8FF9xk4KBV4ZErk43weVEW65+MwY8HbhFz/FKPTz0eBLz8CwDXr61
b0hHpx7eGVVt3e3MgIpPPor6c9fD5JqGzsMHDHjX52eNeVYdXDzJ6rLrCwP+
3dSUz/SvFi7wZdYHUTehg8Drv3XxNRAwNmitsX0TUs3UQ7Zfr4FXxaLjPZqb
UPyKXPiYYQ2MON+jaBzb8AlRR/alajj/64Raj98mLJnSCTn+pQrs/daj1MY3
oZgdnQanXSX4WanSuhc34QMx3mRt8UpIVnV4H8DAiK3LLWN8TT9hoLfue9dm
Rjzxk/lwof5PsIXkxQfGjHjMMWxn264KsFk8ZNGZw4jFOf5af1R/wKkLT8X9
7zBh9/h7hevPSmDlN3PVdDATTi7Ga187VwKP9T28LZ8y4f49mzmmVEqgduuJ
rp1ZTHjSqynteNU30B3iT2jvZ8IXLH6qtUzfQM42bIvyAWb8XaXv7R9RBGX1
pMaYY8yo90FCuNG+CGz2Ot9jPMOMVc5myiGaRRAjdWSw3YMZh96Uc+v1FQJH
D1uq/2tmbNMeOvB8dyHMWd1X6OBgQflPnUfOzXyF0F8LbftFWZBnD7//h5df
QfG/c0GZsiz41k9/vMD8K9iL7ZvwRxY0Tkv0py/5Ar9bye+VXVhw0KD5PVfC
Z8g/fkv5fiMLfuM34h3xzIMHxm67VWJYceJ9idpc2gcIr5S/+CaNFRvjjpnT
X/oAMfu7YqU/suL0jZ7vH5Q+QPp/ByhCdazYwvdslOFTNrTIiVT/Y2TDlUNb
O8QbsmArfb5tmSsbphSOO/zakgnKN12i4Q4bHnDRqLoynQHaizIVuQ/ZsGmM
VJCYnwFGkyE7XqexodEZ/Ygkiwy43npmOaSLDT9eT+4mPUmHskyGUPOD7Fjb
1Xy67eQ7qFH8VFx3gh1F3IZCLjG8g9ZUp/mD9uz4z5KmNfn+LUzGNlsQd9jR
tptOK4PxLQgEpknTPrKj24B93HLRa7A7a/h5XIoDN6VkTUdYpwGF79HgrWUO
tCzNJJXveAk8k94cPIycqMrLFzH4NwmoP86rJ/Fy4j8y66/H+UlAeGn7/djG
iXT1vrYfjiSBR3+fNLc1Jx48vyyS4v4CJrOV7RK/caLyPfszGv0JsPpQLFi1
hhOnVD/ELWQlAJvDpg9l7ZyoWBebp+6bAHLirZSxeU6sZNnvtU0mATKLsU6Y
jwt9KIE/6i/Hw7j88BWbfVwY4Kjzi0M5FuYEO+69PsSFP+zIU/rdz2GFUvdk
zoQLeY+361uFPAeWrs9FftZc6O5vSqFMxYBsRAj3a3cuDOYItRH4/AxsVtQz
Zl9xoatpfN09tyfQ/PPelC8nN369mfhh77VHEEk81zMV4Mblrm0KtWqPwCQj
+6m0ODee/FN1WGAhEqqi+nTL5Lnx372giALPSCg7o/OEcR83itrNDZoFR0DO
wj+dAC9uLLbNvzZVHQZXL/BFW9zlRnnpk0o8z8JAuUNhXD6AG3UNcwt+2YfB
u2KLqJ/R3CgQFxrOSgqD5ODcUbYsbnRaaPVx3R0KUbSrESEj3LjOVzQqHhwM
x6ICh62nuPGP9kdpQbVg4GF+8Z/SAjd6lVh/4u4MgoeTtUM1FB78rjx8Z105
CPzydmjzSPLgm1MV6peHA8DtyFh/pBkP9hbyOOjdug+qxfSadlY86GdNZmBX
vw8zqiIharY8qFSrkPx6wh+cRPR3N13hwYe6lSdtrf3BfiA5WDCYB+PzfQrv
HPIDU08b9affeHBsaKre5aAvRD3n27RQzoOPd7xbfsLjC00FZY1Ha3gwb7I2
z6r1LphRFK6xd/AgJH+/lO14F04Ez2bd/suDNfHvwq888gGLON+d5+R48dan
rIhq8h14WqROV7KDF4nK8Ghyw21o6xuukVTnxeTdccWfk26D5VZD59Y9vGhG
77acuf82WGXwvze05MW4jp12irK34PS35G2qIbzIf+fiT2FfL4gfOPEv9BEv
2uQcrClT8YIeRtbKiWe8qJVmnmXS7wk2hy47pqTyIu+/kfjV/Z5wtlHjlUgx
L97IETGyFr4B9kM/ZOnmN/QbicvWvdchmdlzwWqFF1WHQ86PxV6HIQXF75/o
+FB6KEpOxfI6nHcOs7/KwYfrN5+SJ1vcwGHJ/OWQLB/Whl/Wa229BhdZx6Sq
LPjwkdjif0NrrjDm8YnCeoYPw9m1OOy+u8KF4QeD+8/x4Tk2xo4boa5wrnTr
qyJXPjRKzxE4v8UVbG7Z7/wQxIfcd+P2iR91AfPZHojJ58OYaB6lxApnaDmT
Qf1dwodPC3dtHnnmDGY1t8kCP/mwqlPeKv2SMxx7K/E9pJkPM5zq7T/xOIPR
OavDd6f4MNtWe8+OUifY19ZieUGKH39Vgk2W0kUo1U8lUrbyYwEX81P+XkfQ
zb0u2b+dHw8waJkaRTqCziOBfistfvwR66C0b+UCaB855mh8jB9t6fVL5+oc
QPlbtccuP35sa58cupFyDjJ2xp28FsSPLxRjJKztzoFSvNN/meH8yO8fO7BE
OweKN9nptsXxY2BRvPXBF/awVePgfYlcfqz9c2R96ys7kHhdFrVplB9PT1dX
qTefhWNxuXkVU/z43sf+7OLTsxAQ8ar94QI/yvsn/XKyPgtzng+lBBkEsDNw
pfLKqA1UHDJ7JyspgJ/feV+MZrIBt8mB0gNmAsjzhbfj9dnT8Ka3eZjNSgDn
T6VXVe48DT1N5ay1ZwUwVnjf77uk03Co4K2x+RUB9DHnD7UAa5AKvdbhECSA
HbrVgl7lVvBrJ8N8QLEA/mrhlG7iOgn0MguCR8oFcMdqXOPhfIuNP35Ek7dG
AMvfnQoovGgBifS/bj/rEMCzcqdd7laag3t9JNubRQEMyduitCv6BGy5tmXL
r+2CWEvJCl03MwMLB4H9YWqC6Gmr8COfxwxCrJgumGoLotKTV86Hqk1hWW/8
fYe+IJKyNnmUG5hCjUC21qStIDa3uL1lOngMPHP3HuV8Joihl2bok5xMQNmy
Zso6QRANaDTxv7tNYHTd8mF6yobPTTrWwWACFvvdyo2zBfE1e3e0bZwxaDal
QuQvQbyYNjIt99sIFmfZtwmThJD7xedU18rDkB79tNxhkxBW8G122H/1MJzX
kj33iU0IzzBS9/CLH4YWH0w8KSyEqYrbjCKvGMJHblehWGUh/K+LtN4gfQjc
drRQaHZCuNCm7EPN04ft9baJro5C+C0klO3UZX0YdJuGkitC+FhEW+uijD6Y
5rN42nkL4VDxFbO5qAOgavjfdEq0ED7XqIi5emc/zF5I7NhWIYRp3vpqJjf0
4BXHDs+bNUJoUGyNidp6YJP5WaiqSQir1e1mE9Z1oW6p4ejlPiFc2ZTzNNVf
FzLvM1Zk/NvQu5AhEhu3F5yTL+ao7xDG9Cf21MgJHeisFn3EoS6M1fkHZHI/
6IDhUoXroLYwWn31KrvvrQPyh+R2RhkIo6XmfKwsjw70Tw+8nrcTxl0s7a40
HYTj/1knZMcIo1hw2IMK9/+gzJ7jdtALYRxStN9dK/YfqIZ+PWX7agOvbJM6
V6QNXH2iYny5wni3P0XOl1MbKu63RLnWC+OLfZb55z9qAtFgHKTMIoL7rB8k
3tbYBW9WSY4s3CLoXbC7pHpMA0Rl0/V7BUWw0kznFXOCBix6cDCGS4tgW8Py
PWUODciU+HlnGkVwof1RKuusGkg76l5Pvy6CMUJr+SH9KhAZOWt631sEWXeX
rhkkqwB9fqLq6XsbepHfc7+fV4FOLroZzggRnC6XPPrvjzI8zvl68fI7EUQD
/vc8jMrARq9hs31ABDUni59wmClB3nXy0cExEeywpD4voymB/UT13tgZEfTx
yI9Q6t8BhS3npTlIoni1YegLPXUHuL5/OjwhIopPi2M+XElVhFbLNae3RqKo
ofS7zGdMHvzrKqztjouiANNnl4DH8qB6INpI/JQoGnqHCoTuk4eHKkrKwY6i
6Jg6sefBSznQYbGZv+gnijxPfdl7nLZC6sdSz21fRPHOYOa7jG0yYKoYfrG/
WBR704tu7RmWBvoXp6xiykWx0OuT+MskabB8uECwNYsiZ/fJ6kYJaeC0k6Mf
nxZFwauZ3AkSW8CNJ/j+a1kxFL577FfTHimg3Tf3OLtdDJ81y0g4sEhBzar0
BVE1MQSTvIzUOirIj+QfDNwjhpSRN9aydlToLJjicLQSwyuDx1+OhkmC3qVj
j+QjxDCQo5H0gXszXA3/TLr8RAzZmnJf9X0Sh6SPUhez4sQw4pDvFVY7caCn
n96j/UYMj5ia7Nf6IgaFUcFThqViSHpSY11zTRQ0C8sOXlkQw5ABYlsgrzA4
DCh+/LAqhox04g85fwrBY5ZHUstkcZzMDFayvSsEC8fOLvlwiePr9H3zV/8K
QvbIenKknDiGDjwRmx8QgO28u+lzT4rjotS4w4NhPrDaFX/p3xlxHCaXqjK/
4YMgK8bfeF4ck21sWTWc+WAspfF9+VVxfH7YXuzRMi+kartYtQWL44LMxSJp
QV6g2b/OXSsQx8IR6gKdEzeYBPJs2VsmjltezjPc0+IGn3SPEP9KcQy/uPv2
E2Zu6F7eb8/1WxxPplhpOadwQWxIP6/UjDhK63jXG9VzglCe+GW9LZtxNFiF
p5OdHdbOpohyK2zGm2b3WEIz2aCfY+eP9p2bse/wqVPWJ9gg3VaXehU2Y674
L4MDKaywn8uxPtFiM0Y3rPX1G7OA27lcDVLYZnyzo/jX9WZGsOTZ0/8zejNy
VZdHuAUxwp6vP0OjYzfjQe9KjtN7GIGDt2tk+5vNeF/wT8lQ+iZIzmeIsfq+
GQOrJm97PWaARv6jpM+rm1F3ZkbOIYQMnwrb3/hRJJA3tyGh2pgM8Y725ias
Ejg581FwgY8MF4s8MkeEJDCVSIu/9ZweKJfibYVUJZAvdG27xkc6UC2Z+HHt
ggQ+FBSgHWclgcjl69d0rkhgqPRWTr+MdYIkQifF7i6BdsbztGeG60TlZT7P
pHsSyPBq0/dLD9aIs6JaivXxEthIH/DiIOcqEe5yP0ypWQLzpR0iS4yWieXK
N7n3OyTQXPfQshp5mbCRre3q7pNARyWX5oCcJUKlXXh72JQEuvN5JTRILBGj
iaYDixRJdNdZz0v4t0AEsQ3dMd8siSJXs1LJHfNE4W6PR/eokvj6pMnZezHz
xJw9a1rGFklsmDvvVmI5T1gW7ahhVpDEse+lTC5dc4Sim/vmTxqSeF8pY/zI
xCxR1cX8WcRYEufWvYpM5GYIevaYqn3HJPH9S3He7NlpQl1ze6/LcUms1RZf
ysyfJmIjTZh/Wkkid0/rMR+zaeKy/rPjnhckcTBWbYd68BTBlbVtru2uJMot
ijfNyk8Sut35jEz+kpif16RRXTtBuLMbi6oGSGL4UFhDuscE0X3u2p6gUEnU
ucNWcaNynMgQyw/Vfi6JO1q7G5pvjhEmfkcUn+dIonQmo8pe9hEi2XxKPy9P
Eid/JL2NKxkmlraF2Td+kUQ+o9S2X17DRHx9XRz7N0lkoir8efRniJiQNOPx
rpZEGs/eD5Gdg8T9z5YLp4Yl8UlNXZ11dz/R/nCV13NMEnmZSo//fNFP7LCJ
VYqe3JiP/83hgXP9RBNTt0P1nCSa+tw3lZzpI2hmZ9uBjorfThu/v8rRR+RP
ORRJilCxcv6c/7ptD8FTwtKpLU7F2u0cOZ7KPYRd9OvlE5JUdG2l+/eA1EOw
ERMqYTJUtFDxRbPYbsI80DmZToWK2dG3k+mKuog56euBvQepyJB9TjZopZ04
sCSYunaYimouupzGKe3Es8rcEhETKlqTvpYyH2sn9rgur5qcoKLG+7A3B9Pb
iJDCm87fbKl4S+jz9TLXVkL+pK9p0s0Nvtbyo+ZbWgjzKzk8lDtUzN96akG1
pZm47z9cfdaXiiVwpGo9qJkYyDpkQAukomQ/6+XjS01EPBs/JD7eyH97tDu/
vZHgz3+5NT6Lim1z+SSOynpCt6F5YD2Hir8t/IzDgusJl1HmF9afqGgXoib2
+0g9USPgJC5RRMUgW9eAN011RMBldZ7YKioyL0eZUSdqCRL1+8qzESoGf5O3
P6xVQ+zQWMpdGaeiy1hEMRNTDXHKUMHt5BQVp+V+Tf94VU189giZElnYmIfu
ovRUXxXhVnd84AlFCmXqZKyzbX8RY3eHq6IlpFB7oSqtI6aCEHkqErQgJYW1
WWl+Xw9UEAfSD+kfl5HCnqEb5snz5URye/o3AUUpvH2ycfKeSTlxWs0j95Gm
FD6kTjpsEfpBNA0yJ0aYSuEJNuMfmjWlRNmxBzF5J6Rw/BZ5b01IKZFTzBTd
dVIK7aY5DGhGpURULGOQgo0UitddNV2qKyFMzRjcvjlJode2djn5nm9EQynJ
YNZfCg+qP25tES8mSlRu6woHbvC5t3MYDRcR2QnrBDyUQltryWHbrCIi8uaa
SmCkFF62NTY9fbCIOKr2T5yWIIUq0iw1F30KibqkhWmTTxv9/5c6UiKQTxTz
XB93/yqFmzxG0yu/fiUyb/8djC2UQj01/+RWu69EuOV822iZFHpXLW5ezf1C
GPPNlvrUb/QXZ6PJ4viZqLk7+SRzXArXDBT31azkEoXTlyJb/kgh+Ytpdn9G
LpFuPfFwbUYK64THNtefzyVCtcbvGixJ4SvDhUmV3x+JI7Mjl3oZaGjFs0mj
6FsOUWUzoMMjQcMhDN6x/jWb6KGkLD6SoqFfyVZJb49sYi75/HthGRoO8m+L
7FTLJoTHxsSoijTUK5C4sysji7B1nVnYoUVD/YmQerrMTGL57vpbw+M0fM2S
2hH+O51glymyrbWgoWz8Q7G+hHRC8oePqOkpGi6e4K0ZvZBO6LFtemBpt1GP
h8257WvvidBINltHVxqGkve27bd+R8i8FBZ5EELDxh+uuw2sXxO797fVsEXQ
cLXKb62E8po4NBLjHxpFw7OnVndeeP2KuKIoOR/9nIaHnryN3fIvjfjyQaYm
+TUNPQ6YnJp+lUqYlKn4lXynYZCl30S1ZjJhd35e+8BPGt6t2GmE0y8Jd5aP
sz+raOgv3nb2RepL4vlhzTP1jRv8w3ZKaiIvieEm1O7to6GyaHy4MlMSsexO
P2s3REOvj8T5vtIXBLtoSdrIKA33P07mv+z7glC23i84PU3DhpdPi1gpLwg9
Ouaqq/M0XI/6qyVYmkiceFHhu7hIQ4eIW/dm/BKJC3pBWl7/NvAad2ee6icS
N4cMZ9bXaUiS5upmZ08k/gdNdDmN
        "]]}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->True,
     AxesOrigin->{0, 0},
     DisplayFunction:>$DisplayFunction,
     FormatType->TraditionalForm,
     PlotRange->{{-10, 10}, {-4.84791472675868, 6.352650340225383}},
     PlotRangeClipping->True,
     PlotRangePadding->{
       Scaled[0.02], 
       Scaled[0.02]}], {-1, -0.6180339887498948}, {
    Left, Bottom}, {2, 1.2360679774997896`}], GraphicsGroupBox[{
     {GrayLevel[0], 
      RectangleBox[{1.05, -0.45}, {1.425418994413408, 0.3499999999999999}]}, 
     {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
      GraphicsGroupBox[{
        RectangleBox[{1, -0.4}, {1.3754189944134079`, 0.3999999999999999}], 
        InsetBox[
         GraphicsBox[{{{InsetBox[
              GraphicsBox[
               {RGBColor[0, 0, 1], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 2\"\>", {1.2100000000000002`, 0.58}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {RGBColor[1, 1, 0], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 1\"\>", {1.2100000000000002`, 1.74}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.37820393249936846`, 0.6, 0.6], Dashing[{0., Small}], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 2.4}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.5\"\>", {1.2100000000000002`, 2.9}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.1421359549995791, 0.6, 0.6], Thickness[Tiny], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 3.56}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.3\"\>", \
{1.2100000000000002`, 4.0600000000000005`}, {-1, 0}, Automatic, {1, 0}]}, {
             InsetBox[
              GraphicsBox[
               {Hue[0.9060679774997897, 0.6, 0.6], Thickness[Large], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 4.72}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.1\"\>", {1.2100000000000002`, 5.22}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 5.88}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.05\"\>", {1.2100000000000002`, 6.38}, \
{-1, 0}, Automatic, {1, 0}]}}, {}},
          AspectRatio->2.1309523809523805`,
          FormatType->TraditionalForm,
          PlotRange->{{-0.1, 3.26}, {-0.1, 7.059999999999999}}], {1, -0.4}, {
         Left, Bottom}, {0.37541899441340787`, 0.7999999999999999}]}]}}]},
  AspectRatio->Automatic,
  Background->None,
  ColorOutput->Automatic,
  ImageSize->{Automatic, 333.6719221244165},
  PlotRange->All]], "Output",
 CellChangeTimes->{3.546136475915312*^9, 3.546136838876515*^9, 
  3.546136959388898*^9, 3.546137131823912*^9, 3.546138998905318*^9, 
  3.546148071099952*^9, 3.546148899055683*^9, 3.546229410594396*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.546137165687608*^9, 3.546137166387722*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[BoxData[
 RowBox[{"Normalni", ":"}]], "Input",
 CellChangeTimes->{{3.543684992882703*^9, 3.543684994655665*^9}, {
  3.544320894879453*^9, 3.544320906231942*^9}, {3.544321013728986*^9, 
  3.544321015677552*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"\[Alpha]", ",", "\[Sigma]", ",", "\[Mu]", ",", "x"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.54613653746201*^9, 3.546136542655197*^9}, {
  3.546136596080742*^9, 3.546136617338891*^9}, {3.546139101320562*^9, 
  3.546139101453113*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]", " ", "=", " ", "\[Mu]"}]], "Input",
 CellChangeTimes->{{3.546137329720142*^9, 3.546137340576589*^9}, {
  3.546137465328741*^9, 3.546137469403538*^9}}],

Cell[BoxData["\[Mu]"], "Output",
 CellChangeTimes->{3.546137469933264*^9, 3.546138999167168*^9, 
  3.546148071518559*^9, 3.546148915553351*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ss", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Log", "[", "p", "]"}], ",", "\[Theta]"}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.543684996758039*^9, 3.543685116992625*^9}, {
   3.543685161495624*^9, 3.543685164824434*^9}, {3.543685617602922*^9, 
   3.543685622261405*^9}, {3.544295746546906*^9, 3.544295827428027*^9}, {
   3.544295874222879*^9, 3.544295884036298*^9}, 3.546016486016091*^9, {
   3.54601942039296*^9, 3.546019421197285*^9}, {3.546137342783463*^9, 
   3.54613734607702*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["Abs", "\[Prime]",
    MultilineFunction->None], "[", 
   RowBox[{"x", "-", "\[Mu]"}], "]"}], "\[Sigma]"]], "Output",
 CellChangeTimes->{
  3.544295884678365*^9, 3.545309805435313*^9, 3.546016487855942*^9, 
   3.546017670089106*^9, 3.546019421888676*^9, 3.546059377336055*^9, 
   3.546060078214513*^9, {3.546060139149627*^9, 3.546060144271088*^9}, 
   3.546060382291988*^9, 3.546061435830015*^9, 3.546061887191896*^9, 
   3.546071462301595*^9, 3.546136812733527*^9, {3.546137347255125*^9, 
   3.546137353812429*^9}, 3.546137471838963*^9, 3.546138999246577*^9, 
   3.546148071622198*^9, 3.546148917490404*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ss", "'"}], " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"ss", ",", "\[Theta]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.543685180126496*^9, 3.543685298634426*^9}, {
   3.543685431540192*^9, 3.543685489527895*^9}, 3.543685534481716*^9, {
   3.543685624867701*^9, 3.543685665571384*^9}, {3.543688058809387*^9, 
   3.543688137132826*^9}, {3.54368832453227*^9, 3.543688330973921*^9}, {
   3.544295753339424*^9, 3.544295760783175*^9}, {3.544295853271568*^9, 
   3.544295889194162*^9}, {3.546016489095013*^9, 3.54601649563242*^9}, {
   3.546019427600456*^9, 3.546019428430676*^9}, {3.54613735651055*^9, 
   3.546137357241563*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["Abs", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", 
    RowBox[{"x", "-", "\[Mu]"}], "]"}], "\[Sigma]"]}]], "Output",
 CellChangeTimes->{{3.543685658802668*^9, 3.54368566906248*^9}, {
   3.54368807593941*^9, 3.543688142568622*^9}, 3.543688332640362*^9, {
   3.54429586658533*^9, 3.544295890282246*^9}, 3.545309806594238*^9, {
   3.54601648969558*^9, 3.546016496189694*^9}, 3.546017677241552*^9, 
   3.546019429586647*^9, 3.546059378810901*^9, 3.546060079358672*^9, 
   3.546060145605671*^9, 3.546060384883913*^9, 3.546061436928236*^9, 
   3.546061887206539*^9, 3.546071462474284*^9, 3.546136812904919*^9, 
   3.546137359182575*^9, 3.546137472997589*^9, 3.546138999342592*^9, 
   3.546148071633068*^9, 3.546148921123774*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"p", "^", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}]}], "*", "ss"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.546016522942259*^9, 3.546016539967992*^9}, {
   3.546017704408171*^9, 3.546017705125968*^9}, 3.546019441035926*^9, {
   3.546019471091529*^9, 3.546019479505023*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"x", "-", "\[Mu]"}], "]"}], "\[Sigma]"]}]], "\[Sigma]"], 
     ")"}], 
    RowBox[{"1", "+", "\[Alpha]"}]], " ", 
   RowBox[{
    SuperscriptBox["Abs", "\[Prime]",
     MultilineFunction->None], "[", 
    RowBox[{"x", "-", "\[Mu]"}], "]"}]}], "\[Sigma]"]], "Output",
 CellChangeTimes->{
  3.546016544655516*^9, {3.546017682666078*^9, 3.546017707524088*^9}, 
   3.546019442560441*^9, 3.546019480115117*^9, 3.546060081264836*^9, 
   3.546060146559043*^9, 3.546060400916709*^9, 3.546061439971061*^9, 
   3.546061887221677*^9, 3.546071464395533*^9, 3.546136814598201*^9, 
   3.546137368746807*^9, 3.546137476097946*^9, 3.546139000616137*^9, 
   3.546148073018102*^9, 3.54614892770098*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"csIntCitatel1", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Rule]", " ", 
      RowBox[{"y", "*", "\[Sigma]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016644463204*^9, 3.546016698494855*^9}, {
  3.546017718072268*^9, 3.546017718824221*^9}, {3.546019484592136*^9, 
  3.546019489873669*^9}, {3.5460588628943*^9, 3.546058863025369*^9}, {
  3.546058985559764*^9, 3.54605898695691*^9}, {3.546148936702518*^9, 
  3.546148939365746*^9}, {3.546149131726717*^9, 3.546149138454681*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "y"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], " ", 
  SuperscriptBox["\[Sigma]", 
   RowBox[{
    RowBox[{"-", "2"}], "-", "\[Alpha]"}]], " ", 
  RowBox[{"Sign", "[", "y", "]"}], " ", 
  RowBox[{"Sign", "[", "\[Sigma]", "]"}]}]], "Output",
 CellChangeTimes->{
  3.546016699867985*^9, {3.54601771087677*^9, 3.546017720075646*^9}, 
   3.546019451857504*^9, 3.54601949082593*^9, 3.546058865086693*^9, 
   3.546058991110302*^9, 3.546059305292639*^9, {3.546060081368136*^9, 
   3.546060082414614*^9}, 3.546060147815039*^9, 3.546060407046361*^9, 
   3.546061531311124*^9, 3.546061887295093*^9, 3.546071465443946*^9, 
   3.546136815322759*^9, 3.546137371159345*^9, 3.546137481278868*^9, 
   3.546137525230667*^9, 3.546139001167078*^9, 3.54614807364181*^9, 
   3.546148942325582*^9, 3.546149141441763*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"2", "*", "csIntCitatel2", "*", "\[Sigma]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.546016758763041*^9, 3.546016792970542*^9}, {
  3.546017733204061*^9, 3.546017740186443*^9}, {3.546017914630278*^9, 
  3.546017915139312*^9}, {3.54601813955664*^9, 3.546018141998787*^9}, {
  3.546019493851544*^9, 3.546019499184226*^9}, {3.546058803868124*^9, 
  3.546058826478995*^9}, {3.546058870461028*^9, 3.546058872003744*^9}, {
  3.546059018757644*^9, 3.546059019951728*^9}, {3.546059209756854*^9, 
  3.546059224271504*^9}, {3.546060118428053*^9, 3.546060118951836*^9}, {
  3.546060429719045*^9, 3.546060435859049*^9}, {3.54606155661684*^9, 
  3.546061556750753*^9}, {3.54606187684573*^9, 3.546061879156262*^9}, {
  3.546148950031819*^9, 3.546148955154459*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"-", "\[Alpha]"}]], " ", 
     SuperscriptBox["\[Sigma]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
     RowBox[{"Sign", "[", "\[Sigma]", "]"}]}], 
    RowBox[{"1", "+", "\[Alpha]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546016797608153*^9, 3.546017744115164*^9, {3.546017901155742*^9, 
   3.546017918255887*^9}, 3.54601814479272*^9, 3.5460194592406*^9, 
   3.546019501847466*^9, 3.546058816227488*^9, 3.546058858910903*^9, 
   3.546058988908802*^9, 3.546059027020108*^9, {3.546059207468971*^9, 
   3.546059213730049*^9}, 3.546059311153677*^9, 3.54606008545984*^9, {
   3.546060121584368*^9, 3.54606015090936*^9}, 3.546060482353594*^9, 
   3.546061561105924*^9, 3.546061888934606*^9, 3.546071469576597*^9, 
   3.546136819048198*^9, 3.546137375365945*^9, 3.546137488172766*^9, 
   3.546137541938578*^9, 3.546139002866141*^9, 3.546148075395342*^9, {
   3.546149127202265*^9, 3.546149151355029*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"p", "^", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Alpha]"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016812881654*^9, 3.546016818147665*^9}, {
  3.546016886250683*^9, 3.546016904857094*^9}, {3.546018151081055*^9, 
  3.546018151902321*^9}, {3.546019505441384*^9, 3.546019506907304*^9}, {
  3.546059876912032*^9, 3.546059883931349*^9}, {3.546060057180457*^9, 
  3.546060062381365*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Abs", "[", 
         RowBox[{"x", "-", "\[Mu]"}], "]"}], "\[Sigma]"]}]], "\[Sigma]"], 
    ")"}], 
   RowBox[{"1", "+", "\[Alpha]"}]]}]], "Output",
 CellChangeTimes->{
  3.546059884316431*^9, {3.54606006350173*^9, 3.546060085628376*^9}, 
   3.546060152429164*^9, 3.546060487613641*^9, 3.546061563038276*^9, 
   3.546061889005262*^9, 3.546071469972666*^9, 3.546136819448887*^9, 
   3.546137376078972*^9, 3.546137546141196*^9, 3.546139003286238*^9, 
   3.546148075871197*^9, 3.546149173528946*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"csIntJmenovatel1", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Rule]", " ", 
      RowBox[{"y", "*", "\[Sigma]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016918820028*^9, 3.546016933459735*^9}, {
  3.546018162034847*^9, 3.546018162802109*^9}, {3.546019511970786*^9, 
  3.546019518337126*^9}, {3.546059893179542*^9, 3.546059893847781*^9}, {
  3.546060047266137*^9, 3.546060052681203*^9}, {3.546149182116976*^9, 
  3.546149213742652*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "y"], " ", "\[Sigma]"}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Alpha]"}]]}]], "Output",
 CellChangeTimes->{
  3.546016923575523*^9, 3.546017064644657*^9, 3.54601816733437*^9, 
   3.546019519156449*^9, 3.546059316503319*^9, 3.546059393343114*^9, 
   3.546059588516448*^9, 3.546059894431348*^9, {3.546060064924788*^9, 
   3.546060086001004*^9}, 3.546060156246333*^9, 3.546060505013231*^9, 
   3.546061566515456*^9, 3.546061889013432*^9, 3.546071470260381*^9, 
   3.546136819734045*^9, 3.546137379438253*^9, 3.546137550678813*^9, 
   3.54613900356502*^9, 3.54614807616907*^9, {3.546149187598966*^9, 
   3.546149214888555*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"csIntJmenovatel2", "*", "\[Sigma]", "*", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.546017079018856*^9, 3.546017090969569*^9}, {
  3.546018190056803*^9, 3.546018190821094*^9}, {3.546059043677427*^9, 
  3.54605904460088*^9}, {3.546059403368323*^9, 3.546059411524818*^9}, {
  3.546059479614725*^9, 3.546059492483282*^9}, {3.546059617399394*^9, 
  3.546059617680817*^9}, {3.546059915271946*^9, 3.546059916341114*^9}, {
  3.546060024912348*^9, 3.546060025553251*^9}, {3.546061569414866*^9, 
  3.546061603372963*^9}, {3.54606187218996*^9, 3.546061873288195*^9}, {
  3.546149218540737*^9, 3.546149221988364*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"-", "\[Alpha]"}]], " ", 
     SuperscriptBox["\[Sigma]", 
      RowBox[{"-", "\[Alpha]"}]]}], 
    RowBox[{"1", "+", "\[Alpha]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017129629872*^9, {3.546018185130961*^9, 3.546018193247052*^9}, 
   3.546019531385107*^9, 3.546059048224064*^9, {3.546059319837184*^9, 
   3.546059326263401*^9}, 3.546059398031549*^9, {3.546059485206171*^9, 
   3.546059497029928*^9}, {3.546059600135839*^9, 3.546059619744119*^9}, {
   3.546059902110613*^9, 3.546059918797663*^9}, 3.546060032150784*^9, {
   3.546060066913525*^9, 3.546060090042542*^9}, 3.546060159740637*^9, 
   3.546060290156587*^9, 3.546060519250223*^9, 3.546061573570523*^9, 
   3.54606160547765*^9, 3.546061890499446*^9, 3.546071472984868*^9, 
   3.546136822248697*^9, 3.546137382344213*^9, 3.546137557176488*^9, 
   3.546139006196153*^9, 3.546148078796489*^9, 3.546149223405647*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cs", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"csIntCitatel3", "/", "csIntJmenovatel3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546017159619789*^9, 3.546017171553549*^9}, {
   3.546018198699244*^9, 3.54601820322215*^9}, 3.546061584597621*^9, {
   3.546061615263666*^9, 3.546061627686996*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sign", "[", "\[Sigma]", "]"}], "\[Sigma]"], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.546017173049018*^9, 3.546018204442568*^9, 
  3.546019534525334*^9, 3.546059053644503*^9, 3.546060092729884*^9, 
  3.546060126263668*^9, 3.546060162380328*^9, 3.54606029189522*^9, 
  3.546060530244291*^9, 3.546061576542723*^9, 3.546061631929342*^9, 
  3.546061890565066*^9, 3.54607147309259*^9, 3.54608081889764*^9, 
  3.546136822442753*^9, 3.546137385359962*^9, 3.54613756185393*^9, 
  3.546139006299506*^9, 3.546148078895114*^9, 3.546149226225522*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cs", "'"}], " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"cs", ",", "\[Theta]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546017177523059*^9, 3.546017189050696*^9}, {
  3.546018219369372*^9, 3.546018251272656*^9}, {3.546137392518803*^9, 
  3.546137393253288*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.546017189978016*^9, 3.546017505585954*^9, {3.546018213521305*^9, 
   3.546018252329528*^9}, 3.546019535664949*^9, 3.546059054652897*^9, 
   3.546060095789459*^9, 3.54606013262094*^9, 3.546060172383065*^9, 
   3.546060295503429*^9, 3.54606055374719*^9, 3.546061634658587*^9, 
   3.54606189057455*^9, 3.546071473171214*^9, 3.546136822576293*^9, {
   3.54613738679792*^9, 3.546137394710698*^9}, 3.546137564523781*^9, 
   3.546139006314661*^9, 3.546148078903871*^9, 3.546149239593932*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia", " ", "=", 
  RowBox[{"FullSimplify", "[", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ss", "'"}], " ", "-", " ", 
      RowBox[{"cs", "'"}], "-", 
      RowBox[{"\[Alpha]", 
       RowBox[{"(", 
        RowBox[{"ss", "-", "cs"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"cs", "-", "ss"}], ")"}]}]}], ")"}], "*", 
    RowBox[{"p", "^", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016927559429*^9, 3.546016927697169*^9}, {
   3.546017069821145*^9, 3.546017085073989*^9}, 3.546017230368702*^9, {
   3.546017453638702*^9, 3.546017454633499*^9}, {3.546017487540381*^9, 
   3.546017511750122*^9}, 3.546060275246113*^9, {3.546060594894228*^9, 
   3.546060607304117*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Mu]"}], 
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"Sign", "[", 
            RowBox[{"x", "-", "\[Mu]"}], "]"}]}]]], "\[Sigma]"], ")"}], 
      RowBox[{"1", "+", "\[Alpha]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sign", "[", "\[Sigma]", "]"}], "-", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"x", "-", "\[Mu]"}], "]"}]}], ")"}], "2"]}], "-", 
       RowBox[{"\[Sigma]", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"x", "-", "\[Mu]"}], "]"}]}]}], ")"}]}], 
    SuperscriptBox["\[Sigma]", "2"]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017256490459*^9, 3.546017457244757*^9, {3.546017489726901*^9, 
   3.546017516275889*^9}, {3.546018256852577*^9, 3.546018260098833*^9}, 
   3.546019563020585*^9, 3.546060105887493*^9, 3.546060175004406*^9, {
   3.546060258495388*^9, 3.546060300214475*^9}, {3.546060588816648*^9, 
   3.54606060801996*^9}, 3.546061640615294*^9, 3.546061890584713*^9, 
   3.546071477817601*^9, 3.546136827059069*^9, 3.546137402444307*^9, 
   3.546137568514864*^9, 3.546139008308292*^9, 3.546148081008069*^9, 
   3.546149247079594*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Ia", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Rule]", 
      RowBox[{"y", "*", "\[Sigma]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", "\[GreaterEqual]", "0"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.546016832069324*^9, 3.54601683491256*^9}, {
  3.546016912126374*^9, 3.546016916727737*^9}, {3.546017322178493*^9, 
  3.546017372508301*^9}, {3.546017463020216*^9, 3.54601752428375*^9}, {
  3.546149255979877*^9, 3.546149262320525*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[Alpha]"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Mu]"}], 
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"Sign", "[", "y", "]"}]}]]], "\[Sigma]"], ")"}], 
      RowBox[{"1", "+", "\[Alpha]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sign", "[", "\[Sigma]", "]"}], "-", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"y", " ", "\[Sigma]"}], "]"}]}], ")"}], "2"]}], "-", 
       RowBox[{"\[Sigma]", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"y", " ", "\[Sigma]"}], "]"}]}]}], ")"}]}], 
    SuperscriptBox["\[Sigma]", "2"]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.546018279534565*^9, 3.546019565998986*^9, 
  3.546060183851695*^9, 3.546060303687034*^9, 3.546060617535814*^9, 
  3.546061648930034*^9, 3.54606189059513*^9, 3.546071480580858*^9, 
  3.546136829650342*^9, 3.546137402591788*^9, 3.546137603505328*^9, 
  3.546139009160389*^9, 3.546148081900281*^9, 3.546149271437897*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Ia1", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x"}], "+", "\[Mu]"}], ")"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", "y"}], "*", "\[Sigma]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", ">", "0"}], ",", 
      RowBox[{"y", ">", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546149305831682*^9, 3.546149315970532*^9}, {
  3.546149347719303*^9, 3.546149352951277*^9}, {3.546149387696962*^9, 
  3.546149390891389*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[Alpha]"}]]}], " ", 
    SuperscriptBox["\[ExponentialE]", "y"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "y"], " ", "\[Sigma]"}], ")"}], 
     RowBox[{
      RowBox[{"-", "2"}], "-", "\[Alpha]"}]], " ", 
    RowBox[{
     SuperscriptBox["Abs", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", 
     RowBox[{"y", " ", "\[Sigma]"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.546149322607283*^9, 3.546149358506563*^9, 
  3.546149392075061*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Ia1", "*", "\[Sigma]", "*", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.546017553376211*^9, 3.546017578186591*^9}, {
  3.546060190028669*^9, 3.546060215541151*^9}, {3.546149326499036*^9, 
  3.546149329812771*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\\(\\(\[Alpha]\\\\ \
\\((\\(\\(Sign[\[Sigma]]\\)\\) - \\(\\(\\(\\(\\*SuperscriptBox[\\\"Abs\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]]\\)\\)[\\(\\(y\\\\ \
\[Sigma]\\)\\)]\\)\\))\\)\\^2\\)\\) - \\(\\(\[Sigma]\\\\ \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"Abs\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(y\\\\ \
\[Sigma]\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] does not converge on \
\[NoBreak]\\!\\({0, \[Infinity]}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.546149338683535*^9, 3.546149397858483*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   RowBox[{"ConditionalExpression", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"-", "\[Alpha]"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "x"}], "+", "\[Mu]"}], 
            RowBox[{"\[Sigma]", " ", 
             RowBox[{"Sign", "[", "y", "]"}]}]]], "\[Sigma]"], ")"}], 
        RowBox[{"1", "+", "\[Alpha]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Alpha]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sign", "[", "\[Sigma]", "]"}], "-", 
             RowBox[{
              SuperscriptBox["Abs", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"y", " ", "\[Sigma]"}], "]"}]}], ")"}], "2"]}], "-", 
         RowBox[{"\[Sigma]", " ", 
          RowBox[{
           SuperscriptBox["Abs", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"y", " ", "\[Sigma]"}], "]"}]}]}], ")"}]}], "\[Sigma]"], 
     ",", 
     RowBox[{
      RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
      RowBox[{"-", "1"}]}]}], "]"}], 
   RowBox[{"\[DifferentialD]", "y"}]}]}]], "Output",
 CellChangeTimes->{
  3.546017581525956*^9, 3.546018298476216*^9, 3.546019591866922*^9, {
   3.546060198866893*^9, 3.546060217651798*^9}, 3.546060305919824*^9, 
   3.546060630129236*^9, 3.546061654525928*^9, 3.546061891049295*^9, 
   3.546071482133935*^9, {3.546080914253364*^9, 3.546080918402068*^9}, 
   3.546136831104139*^9, 3.54613740394295*^9, 3.546137609663346*^9, 
   3.546139010546918*^9, 3.546148083269172*^9, {3.5461493422029*^9, 
   3.546149399774527*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IF", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Ia2", "^", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]}], " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{"p", "^", "\[Alpha]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"ss", "-", "cs"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546018347393014*^9, 3.546018403066614*^9}, {
   3.546018436099692*^9, 3.546018441274599*^9}, 3.546019614310392*^9, {
   3.546019656617135*^9, 3.546019704529838*^9}, {3.546057935083661*^9, 
   3.546057940051575*^9}, {3.546060690488888*^9, 3.546060692698881*^9}, {
   3.546136907926816*^9, 3.54613692580183*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", "\[Mu]"}], ")"}], " ", "\[Sigma]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["\[Sigma]", "2"], ")"}], 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]], 
       SqrtBox[
        SuperscriptBox["\[Sigma]", "2"]]], ")"}], "\[Alpha]"]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546018404404153*^9, 3.546018443169971*^9, 3.546018629101108*^9, {
   3.546019667419693*^9, 3.546019705617033*^9}, 3.546057940717521*^9, 
   3.546060221228167*^9, 3.546060308848118*^9, 3.546060698993428*^9, 
   3.546061658414636*^9, 3.546061891057757*^9, 3.546071483795239*^9, 
   3.546080008567537*^9, 3.54608080405*^9, {3.546080909027874*^9, 
   3.546080920813304*^9}, 3.546136832732765*^9, 3.546136928984752*^9, 
   3.546137408183165*^9, 3.546137611738504*^9, 3.546139011232828*^9, 
   3.546148083970649*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IF1", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"IF", "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", "1"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.546017428290329*^9, {3.546018467395976*^9, 3.546018491191415*^9}, {
   3.546018587031472*^9, 3.546018597806486*^9}, {3.546137616080186*^9, 
   3.546137619556514*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}]], ")"}], "\[Alpha]"], 
    " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", "\[Mu]"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.546018482088292*^9, 3.546018491764403*^9}, {
   3.546018592076636*^9, 3.54601859900646*^9}, 3.546018631243809*^9, 
   3.54601904808341*^9, {3.546019682797311*^9, 3.546019707755424*^9}, 
   3.546057945478465*^9, 3.54606022766859*^9, 3.546060313691759*^9, 
   3.546060708677693*^9, 3.546061660974805*^9, 3.546061891066516*^9, 
   3.546071484501638*^9, 3.546079996627684*^9, 3.546136078734947*^9, 
   3.546136322826237*^9, 3.546136834719354*^9, 3.546136940787303*^9, 
   3.546137429657752*^9, 3.546137622030385*^9, 3.546139011431535*^9, 
   3.546148084173765*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IFun", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "\[Alpha]"}], "}"}], " ", ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}]], ")"}], "\[Alpha]"], 
      " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.54608073954952*^9, 3.546080787340927*^9}, {
   3.546080827508503*^9, 3.546080832763547*^9}, {3.546080881724667*^9, 
   3.54608089839569*^9}, {3.546136031913543*^9, 3.546136106756538*^9}, {
   3.546136264957334*^9, 3.546136269166274*^9}, {3.546136300237964*^9, 
   3.546136302873075*^9}, 3.546136404353272*^9, {3.546136877306471*^9, 
   3.546136878124014*^9}, {3.546136974390393*^9, 3.546136995325726*^9}, {
   3.546137115334749*^9, 3.546137121892679*^9}, {3.546137628329196*^9, 
   3.546137639501537*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.546078399638204*^9, 3.546078434270568*^9}, {
  3.546078523483738*^9, 3.546078526611331*^9}, {3.546078631725602*^9, 
  3.546078677869414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "0.05"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "0.1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "0.3"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "2"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegend", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Alpha] = 0.05\>\"", ",", "\"\<\[Alpha] = 0.1\>\"", ",", 
      "\"\<\[Alpha] = 0.3\>\"", ",", "\"\<\[Alpha] = 0.5\>\"", ",", 
      "\"\<\[Alpha] = 1\>\"", ",", "\"\<\[Alpha] = 2\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LegendPosition", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "0.4"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Dashed", ",", " ", "Thick", ",", "Thin", ",", " ", "Dotted", ",", " ", 
      "Yellow", ",", " ", "Blue"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.546071566443362*^9, 3.546071604772914*^9}, {
   3.546071664304524*^9, 3.546071734557583*^9}, {3.546071769565434*^9, 
   3.546071781503191*^9}, {3.546077877666447*^9, 3.546077878779971*^9}, {
   3.546078077257591*^9, 3.546078094273397*^9}, {3.546078128979278*^9, 
   3.546078131508565*^9}, {3.546078195525481*^9, 3.546078246143438*^9}, {
   3.54607831567725*^9, 3.546078368785814*^9}, {3.546078441904356*^9, 
   3.546078501052553*^9}, 3.546078697301196*^9, {3.546078795298968*^9, 
   3.546078819926423*^9}, {3.546078851304196*^9, 3.54607891370029*^9}, {
   3.546079894604615*^9, 3.546079946211399*^9}, {3.546136122778719*^9, 
   3.546136164810206*^9}, 3.546136449027762*^9, {3.546137648051448*^9, 
   3.546137654193264*^9}, 3.546229444724288*^9}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    GraphicsBox[{{}, {}, 
      {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwt2Xk0VO//AHDLzL12c+/YK9sQKZGkrPO2hDYkS4s2UVJJKlq1UmRJlkok
lTWFilCZ96ekkmyFpFBIIglFKL/7Pef315zXmWeW+7y3556r4b3b1VdESEjo
srCQ0P9ej/asGJqa4uHFlJT8SZt+wZfDCr9aJ3l4KjEqEd36BU6c9tEHf3i4
ydU36NzWfoG6aeDf3cM8fL3JVcoksl/wJPKCWMcXHs49WHitrb5fIDa3WRVf
85CX12t6xPu7IGHfpmXHr/DQJ029tP3sgOCW8N6bQgt5eKl6fc7vfYMCtq+D
kfJ6TTQRiehbt2BYwH33bOf1OA28Wn16TevoL4Hr0+Qts6rUcTxHeKNr/Zjg
8A/Lnec71ZDdfNckmDUpKAlJ9s93VsXbceuXrpGcEjhdcFf/d3k6atWvXZGm
JYwOqY+dHPtVsOmg6ovcXBHMfH6wae86ZfRswjkt46J42SjYNsdNGeW1c3dZ
CbEwKjWooG2FMpoGeNddY7MwaO+OyCWgjBe2/tfnxWGhpdp6KzVtZaRW5Unf
1Wbh22DIrBpQwtKjiZeqnVkoMpMM1jiphEaXlkZnpbNww+kE+dpsRXQgpAJU
zNlYw/9NHriuiOMGExJefDbyJzzH1VMU8ap9i1OyLRvVg6a1B8UqondiUbnU
cjZ+3ng9WyFYEaVMbL688GLjVvMC8w22iqiQSJ2/cpSNAUOvNn//qIB1JyVN
Ex6xse22vltSswIKJSxO9EE2Om+PtefXK6D476T58yrYaNjhOjuuQgHZqv9m
CV6xceh1y4jxLQXMkAnIvP2ejcE5PWeOHFDAAT8hrYZRNoZuEr0jyVXAfY/r
jvMMCCyodYh5K6WAB9e92O5rROBnq6iAVEIBo44rrruxgED7GfIGBuPy+He1
5TKuBYEy72cWuH6Sx3Q7d+qpI4FXVy29ezlfHuvXnLm/cTOBAvu4Yp3l8mjz
Z3bowVgCh4oakwYXy2P5s8cDJhcI1NJWCSnlyyOtqCs9mEDgWdEbC5fNl0eN
vt2O7skEuuD9kgAVeRxd7buj7yaBHabvyoq+ymHo7K/jtqUECumrCWzD5PBy
wymT+DYCjyhYbwgLlUOX4LPLBjsIHJ3y/lsZIocx8/90OnQSONCQab7UXw6X
8jPjvvQQ2HpgbomLsxxa/eCf/DRIYHGFZeF6ZTnsfJBRUyVMotGdjS5ptBz+
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
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Thickness[Large], 
       LineBox[CompressedData["
1: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
v2XifdYdnV7jygf//78c/v//cvB/tQfECw==
        "]]}, 
      {Hue[0.14213595499957954`, 0.6, 0.6], Thickness[Tiny], 
       LineBox[CompressedData["
1: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
3/fHuw==
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1: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
mehiycm4iydspiggpAqf85xNSNsWRz/PKL9dGa3Gb/w7cvHhiDgaPtVfvzOK
42nOmpNYvzjS/r1qbpcF8ZoOZbeFLnFE9LrIuP8QwrcrSA6W38QRa9yvY7mb
CA8L2WvKUyyOak9tHH9S+AnPWqT7+jlfHJknRl4bFqvDP7tt6vtniyNf7nOL
LY/qcEaTf9pdKeIotELo77fwz3g050+5J7fFka3V/mb6mAa84G5LrnGgOBrT
3/bn5f2CN698IVGviCN/tbId44wvOHtvlbC9uzhSkh+Md6r7iidmvmQVMRVH
v2tt6k8oN+HveZ7dbzYQRwZNSbzBnU14Z8SjPbeAOCL7c9I73WzG+bwjNvpV
xZGKKJtl4a/v+LNDF2deCIoj42vaWmecWvHqV+7nLbjFUVhFvlH0x1a8j99p
hGbfrt2Rwzsv1YaLbZ787UwjjqS42WUTVtrwzM+aTaQJMZSr2CH7sLgDr9NQ
MeocFEMnNkqDew904qN5snX3esUQV/tW2+f0zl39i1aPfRdDvxelb75P/om/
tt5TkFsqhgLGnb6k5/3Cv33ZPHD6rRh68r7NOVatG5/WWs1kzhNDo6MBdSl1
3bi82NSzC6liaIFO6Lf+TA9eNN4SLRcmhg4cbO6YdOnD205/Zey7IYbo9xR1
ZO7txxe/fQyL8RdDg76MvXtL+3G1d6XBs5678Z9uVCjyDOCV1595vTshhn6a
kQzZ6IZwotuVV93GYqjC4En8q0tDeKyF8SCtnhjS5pZ70Px7CHeRWbW2UhND
OauXVXbgMM76+6QuVUAM2bZIpee/HsUDvhy8SeQSQxOXWT64yI3hg+93yo+z
7s7jcKDTwaIxvDTmjXz6ligip52fJNaN42fJewX0h0XRWuOTgG6OKfyr7KDl
xd+i6HhB29pW4RSuyl8R+7hTFAlbRzp8NZ3Gmebd9kw2iCJFwQ6zFykzeFEG
mospEEW/0EmtCoc5XCguRaY8WxSd/UmycBH4h4cH+7gNPBdFJyVNSO7d/3D7
UyK9Kg9F0fwHN6Ppknl8D0Ngfdc1UcS1Jfw9yWER91kwp6HxEUWHRQBR6fsi
3t0vpS1zXhTdH/LrOIst4YXlHUU37ETRtxrps5WKy7iNp1IagSyKVkpfZm3I
r+LIivGXiaYoussSdX78/Souq9vPeVVZFLXsa/80fGQN3xF8cL+eKIreVck8
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
B//52+H8DZJPBA4=
        "]]}, 
      {RGBColor[1, 1, 0], LineBox[CompressedData["
1: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
FkRmy13PgyqtiCIpVEsfIYiGaIIrCz9ZExS0O6IR1wQRJZ/UwUR2OyKvOajL
30oQzVgZ65/nciRSDgecyDcVRCYJQ1XffzoSD9L9SvrPCCKmkx9ZFdKdCD9/
j/uGmCB6YxRGrjt1hbjS77oepimIgt+23M+WcyEsDJ2dyw8Lol8TqwdK+F0J
HXEbXfH9gmiNvFPxieUqoXT/cqGpmCC62xmYnsznTkiuXhK4zy+INqYDcWE5
D4Lh89mlFUZB5MkX7jZ3/T+iIwDLa50TQMWTwsPEOV+ieUibm2JCAGV1Zzk1
0foR1caa4apDAnv/5xPeHPV+RKbkYcvMnwLovv6H7TjTa8STOIXmzjYB1Bur
oXhZ5joRtSGrwtwkgIq4Le8k0gUQHl+l2ALeC6DbPMFrlT2BhK0mKbjwnQCS
Fl1JMuy4QZjkikwMFgig9QnplKKuIELtJm+dUboA2mlNjf9vK5igOkAfIHFb
AJ36ivWnOocTq4+ph82CBdDXCour7awRxAR599yDawLoRWSZ8ms8gvj6Y0Nm
3UUAaWZtSisfvkPUaq8mHrIXQHPXe5M91u8Q5a8WqR0vCyCrjaD1Cw2RREro
VF+b0V5+0OzohYAo4sHE2GkqPQFEKn11jd46mgi7OFylriuALjfZiWedjiGc
ZXrjs5UEUNMPXaLnxH1CqfOL3g3ePT05ff3RJQ8JKay1tIhNAMnstJM8xh8R
fIVN4sP0AijJ6XS1yLPHxHY43DyzxY/4+WdTiqfiifnpjy53lvnRP6pghwsv
Eoi/Zu9/vp/hR/t1jm7+tnxCNB96VyQ1wI+O8w6UJY0/JaqTioQu/+ZHF72o
31t8eEa8oSqIfviDH7H6OASyP0kkEn5nO2zW7/FniRjH2iUTtpFPeb+95kfe
/SJ+j6+kEV/BGv2NbH40cy1apNgznQBk8y1SGj+SO19ITRuaQZD8hAf8HvGj
u2cmFo1sMonH8qE/hO/xIzWrUSbdlUyCcrK/vuE2P1rVpefwf5xF/LXLfs0X
wI8ORMs6WP/JJi4I0zyH3vyIzcE60zsqh6jvuhLndpUfEWHen+5o5hK5Z2T8
qq350dqhNcqw0peEi1aJlu0JfhTG859J/epromuNU4Fehx+9V/5l0fs7nzAo
9SeVqPEj2YQjTnX1BcRBGXVaKll+NBCZ+WP33RsieSR5vUCKH7HYO74Zqigi
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
MjzbFFi7np6FewvPmmmJyMLPZO1SL/dMvCPJOrpIWhaOtVT8tdHOwPKe8vIN
qrJwtMv3FX8yHR9wJBuFa8vC5Rsfimmjj/HNg0tP7OXLQk/vAwGtiTQ8u3nk
eZeJLOyKC7Jql3mE1fS63z3cJQub9vT/q9VIxcdUm34es5QFOwd+W8W+FNxE
zuaN2snCmbhi3bzCJCyyPOVQlpMsVHnWByvPJGLevyhfLzdZKFwbdD2Gl4hT
vp6v+XtJFlRCONXn3j/E5/M27Vl5XxYOMGMrutLjsIZ109jhh7KQuH8iW/h+
LP72zzo0I1UWFLY+S7e6HYMPGHnV7s6WBePmt1tOx93DUsNCxxMKZCHK/W56
TMZdXBd6c9FkqSw8fSPu1loXjfXeP9KPaJCF5x6+RrbkKDzhrd3V1yILV5aG
PNY1isSPmeXntD8s3GdN5y/ZS3cw9djHnPcDsuBwX6dYQjgCz0yKK1MFKPDo
Zu7R9r3hOCPqXq2jCAUKjztdmcwLww48xeMFYhSQP8PdepoThtuvQIIVlQK7
DnVLlwiH4jCFBv0nbArs+9x64cdEMDau2981t4oC3z07fgcMB+GXku6UOA0K
XC9VWJUzfQO75vzLGV1PgQZ+1otnojewwv7gPfr6FNjqZDnatSoARz5IDv20
bSG+93d8lbs/9lrXvoh7jALjL/d637T3w6otdgnuThQQpxsJ/HlxBQ94jetX
nqbA2qGpdUlLruC9JaLnj/lQ4B6ruqW99DIWOxpFyb26EL/J3HR+1WVcuVg+
VySIAsx3j7LlOJew1nY0nhpFAZWc3ITobxfwyFht6EwsBdzXuING93mcFGGh
bJJEgafqma4GH89hmc6Tx79lUODCp/wPF8fO4skTCV3KdRS4vTqf9NvHEz9e
se78xSYK1IzKi9bneOCjWYWUxvcUiD8v2Vg56Y7f/f5vz8leCuS/1PylddUN
B8bajL8aWvBHzGKN5vvT2GDjaKjEGAX8XoemOqiexlkBS+oy5yggcOaECfp8
Ep9QjjguJEyFY/czAp2zXbFcE7F4zzIqqI4EPbG/5YLDZfVgikQFKudWI3Jx
wqdSnHN11lGB3ae77mXEcdz9ln5nhQ4Vctp6Ev89tMfbf9e5D/CpYC8uq1ab
dwyvNV2jHrmVCl6ddk9PCdrhaM/2la67qTDS/TgyXsMWL4m/Prp534KeaNHW
caejuG+8P/3nMSrUL4q4UPbzCDaj3wlscKaCZWq1R9rmI7jM0NAx2Z0KbYZ9
o+IbDuO4qASFvb5UkJK8k69QZI0t0eGH2TFU2B97Yy9nzz5cbb/icnAiFToK
dn20MbfEWmHFh+weL2DVR+vrD1tgiV46QyaPCu6NF58F3DbHPmL1s8MlVBC/
5s5nFe7B37XPdVRUUUG5xsro8LAZrgtoj3RvWcCvnJaG2O3G67Oue277QIW4
HXMO75/swqkfdcy5n6mgKUItWfp7J76qekeyZZQKOsU9L5tstmP83+5gDVEa
jM4t7i57Y4yfzAs4iUrSYDBruXdEpRGmK2aYfJGlgWfg4p9EzRY8471iya1V
NHja6uyV/80Q2ycW9zsq08AVHcieETXErW+cKzdq0uB7gc4vS61NOItd7zsO
NJAQ1x0RebgREybnjtQa0cCioD85tRfwTbc1+g930IAtp6ckqgrYuer63C5r
GhgeKjPPyUR4lZPhmYwzC3xXRoj7/HocETG5N8CHBqtDDmyuHNXFQiUJWkeu
0UBLo+aA4bAO7pYQnFh5mwYjsxr1yxZpY1O9jKavd2lgZEB0ebK1cKHt4eev
HtCgr/C17SFDTRydW+x88hkNMHE2lp2mjkU+OW8zyqGBc1Aa0h9Uw57LGGvZ
RTTYvjj5i8M6NWxmfe5rYy0N9vGGW5hpKlhMSPeoaj8NXMzKGbd6V+P8M8J7
BoZp0PxFQenEe0Vs//3tprgJGlia1LAP/6eAS9sdVq0QoIO+S1Njxw957LJD
m1wtQgfhUMGk62LymFYpuMRHnA772r/hBA0udn9+b/A7jQ415QXM+3c5mFh1
vCOZQ4fwWY5/WQeB39zTrDu4mg5uX/Re9HEIrOD/Jr1Bmw6/X3++nBHOxB+s
/7o+3UWHxmf1dtveUfD1d3WHj1nSIcbTG0eWyWIt46hdzEN0+E9KsmxPERmH
aqpphDjRwVfhwvzWdzKYlzYnt9mNDqFUtZSEEWk8yKqVnj9Lh8uhbWceSUjj
jaJHfzr700EtL+HmWg9JPHpJdUA+hA6/shoHBrIk8L2fs+87b9NhxaDZ6YTJ
lXjq0+0804d0KMq5OpSJxPGjl1XnlYvo8KG5r45zbineq3LLua+cDjNssb55
hyVYKPHQwZhaOhQiQR9fWxFsHTqNxdrokJo8HHnLexFetqhyXWUXHbxDsnk6
EcI41zuMuNBHB4+b2PhpnhBeeWyN0Mg4HYxm8697MAVx0YefE4kzdNhlV1r7
11oAO+wq77X6Rwe76B1nHpj8Q+U8q6p6MQbcMzfNehs1h05mKub6STPgcUKK
pvjeP4ihOJXCozFANkvlvR4xi7ykQgLSFRlw5u+HScnuacQN2O9tq8qAiTtc
twdvf6Gm+VUn6NoLetrB9wbf/ERrh0q2BRkwIPemouCzwUnUdiiIv8mEAd9+
XzHgi0yiq/9ZqvzZyQCRh5dqk1UmUPersRVOBxmwt3Vut030GArSLv4nZ8eA
a7HPTVtyfqD16TfGPpxggOZFObL7tlF0K1Lu3dazC+e2WiG3koeRvtiPcqFL
DPBfupFe4vANjfgWvii4xoA/K2TG3m4YQptdzO+svc2A/oaifBPhr8jjVqHA
ybsMeLZbP//P8gGU9FLO+UU8A358Sb7wgdWPhITGDfhPGCC0fGeHj00v0lDc
9+xyFgN4phaffcK+IBvTV9SqPAYwAlbxiNefUWlkyNj2KgZEa9mq9O/8hH4U
TlndqmdAUHGgVhnuQazPVjXvmxmQSps8t3+kC11UWht3uJsBgjDoIHP6I9Ir
rd52epoBXe0z+/0k25Bjv8rLnHkGxHpYf1ckv0fRonfkZoWZoCxr7Lp1VSua
Nrf9fUWCCRbuzocsbFqQwrk6uxoyExJj21VPh7xDFvHqTcuZTHgYJrvfubwZ
ZQ/9S4lYw4R3OjHetzY3od4Vx6U61jHBrLlAlKHwFklpNV5k6jBB0tM+mtTU
gE77xJinGDBhTWOEbeyOeqQqvUEoz4oJEcN6PK2BanRw/QOXORsmTDwwjd80
VIWCDy7pAAcmiJ6zuLJ0uhINp7Y+r/VgQtQFYesxtQpEa+DTV5xnwtsT4+eR
dTnaOpHob+bLhH4TK8mIsDL0iO928GMIE1QD3OQ/SZWidpuO1+wIJni9mGdv
LC1BS66Dlt09JlgFW839cyxG9s0rln9PYYLJ0udLsgYLENc+Pe/vKyaEhefZ
pFzJRWZBUvKbqplAGTmlkuSfg65keN+8/oYJg41979zvZKNPs0b2Eh1MoBof
nytozkISxPNm8x4mNAz4XrT8m4n0N5PR3X4miJnJnF6plYnibvZJy00wYYfS
9SNRbs9RQ/a2S/YzC3yxz0tUJZ6huY6sb4//MmHyU9oK2eInyEret0xzOQuS
t+hUbTd4jAJNBpXPSrJAo+DtBltqGipw3RldJMuC6IN+ogfmUxEln3lyszwL
HOwroHQoGf21TaVLKrGgrFTi8YvOJNS3Qv11pzoL3P4Ocsw7E1GGnSHHQ58F
92Oshrb+e4giVzY26G9hgZISsfEG5yG6UGB5bvn2Bf7UC8JwxwNkJOHUknCA
BRfEpK5dC4xFyoVTl1xtWDBPT1PiM2OQlL2Psp4DC7Z1kNaYlN1D3YXh15o9
WaDuIXBBSy8aVdrTNWIvsODsrKtyuHgUeiyZ3O3gx4Jl1D8k+HEHeR3P0xUI
Z8EWr6/3Rz/cRtZSBn31USzYSeUHPuu9hQyK68Oi4liw3CYvCWbC0QrpniHV
JyzgSRY/SjMIQ1PFDpGzWSxQHcoO/jEaij44TBhU57PAYCWndrlzCEopWRxz
sIYF/lW2OnKxgSjY8abxmkYWNGfWStjvvIHcZKg/p/5jQXrBmHGRZABa+GDt
CP7CAkqagUtcxTUkT8qdtRxiwauc0OZXmVeRaKl+KneMBYcdNucyn/qhVtIe
gcL5hXp98BSQrvVFBaWdT/wXsSH+VUWdz+Bl9MDJfr/Zcjb0/nmv+VbqMnIu
884aorAX6hVN4YhdRGbOwodz2GwIpufLycScR+tlQ5b7KrBBq/hL4jg6hxa5
PLCjaLGh7lxjx9LsM+ib7FrJPj02cFyU+Y/9vVBT+Yvi5xvZ0OF41W+RgyeK
odSQjXayIW40P5Bi7o6uVOyqkLJY4OcrxfgedEMOrh9Odluz4Yqd/ylB99NI
q/L7a88TbGA3Toz8uHQS0U6e8dx4mg0Wzef8skZckABNUE78LBvqdb+WbHNx
Rm9OypxPusYGn27BI7opjiiLFqd4KpgNYqbRgmXWDii6SvE/3m021IYLZYRy
jyNbOk+l5QEb+l/GHW3rtkPG1ZUdcalssEyLf/ih2Rapnt7hf+IZGxgp8b7q
746i2WqbHsEiNkhMN+82WRhGP50eDmooZ0NISuuBVsYRVM3wXH+3lg2HIq2n
I6IPoVtuAeFqbWxo6buf++i2FZp98yQvoIsN3QKTsGzzAXRUsbnnUy8bFoZQ
vojIfqTZSVUNH2PDCuHKQwLZFihGB+8d+rXgDzONlxq/Fy0KP3ph4/xC/nUD
gKLN0beEvf0ziwgwXiQ19fGpGWI1fZ2RX0qAPvfE6te1u5HZvLfY7uUEBP0K
m3Ec24UKLeM00yQJcJ2im754uQONXVUzapUhQCOQet5LfzuSzyo/IEghYCyg
uHaifRsKFvvqu59FQGqiy442ZIJKN3jfucYh4MTmNNOXS4zRlP3ytEx5Av6W
2Mnrf9qCrMvWNS1TIuCVw/jNiAJDFDZa1qutSoCNp+BbRuEmVEk3n7ZRJ8Df
+31gWY0BUvE6yyrQJUAgcjBEXngjOpooqjGgR4C6fP3qVjVAkU0xm6UwATsv
6iWJNWP0d22Z8wlDAsK4MEgM8pDGvj2XI40IMHyTJSkTqofsr/XfLt9KwLV7
FxpvGG5AjT3LCmm7CVjEJ0xHenSQkHhM4xZzAo4Oyaofr9BGOnqqX9wsCaj1
OM+5nK2F4iLMltUfJOBDmPJ/QsUa6F1ZH2P6CAFGYcX39VrUkcgPLzWuHQFO
5Nb69Ck1dNLkvuX5EwRYzMyPGTxTRUleKk6pLgTIvdX5s1tVBbUnvvJpOUVA
T39XW3epEoK/vclKZwhYYyiTMEtdgzyUvPItzy34mfk19Gu3Inq0b2mD30UC
ll10sRZ/oYAkXihPffQjYG2HZ7mCvzwy/FSyZOl1AsRH1uiV+XHRWfHddK1A
AhQbVW98DpFDn457GgSHLfh1wrnHoopAMneWWOTdJqDEXcuA1ctGxuV3Hfsi
CSDkV0op7GKhTEZJGD+WgIwNWTMkOzoaMNmV5PCAgJhRL5fVy2iIdubLy4hE
AlgHJNtWvaKgK80iPSNpBNypMN6afoCMcv9GT1CeEkCLouzNwCT0TUlJZHMG
Aa13TrrdVZNBZv47VWJzF/BVh0Q3nhRK2T9mkp9PANWKGR5tKYl+K4fbtxYR
sKvzYGiOjwR60PIuXryCgO0vHfRC2sTRZIp70ZpqAoQ3zpRcsxFDW87JdGyu
JSByjdjS4HlR9J2wkPJ5S8Bl6eNLDzosRTD1S/XeOwJue94IC9VegiJqorbl
thJQZloUfk9SBOm5dlwd/bjwPkiK0x6Twih047mHoj0E+Gxb9mp8Wgh9lqGX
KHxZ6AfYI5S8VAgFFFpPHxok4Nep3Q8OmwqgztB56fPDBKzrj9F4OPeXv+5o
nFrUKAHhL/223/GY579f+snx7dSC3p4c9f6YWf6F55zEJX8W/HVqSr8iOsPn
Wth26gtywEM9ccNw7k9+3VwS6ewSDmQpdSXqxEzyTyUO7MgQ5wBJX31kac44
X3br6oBBaQ4oJTvOi/7+wS8ZcywjaBwYEf0ufb1zhH8sKn12H8GBpoOXavzF
vvHF8HfNcAUOFHe7VNX6fuVn9am61CpzIPW6pWqxdj9/f9CpFEFNDliKnYxz
kuvlC2hk9WzYwIG55zqPXA0+81PaJylu+hywlTy0sYLTw99+Sdvs8WYObFv+
FKVLdfKnVp0J+rKNA7ETM6tCdnbwDdxn5832cUC0+/Ot1rD/+DdLL56qsOOA
t7GWhPGLJn6nuGCv5mkO1Eg/E95Kr+evtbq6N+kiB5Y0ya0ymqvi978w3coN
4kCh+++Zk75l/AdiJP2EaA6UbR99E/ixkN8oZzQnGMOBriNbxPN3FPDn13vn
28Rz4JFPpnZ2Wx7/wLEuTU4KB8Yf9KodV8jlk0qSVz94wYGJ+4VNHncz+Yb/
tfX/y13Q3xJhuSk2g+/2bVni4QIOCNXX/F106Dm/iezKZJdxwM8vvT1pIp0f
eFJHKq6RA/8Ggl2rlVP4ApyaP/eHOHBAusLrSud9/jrd33l/RjjQKmf497rx
Pf6h7UpeVmMcSMx1vKdYH80v9L45RpvmwLvBxyLGKyP5Xu8s++8ukgPduwFT
qh7h/GG/wcYothz40E/mX2i8xn8/sCzh9l45MO5bvdv50yl+tfmNmPx9chDY
8vbUzZGT/NzypVE9VnLwW27M1UrdlR8ZtyRY6agcXPstEP9TwIm/12KxV4Wr
HPRNfffTjjrG/69KYOvkdTkouByT+TrEiv8uaXrcrEAOaEUFr2hbtvAbj/Zv
lGJzwZaSGpdgyOB/XpQ6c0eOCx5267zSL9L4UykOz6kKXKD1bjITbKHwqcPD
DI4KF1zvbzHIqyfx7dwnptfxuDBLym7tr5Pgz/r9e7rdkgvHvvNFJ3qF+QrJ
VNqNm1w4O+20bjBlmLfB6GOT2G0uOAq6R5f1DPFMh2Kuh0VygWnexbutPcg7
rUL8jIrlQt6AbdsPtX5eUY5CU0o6F54fpVrq633imVVr+lfWcGF3mb7iv7l3
vGMOP/nG9Vxozk0unCtt5p0VfTlZ38iFi0cVnuy+28SL3aFn09LKhS1rnjY2
CjfwBt8D/0svF6TSa7yfKVTzZs8KTR77yoV1fHmDRdmVPHF6ZdrQNy7YBW3X
3Le/gqdx2Eh2fJwLDv6q6773l/I2Cy5r9PjJha/X0opeR7zi7UusuzozwwX/
hKcj164U805sDuZdmOOCvc6QQ/atQt7/90XD//dF8/4HyIcMzw==
        "]]}, 
      {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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

        "]]}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->True,
     AxesOrigin->{0, 0},
     DisplayFunction:>$DisplayFunction,
     FormatType->TraditionalForm,
     PlotRange->{{-10, 10}, {-2.918444962958395, 2.918446220236733}},
     PlotRangeClipping->True,
     PlotRangePadding->{
       Scaled[0.02], 
       Scaled[0.02]}], {-1, -0.6180339887498948}, {
    Left, Bottom}, {2, 1.2360679774997896`}], GraphicsGroupBox[{
     {GrayLevel[0], 
      RectangleBox[{1.05, -0.45}, {1.425418994413408, 0.3499999999999999}]}, 
     {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
      GraphicsGroupBox[{
        RectangleBox[{1, -0.4}, {1.3754189944134079`, 0.3999999999999999}], 
        InsetBox[
         GraphicsBox[{{{InsetBox[
              GraphicsBox[
               {RGBColor[0, 0, 1], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 2\"\>", {1.2100000000000002`, 0.58}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {RGBColor[1, 1, 0], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 1\"\>", {1.2100000000000002`, 1.74}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.37820393249936846`, 0.6, 0.6], Dashing[{0., Small}], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 2.4}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.5\"\>", {1.2100000000000002`, 2.9}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.1421359549995791, 0.6, 0.6], Thickness[Tiny], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 3.56}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.3\"\>", \
{1.2100000000000002`, 4.0600000000000005`}, {-1, 0}, Automatic, {1, 0}]}, {
             InsetBox[
              GraphicsBox[
               {Hue[0.9060679774997897, 0.6, 0.6], Thickness[Large], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 4.72}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.1\"\>", {1.2100000000000002`, 5.22}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 5.88}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.05\"\>", {1.2100000000000002`, 6.38}, \
{-1, 0}, Automatic, {1, 0}]}}, {}},
          AspectRatio->2.1309523809523805`,
          FormatType->TraditionalForm,
          PlotRange->{{-0.1, 3.26}, {-0.1, 7.059999999999999}}], {1, -0.4}, {
         Left, Bottom}, {0.37541899441340787`, 0.7999999999999999}]}]}}]},
  AspectRatio->Automatic,
  Background->None,
  ColorOutput->Automatic,
  ImageSize->{Automatic, 327.8070496611135},
  PlotRange->All]], "Output",
 CellChangeTimes->{3.546136475915312*^9, 3.546136838876515*^9, 
  3.546136959388898*^9, 3.546137131823912*^9, 3.546137660151388*^9, 
  3.546139014034887*^9, 3.546148086763807*^9, 3.546229449155101*^9}]
}, Open  ]]
},
WindowSize->{935, 1028},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/honza/IF-Laplace.pdf"},
FrontEndVersion->"8.0 for Linux x86 (32-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 290, 5, 30, "Input"],
Cell[850, 27, 325, 7, 50, "Input"],
Cell[CellGroupData[{
Cell[1200, 38, 710, 17, 30, "Input"],
Cell[1913, 57, 625, 14, 58, "Output"]
}, Open  ]],
Cell[2553, 74, 157, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[2735, 81, 620, 13, 50, "Input"],
Cell[3358, 96, 656, 14, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4051, 115, 706, 13, 30, "Input"],
Cell[4760, 130, 778, 15, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5575, 150, 410, 10, 30, "Input"],
Cell[5988, 162, 1017, 28, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7042, 195, 679, 14, 30, "Input"],
Cell[7724, 211, 1020, 25, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8781, 241, 1045, 19, 30, "Input"],
Cell[9829, 262, 1156, 26, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11022, 293, 503, 10, 30, "Input"],
Cell[11528, 305, 730, 20, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12295, 330, 661, 14, 30, "Input"],
Cell[12959, 346, 819, 19, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13815, 370, 854, 16, 30, "Input"],
Cell[14672, 388, 1086, 23, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15795, 416, 337, 6, 30, "Input"],
Cell[16135, 424, 789, 17, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16961, 446, 343, 8, 30, "Input"],
Cell[17307, 456, 814, 18, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18158, 479, 787, 20, 30, "Input"],
Cell[18948, 501, 2162, 59, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21147, 565, 673, 14, 30, "Input"],
Cell[21823, 581, 1691, 45, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23551, 631, 448, 11, 30, "Input"],
Cell[24002, 644, 931, 23, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24970, 672, 685, 16, 30, "Input"],
Cell[25658, 690, 1398, 36, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27093, 731, 339, 9, 50, "Input"],
Cell[27435, 742, 1376, 34, 67, "Output"]
}, Open  ]],
Cell[28826, 779, 1370, 34, 82, "Input"],
Cell[30199, 815, 241, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[30465, 823, 2239, 47, 240, "Input"],
Cell[32707, 872, 67371, 1129, 349, "Output"]
}, Open  ]],
Cell[100093, 2004, 172, 3, 88, "Input"],
Cell[100268, 2009, 271, 9, 10, "Text"],
Cell[100542, 2020, 245, 5, 30, "Input"],
Cell[100790, 2027, 325, 7, 50, "Input"],
Cell[CellGroupData[{
Cell[101140, 2038, 185, 3, 30, "Input"],
Cell[101328, 2043, 143, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101508, 2050, 620, 13, 50, "Input"],
Cell[102131, 2065, 665, 13, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102833, 2083, 706, 13, 30, "Input"],
Cell[103542, 2098, 810, 15, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104389, 2118, 410, 10, 30, "Input"],
Cell[104802, 2130, 997, 26, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105836, 2161, 793, 17, 30, "Input"],
Cell[106632, 2180, 1004, 23, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107673, 2208, 996, 18, 30, "Input"],
Cell[108672, 2228, 1157, 25, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109866, 2258, 503, 10, 30, "Input"],
Cell[110372, 2270, 753, 20, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111162, 2295, 756, 17, 30, "Input"],
Cell[111921, 2314, 833, 19, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112791, 2338, 855, 16, 30, "Input"],
Cell[113649, 2356, 1108, 23, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114794, 2384, 337, 6, 30, "Input"],
Cell[115134, 2392, 723, 14, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115894, 2411, 343, 8, 30, "Input"],
Cell[116240, 2421, 537, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116814, 2434, 787, 20, 30, "Input"],
Cell[117604, 2456, 1833, 47, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119474, 2508, 607, 15, 30, "Input"],
Cell[120084, 2525, 1599, 42, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121720, 2572, 600, 17, 30, "Input"],
Cell[122323, 2591, 779, 23, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123139, 2619, 448, 11, 30, "Input"],
Cell[123590, 2632, 897, 16, 29, "Message"],
Cell[124490, 2650, 1871, 48, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126398, 2703, 685, 16, 30, "Input"],
Cell[127086, 2721, 1572, 42, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128695, 2768, 397, 10, 50, "Input"],
Cell[129095, 2780, 1245, 31, 48, "Output"]
}, Open  ]],
Cell[130355, 2814, 1254, 31, 56, "Input"],
Cell[131612, 2847, 241, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[131878, 2855, 2262, 47, 240, "Input"],
Cell[134143, 2904, 122390, 2030, 343, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
