(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    222704,       4370]
NotebookOptionsPosition[    217740,       4201]
NotebookOutlinePosition[    218285,       4221]
CellTagsIndexPosition[    218242,       4218]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Exponencialni", ":"}]], "Input",
 CellChangeTimes->{{3.543684992882703*^9, 3.543684994655665*^9}, {
  3.544320894879453*^9, 3.544320906231942*^9}, {3.544321013728986*^9, 
  3.544321015677552*^9}, {3.546142149792607*^9, 3.546142151830445*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"\[Alpha]", ",", "\[Sigma]", ",", "\[Mu]", ",", "x"}], "]"}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.54613653746201*^9, 3.546136542655197*^9}, {
  3.546136596080742*^9, 3.546136617338891*^9}, {3.546139122615226*^9, 
  3.546139122753646*^9}, {3.546142145398552*^9, 3.546142147590013*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{
   RowBox[{"1", "/", "\[Sigma]"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}]}], "/", 
     RowBox[{"(", "\[Sigma]", ")"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.543684783475436*^9, 3.543684946824956*^9}, 
   3.543685129663494*^9, {3.544295734613175*^9, 3.54429574288267*^9}, {
   3.54429580082901*^9, 3.54429582329368*^9}, {3.544320780873962*^9, 
   3.544320785346142*^9}, 3.544320837287442*^9, {3.544320881922005*^9, 
   3.54432088239278*^9}, {3.54432100764836*^9, 3.544321019573801*^9}, {
   3.546139154712319*^9, 3.546139168018737*^9}, {3.546142157053596*^9, 
   3.546142159126751*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "x"}], "+", "\[Mu]"}], "\[Sigma]"]], "\[Sigma]"]], "Output",\

 CellChangeTimes->{
  3.544320837880473*^9, {3.544320883580563*^9, 3.544320911227469*^9}, 
   3.545309803843712*^9, 3.546016483142384*^9, 3.546017657044242*^9, 
   3.546060076762132*^9, 3.546060141670154*^9, 3.546060377463162*^9, 
   3.546061431182232*^9, 3.54606188717779*^9, 3.546071462150901*^9, 
   3.546136812639187*^9, 3.546138975120109*^9, 3.546139174129545*^9, 
   3.546142160156872*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]", " ", "=", " ", "\[Sigma]"}], ";"}]], "Input",
 CellChangeTimes->{{3.546137329720142*^9, 3.546137340576589*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ss", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Log", "[", "p", "]"}], ",", "\[Theta]"}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.543684996758039*^9, 3.543685116992625*^9}, {
   3.543685161495624*^9, 3.543685164824434*^9}, {3.543685617602922*^9, 
   3.543685622261405*^9}, {3.544295746546906*^9, 3.544295827428027*^9}, {
   3.544295874222879*^9, 3.544295884036298*^9}, 3.546016486016091*^9, {
   3.54601942039296*^9, 3.546019421197285*^9}, {3.546137342783463*^9, 
   3.54613734607702*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "x"}], "+", "\[Mu]", "+", "\[Sigma]"}], 
   SuperscriptBox["\[Sigma]", "2"]]}]], "Output",
 CellChangeTimes->{
  3.544295884678365*^9, 3.545309805435313*^9, 3.546016487855942*^9, 
   3.546017670089106*^9, 3.546019421888676*^9, 3.546059377336055*^9, 
   3.546060078214513*^9, {3.546060139149627*^9, 3.546060144271088*^9}, 
   3.546060382291988*^9, 3.546061435830015*^9, 3.546061887191896*^9, 
   3.546071462301595*^9, 3.546136812733527*^9, {3.546137347255125*^9, 
   3.546137353812429*^9}, 3.54613897527059*^9, 3.546139187604805*^9, 
   3.546142162785218*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ss", "'"}], " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"ss", ",", "\[Theta]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.543685180126496*^9, 3.543685298634426*^9}, {
   3.543685431540192*^9, 3.543685489527895*^9}, 3.543685534481716*^9, {
   3.543685624867701*^9, 3.543685665571384*^9}, {3.543688058809387*^9, 
   3.543688137132826*^9}, {3.54368832453227*^9, 3.543688330973921*^9}, {
   3.544295753339424*^9, 3.544295760783175*^9}, {3.544295853271568*^9, 
   3.544295889194162*^9}, {3.546016489095013*^9, 3.54601649563242*^9}, {
   3.546019427600456*^9, 3.546019428430676*^9}, {3.54613735651055*^9, 
   3.546137357241563*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "x"}], "+", 
   RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]"}], 
  SuperscriptBox["\[Sigma]", "3"]]], "Output",
 CellChangeTimes->{{3.543685658802668*^9, 3.54368566906248*^9}, {
   3.54368807593941*^9, 3.543688142568622*^9}, 3.543688332640362*^9, {
   3.54429586658533*^9, 3.544295890282246*^9}, 3.545309806594238*^9, {
   3.54601648969558*^9, 3.546016496189694*^9}, 3.546017677241552*^9, 
   3.546019429586647*^9, 3.546059378810901*^9, 3.546060079358672*^9, 
   3.546060145605671*^9, 3.546060384883913*^9, 3.546061436928236*^9, 
   3.546061887206539*^9, 3.546071462474284*^9, 3.546136812904919*^9, 
   3.546137359182575*^9, 3.546138975369357*^9, 3.546139189829382*^9, 
   3.546142164220157*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"p", "^", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}]}], "*", "ss"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.546016522942259*^9, 3.546016539967992*^9}, {
   3.546017704408171*^9, 3.546017705125968*^9}, 3.546019441035926*^9, {
   3.546019471091529*^9, 3.546019479505023*^9}, {3.546139213434791*^9, 
   3.546139222275989*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "x"}], "+", "\[Mu]"}], "\[Sigma]"]], "\[Sigma]"], 
      ")"}], 
     RowBox[{"1", "+", "\[Alpha]"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "x"}], "+", "\[Mu]", "+", "\[Sigma]"}], ")"}]}], 
   SuperscriptBox["\[Sigma]", "2"]]}]], "Output",
 CellChangeTimes->{
  3.546016544655516*^9, {3.546017682666078*^9, 3.546017707524088*^9}, 
   3.546019442560441*^9, 3.546019480115117*^9, 3.546060081264836*^9, 
   3.546060146559043*^9, 3.546060400916709*^9, 3.546061439971061*^9, 
   3.546061887221677*^9, 3.546071464395533*^9, 3.546136814598201*^9, 
   3.546137368746807*^9, 3.546138977048079*^9, {3.546139192968771*^9, 
   3.546139222951527*^9}, 3.546142167270476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"csIntCitatel1", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "+", "\[Mu]"}], ")"}], "\[Rule]", " ", 
     RowBox[{
      RowBox[{"-", "y"}], "*", "\[Sigma]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016644463204*^9, 3.546016698494855*^9}, {
  3.546017718072268*^9, 3.546017718824221*^9}, {3.546019484592136*^9, 
  3.546019489873669*^9}, {3.5460588628943*^9, 3.546058863025369*^9}, {
  3.546058985559764*^9, 3.54605898695691*^9}, {3.546139232903175*^9, 
  3.546139237687464*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", "y"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "y"}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "y"}]], "\[Sigma]"], ")"}], 
   RowBox[{"2", "+", "\[Alpha]"}]]}]], "Output",
 CellChangeTimes->{
  3.546016699867985*^9, {3.54601771087677*^9, 3.546017720075646*^9}, 
   3.546019451857504*^9, 3.54601949082593*^9, 3.546058865086693*^9, 
   3.546058991110302*^9, 3.546059305292639*^9, {3.546060081368136*^9, 
   3.546060082414614*^9}, 3.546060147815039*^9, 3.546060407046361*^9, 
   3.546061531311124*^9, 3.546061887295093*^9, 3.546071465443946*^9, 
   3.546136815322759*^9, 3.546137371159345*^9, 3.546138977799651*^9, 
   3.546139201693588*^9, 3.546139239058541*^9, 3.546142169522902*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"csIntCitatel2", "*", "\[Sigma]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.546016758763041*^9, 3.546016792970542*^9}, {
  3.546017733204061*^9, 3.546017740186443*^9}, {3.546017914630278*^9, 
  3.546017915139312*^9}, {3.54601813955664*^9, 3.546018141998787*^9}, {
  3.546019493851544*^9, 3.546019499184226*^9}, {3.546058803868124*^9, 
  3.546058826478995*^9}, {3.546058870461028*^9, 3.546058872003744*^9}, {
  3.546059018757644*^9, 3.546059019951728*^9}, {3.546059209756854*^9, 
  3.546059224271504*^9}, {3.546060118428053*^9, 3.546060118951836*^9}, {
  3.546060429719045*^9, 3.546060435859049*^9}, {3.54606155661684*^9, 
  3.546061556750753*^9}, {3.54606187684573*^9, 3.546061879156262*^9}, {
  3.54613924917142*^9, 3.546139251472002*^9}, {3.546139378539445*^9, 
  3.546139378909438*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Alpha]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "\[Sigma]"], ")"}], 
       RowBox[{"1", "+", "\[Alpha]"}]]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"]]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546016797608153*^9, 3.546017744115164*^9, {3.546017901155742*^9, 
   3.546017918255887*^9}, 3.54601814479272*^9, 3.5460194592406*^9, 
   3.546019501847466*^9, 3.546058816227488*^9, 3.546058858910903*^9, 
   3.546058988908802*^9, 3.546059027020108*^9, {3.546059207468971*^9, 
   3.546059213730049*^9}, 3.546059311153677*^9, 3.54606008545984*^9, {
   3.546060121584368*^9, 3.54606015090936*^9}, 3.546060482353594*^9, 
   3.546061561105924*^9, 3.546061888934606*^9, 3.546071469576597*^9, 
   3.546136819048198*^9, 3.546137375365945*^9, 3.546138981516168*^9, 
   3.546139261080075*^9, 3.546139381564993*^9, 3.546142175908132*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"p", "^", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Alpha]"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016812881654*^9, 3.546016818147665*^9}, {
  3.546016886250683*^9, 3.546016904857094*^9}, {3.546018151081055*^9, 
  3.546018151902321*^9}, {3.546019505441384*^9, 3.546019506907304*^9}, {
  3.546059876912032*^9, 3.546059883931349*^9}, {3.546060057180457*^9, 
  3.546060062381365*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "x"}], "+", "\[Mu]"}], "\[Sigma]"]], "\[Sigma]"], ")"}], 
  RowBox[{"1", "+", "\[Alpha]"}]]], "Output",
 CellChangeTimes->{
  3.546059884316431*^9, {3.54606006350173*^9, 3.546060085628376*^9}, 
   3.546060152429164*^9, 3.546060487613641*^9, 3.546061563038276*^9, 
   3.546061889005262*^9, 3.546071469972666*^9, 3.546136819448887*^9, 
   3.546137376078972*^9, 3.546138981908363*^9, 3.546139265552974*^9, 
   3.54614217604895*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"csIntJmenovatel1", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "+", "\[Mu]"}], ")"}], "\[Rule]", " ", 
     RowBox[{
      RowBox[{"-", "y"}], "*", "\[Sigma]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016918820028*^9, 3.546016933459735*^9}, {
  3.546018162034847*^9, 3.546018162802109*^9}, {3.546019511970786*^9, 
  3.546019518337126*^9}, {3.546059893179542*^9, 3.546059893847781*^9}, {
  3.546060047266137*^9, 3.546060052681203*^9}, {3.546139271790615*^9, 
  3.546139275904018*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "y"}]], "\[Sigma]"], ")"}], 
  RowBox[{"1", "+", "\[Alpha]"}]]], "Output",
 CellChangeTimes->{
  3.546016923575523*^9, 3.546017064644657*^9, 3.54601816733437*^9, 
   3.546019519156449*^9, 3.546059316503319*^9, 3.546059393343114*^9, 
   3.546059588516448*^9, 3.546059894431348*^9, {3.546060064924788*^9, 
   3.546060086001004*^9}, 3.546060156246333*^9, 3.546060505013231*^9, 
   3.546061566515456*^9, 3.546061889013432*^9, 3.546071470260381*^9, 
   3.546136819734045*^9, 3.546137379438253*^9, 3.546138982186393*^9, 
   3.54613927674043*^9, 3.546142176974556*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"csIntJmenovatel2", "*", "\[Sigma]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.546017079018856*^9, 3.546017090969569*^9}, {
  3.546018190056803*^9, 3.546018190821094*^9}, {3.546059043677427*^9, 
  3.54605904460088*^9}, {3.546059403368323*^9, 3.546059411524818*^9}, {
  3.546059479614725*^9, 3.546059492483282*^9}, {3.546059617399394*^9, 
  3.546059617680817*^9}, {3.546059915271946*^9, 3.546059916341114*^9}, {
  3.546060024912348*^9, 3.546060025553251*^9}, {3.546061569414866*^9, 
  3.546061603372963*^9}, {3.54606187218996*^9, 3.546061873288195*^9}, {
  3.546139283077568*^9, 3.546139283531054*^9}, {3.546142184986389*^9, 
  3.546142185198766*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "\[Sigma]"], ")"}], "\[Alpha]"], 
    RowBox[{"1", "+", "\[Alpha]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017129629872*^9, {3.546018185130961*^9, 3.546018193247052*^9}, 
   3.546019531385107*^9, 3.546059048224064*^9, {3.546059319837184*^9, 
   3.546059326263401*^9}, 3.546059398031549*^9, {3.546059485206171*^9, 
   3.546059497029928*^9}, {3.546059600135839*^9, 3.546059619744119*^9}, {
   3.546059902110613*^9, 3.546059918797663*^9}, 3.546060032150784*^9, {
   3.546060066913525*^9, 3.546060090042542*^9}, 3.546060159740637*^9, 
   3.546060290156587*^9, 3.546060519250223*^9, 3.546061573570523*^9, 
   3.54606160547765*^9, 3.546061890499446*^9, 3.546071472984868*^9, 
   3.546136822248697*^9, 3.546137382344213*^9, 3.546138984948668*^9, 
   3.546139287858517*^9, 3.546142188975945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cs", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"csIntCitatel3", "/", "csIntJmenovatel3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546017159619789*^9, 3.546017171553549*^9}, {
   3.546018198699244*^9, 3.54601820322215*^9}, 3.546061584597621*^9, {
   3.546061615263666*^9, 3.546061627686996*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Alpha]", 
     RowBox[{"\[Sigma]", "+", 
      RowBox[{"\[Alpha]", " ", "\[Sigma]"}]}]]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.546017173049018*^9, 3.546018204442568*^9, 
  3.546019534525334*^9, 3.546059053644503*^9, 3.546060092729884*^9, 
  3.546060126263668*^9, 3.546060162380328*^9, 3.54606029189522*^9, 
  3.546060530244291*^9, 3.546061576542723*^9, 3.546061631929342*^9, 
  3.546061890565066*^9, 3.54607147309259*^9, 3.54608081889764*^9, 
  3.546136822442753*^9, 3.546137385359962*^9, 3.546138985121945*^9, 
  3.54613929206698*^9, 3.546142191200094*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cs", "'"}], " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"cs", ",", "\[Theta]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546017177523059*^9, 3.546017189050696*^9}, {
  3.546018219369372*^9, 3.546018251272656*^9}, {3.546137392518803*^9, 
  3.546137393253288*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox["\[Alpha]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
     SuperscriptBox["\[Sigma]", "2"]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017189978016*^9, 3.546017505585954*^9, {3.546018213521305*^9, 
   3.546018252329528*^9}, 3.546019535664949*^9, 3.546059054652897*^9, 
   3.546060095789459*^9, 3.54606013262094*^9, 3.546060172383065*^9, 
   3.546060295503429*^9, 3.54606055374719*^9, 3.546061634658587*^9, 
   3.54606189057455*^9, 3.546071473171214*^9, 3.546136822576293*^9, {
   3.54613738679792*^9, 3.546137394710698*^9}, 3.546138985242507*^9, 
   3.546139296196031*^9, 3.546142193375522*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia", " ", "=", 
  RowBox[{"FullSimplify", "[", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ss", "'"}], " ", "-", " ", 
      RowBox[{"cs", "'"}], "-", 
      RowBox[{"\[Alpha]", 
       RowBox[{"(", 
        RowBox[{"ss", "-", "cs"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"cs", "-", "ss"}], ")"}]}]}], ")"}], "*", 
    RowBox[{"p", "^", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016927559429*^9, 3.546016927697169*^9}, {
   3.546017069821145*^9, 3.546017085073989*^9}, 3.546017230368702*^9, {
   3.546017453638702*^9, 3.546017454633499*^9}, {3.546017487540381*^9, 
   3.546017511750122*^9}, 3.546060275246113*^9, {3.546060594894228*^9, 
   3.546060607304117*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Mu]"}], "\[Sigma]"]], "\[Sigma]"], 
       ")"}], 
      RowBox[{"1", "+", "\[Alpha]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], " ", "\[Sigma]"}], 
        RowBox[{"1", "+", "\[Alpha]"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
         SuperscriptBox["\[Sigma]", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"]]}], ")"}]}], 
    SuperscriptBox["\[Sigma]", "4"]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017256490459*^9, 3.546017457244757*^9, {3.546017489726901*^9, 
   3.546017516275889*^9}, {3.546018256852577*^9, 3.546018260098833*^9}, 
   3.546019563020585*^9, 3.546060105887493*^9, 3.546060175004406*^9, {
   3.546060258495388*^9, 3.546060300214475*^9}, {3.546060588816648*^9, 
   3.54606060801996*^9}, 3.546061640615294*^9, 3.546061890584713*^9, 
   3.546071477817601*^9, 3.546136827059069*^9, 3.546137402444307*^9, 
   3.546138989676323*^9, 3.546139309284662*^9, 3.546142197260499*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Ia", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "+", "\[Mu]"}], ")"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", "y"}], "*", "\[Sigma]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016832069324*^9, 3.54601683491256*^9}, {
  3.546016912126374*^9, 3.546016916727737*^9}, {3.546017322178493*^9, 
  3.546017372508301*^9}, {3.546017463020216*^9, 3.54601752428375*^9}, {
  3.546139316864751*^9, 3.546139325896242*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "y"}]], "\[Sigma]"], ")"}], 
      RowBox[{"1", "+", "\[Alpha]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], " ", "\[Sigma]"}], 
        RowBox[{"1", "+", "\[Alpha]"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
         SuperscriptBox["\[Sigma]", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"]]}], ")"}]}], 
    SuperscriptBox["\[Sigma]", "4"]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.546018279534565*^9, 3.546019565998986*^9, 
  3.546060183851695*^9, 3.546060303687034*^9, 3.546060617535814*^9, 
  3.546061648930034*^9, 3.54606189059513*^9, 3.546071480580858*^9, 
  3.546136829650342*^9, 3.546137402591788*^9, 3.546138992333017*^9, 
  3.546139326975622*^9, 3.546142202256099*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Ia1", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Rule]", 
     RowBox[{"y", "*", "\[Sigma]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546142212199985*^9, 3.546142218376068*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Alpha]"}], "+", 
       RowBox[{"y", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "y", "+", 
             RowBox[{"y", " ", "\[Alpha]"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "y"}]], "\[Sigma]"], ")"}], 
      RowBox[{"1", "+", "\[Alpha]"}]]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Sigma]", "2"]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.546142221929197*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Ia2", "*", "\[Sigma]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.546017553376211*^9, 3.546017578186591*^9}, {
  3.546060190028669*^9, 3.546060215541151*^9}, {3.54613936270099*^9, 
  3.546139368735142*^9}, {3.546142220156086*^9, 3.546142239246236*^9}, {
  3.546142309324494*^9, 3.546142309469129*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", "\[Sigma]"], ")"}], 
      RowBox[{"2", "+", "\[Alpha]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Alpha]"}], ")"}], "3"]]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017581525956*^9, 3.546018298476216*^9, 3.546019591866922*^9, {
   3.546060198866893*^9, 3.546060217651798*^9}, 3.546060305919824*^9, 
   3.546060630129236*^9, 3.546061654525928*^9, 3.546061891049295*^9, 
   3.546071482133935*^9, {3.546080914253364*^9, 3.546080918402068*^9}, 
   3.546136831104139*^9, 3.54613740394295*^9, 3.546138993856325*^9, {
   3.546142232981042*^9, 3.546142268341217*^9}, 3.546142313719171*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IF", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Ia3", "^", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]}], " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{"p", "^", "\[Alpha]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"ss", "-", "cs"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546018347393014*^9, 3.546018403066614*^9}, {
   3.546018436099692*^9, 3.546018441274599*^9}, 3.546019614310392*^9, {
   3.546019656617135*^9, 3.546019704529838*^9}, {3.546057935083661*^9, 
   3.546057940051575*^9}, {3.546060690488888*^9, 3.546060692698881*^9}, {
   3.546136907926816*^9, 3.54613692580183*^9}, {3.546142254371854*^9, 
   3.546142255649742*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", "\[Mu]"}], ")"}]}], "-", "\[Sigma]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "\[Sigma]"], ")"}], 
     RowBox[{"-", "\[Alpha]"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "x"}], "+", "\[Mu]"}], "\[Sigma]"]], "\[Sigma]"], 
      ")"}], "\[Alpha]"]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546018404404153*^9, 3.546018443169971*^9, 3.546018629101108*^9, {
   3.546019667419693*^9, 3.546019705617033*^9}, 3.546057940717521*^9, 
   3.546060221228167*^9, 3.546060308848118*^9, 3.546060698993428*^9, 
   3.546061658414636*^9, 3.546061891057757*^9, 3.546071483795239*^9, 
   3.546080008567537*^9, 3.54608080405*^9, {3.546080909027874*^9, 
   3.546080920813304*^9}, 3.546136832732765*^9, 3.546136928984752*^9, 
   3.546137408183165*^9, 3.546138995440497*^9, 3.546142259527324*^9, 
   3.546142331398794*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IF1", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"IF", "/.", 
     RowBox[{"\[Mu]", "->", "0"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.546017428290329*^9, {3.546018467395976*^9, 3.546018491191415*^9}, {
   3.546018587031472*^9, 3.546018597806486*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"x", " ", "\[Alpha]"}], "-", "\[Sigma]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "\[Sigma]"], ")"}], 
     RowBox[{"-", "\[Alpha]"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["x", "\[Sigma]"]}]], "\[Sigma]"], ")"}], "\[Alpha]"]}], 
   ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.546018482088292*^9, 3.546018491764403*^9}, {
   3.546018592076636*^9, 3.54601859900646*^9}, 3.546018631243809*^9, 
   3.54601904808341*^9, {3.546019682797311*^9, 3.546019707755424*^9}, 
   3.546057945478465*^9, 3.54606022766859*^9, 3.546060313691759*^9, 
   3.546060708677693*^9, 3.546061660974805*^9, 3.546061891066516*^9, 
   3.546071484501638*^9, 3.546079996627684*^9, 3.546136078734947*^9, 
   3.546136322826237*^9, 3.546136834719354*^9, 3.546136940787303*^9, 
   3.546137429657752*^9, 3.546138996088825*^9, 3.546142338577926*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IFun", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "\[Alpha]"}], "}"}], " ", ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"x", " ", "\[Alpha]"}], "-", "\[Sigma]"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "\[Sigma]"], ")"}], 
       RowBox[{"-", "\[Alpha]"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox["x", "\[Sigma]"]}]], "\[Sigma]"], ")"}], 
       "\[Alpha]"]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.54608073954952*^9, 3.546080787340927*^9}, {
   3.546080827508503*^9, 3.546080832763547*^9}, {3.546080881724667*^9, 
   3.54608089839569*^9}, {3.546136031913543*^9, 3.546136106756538*^9}, {
   3.546136264957334*^9, 3.546136269166274*^9}, {3.546136300237964*^9, 
   3.546136302873075*^9}, 3.546136404353272*^9, {3.546136877306471*^9, 
   3.546136878124014*^9}, {3.546136974390393*^9, 3.546136995325726*^9}, {
   3.546137115334749*^9, 3.546137121892679*^9}, 3.546142351077402*^9}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.546078399638204*^9, 3.546078434270568*^9}, {
  3.546078523483738*^9, 3.546078526611331*^9}, {3.546078631725602*^9, 
  3.546078677869414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "0.05"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "0.1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "0.3"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegend", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Alpha] = 0.05\>\"", ",", "\"\<\[Alpha] = 0.1\>\"", ",", 
      "\"\<\[Alpha] = 0.3\>\"", ",", "\"\<\[Alpha] = 0.5\>\"", ",", 
      "\"\<\[Alpha] = 1\>\"", ",", "\"\<\[Alpha] = 2\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LegendPosition", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "0.4"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Dashed", ",", " ", "Thick", ",", "Thin", ",", " ", "Dotted", ",", " ", 
      "Yellow", ",", " ", "Blue"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.546071566443362*^9, 3.546071604772914*^9}, {
   3.546071664304524*^9, 3.546071734557583*^9}, {3.546071769565434*^9, 
   3.546071781503191*^9}, {3.546077877666447*^9, 3.546077878779971*^9}, {
   3.546078077257591*^9, 3.546078094273397*^9}, {3.546078128979278*^9, 
   3.546078131508565*^9}, {3.546078195525481*^9, 3.546078246143438*^9}, {
   3.54607831567725*^9, 3.546078368785814*^9}, {3.546078441904356*^9, 
   3.546078501052553*^9}, 3.546078697301196*^9, {3.546078795298968*^9, 
   3.546078819926423*^9}, {3.546078851304196*^9, 3.54607891370029*^9}, {
   3.546079894604615*^9, 3.546079946211399*^9}, {3.546136122778719*^9, 
   3.546136164810206*^9}, 3.546136449027762*^9, {3.546142382583092*^9, 
   3.546142383271364*^9}, 3.546225007531963*^9, {3.546225305704167*^9, 
   3.54622530934259*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    GraphicsBox[{{}, {}, 
      {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVzms0lAkAh/GZBtkxyTCGV4wZr4xLSZ1EF73/6ORauxZpOYmRGW1iczmV
SxslnCItK5EVk8p2EGnLJiNEuRa7UrSVIVt0YRr3su2H5/y+PgJRxPchi2g0
2vav/W/BUZHa6r2nNksDOlp6peOyph6+hy9/H/Xa4Pa6/Oxx2UJz3XE+/wi1
5kbPo8DkcVlBfbqxKj+NYqf7nvwgHpeFOcQcmDI+TzmUXf1kYDku65kLzf5o
XEr92mvRVXr9o2xx/6DwnXENdTfDkbEj4YOsqLXw4KjxQ8pqiw/PrnZUVl6R
1h9m/YxyWn+JM3pLLpNQj8+PRcqpYs3S5dua+mThwxby6vI31BzdvELV676M
KTghfGH/kRqoGnKUeFVSGVptlkWBCsq5yuFIMrObEvV7yxjtk1R6etfvXI+X
1MH7J0QRwlnKtfR2mYXbCFX5E8tL3/UzxZvZntRT9o4qitv/1saXBttS24Sw
jRNUUuG856cxOu7IvjFz81FStJ6XqI1lIGqN/OTIt9OUWbT4sLelKlTH7jkZ
xM5RQ8pzOzXuqiE2YFq8POAL5Tb8Y8IvB9WxezpDnn+Lhh1DmVY8HhM+zof0
Im0W4W2j6NiDMg3Y5cTdDEllwJrda+S0ZwmeJWUUS5QqYFLKoAGFJlbHKKmr
jmpwfuc3ZeKjhYb+K6cfSBejr2Ev3W8FG0lr+fZpk+q4mdoUwFeyUdLh75pl
xYRYNeZlZ6c2ssvd7U2jNBAcGXeTlaeD2TetS1m/sbBKYtXpEcRB3gv/lora
JejSXqERs14XeU6T9PNjmrhTnpS/gsGFecgjSR9NC3F0y+/an3Mhavfcm5Sl
BeZArEt4tR7oZ7euUuGzMXxZkF0Yr48urdGtjItsZJsTKjU+BJYmDEWlCbWR
mSduCeIb4EKA8XGGVBt+2bs7WSMGuNVs2uhI6GB6a8lMYd0yMDmBx+NzdCAf
djzckGIIPzsi9og6B8UOq5d1BBlhQTPr6fwxDsqSY9iSlTyQ5+ivKt9zkOIT
7M5Q8hD8xGBDia8ubAeKSlM6jOHqqfihoFkXuRb5ZR3ufLTqWc+nWHHxc316
rnsNHwampp6sHC62L/MpaTUVYISWE942x8WW8BZ/dpoAzKkzg/a79FBoKDJt
VwrAjqbnNtfowbTxSs4OfxPkqdcmBmvrI3Nlg2V3nQkWKl8YfRbrQ6xQefzQ
kkR8PVt3W70+RJUT/LQzJA48erXWmU0gLMlr3u0siU1zKq+vaROI8ap+wsoi
caE5Yr8Wh0CqMiYjM4eEd7+5oo9LoHz9zNy5AhKxdomTEkMCM/cWei9fI9H9
4VRXgpBAZjcrvamFxCGF+qtUBwJ50gOhJx+SaN9oL/h3MwFpdKeTSxuJ1qs6
65xB4A9u5mxbJ4mI6P7nKk4EBvx0Qnv+JuEapGZ21IWAUE44DcpJ2IYm54d6
EbCpjuVdGibxgPFeeN+bwIbk/pmQERKJtWvTBDsJeAgLrr95S+LFfGjr010E
IvfzeePjJG5MNDq7BBCI35Q4U6Ug4VYVHSfdQyB5yeBf0UoSU4cNT3wJJJBb
IT01PU1i4vRuTnUwgeJjKpI/Z0lEaX/O1wwhcM0zxDF+/uvv0ovToWIC1SbN
Rpu/kEgtdLVslBCoU5jNLCyQsP5n3sZoH4H/ANN0Ibs=
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Thickness[Large], 
       LineBox[CompressedData["
1:eJwVz3k81Hkcx/Fh3Ibmp3UzZnzLuCraLSv0/ZQOYbXleqQU484V0bpq04ZU
yjI5s1ZCWMomrcjImWtaRG145OFqiRXTxKDsrz/ej9fj+eebxQk96iNOoVAc
yX1t3gWOlKn3td1UfbNi/RMCXks/096VGYDnu+bPzh4S8NbbGn5hMqOxYbY8
5aGZgJfXmKIjyUzGoxV6R202CnhBVpHBSzrZOO2G+EB65yKvf9Wf+0GnFNe5
GylWmi/ypIfG2HM6tdiA26Myp77AK+jMD3uv04H9TyQ1SbfO8SrvJw8FbX2D
bz5WCHYKm+D54d7s2fBx3FF/SMOG/ZoXMmkwXl05jRuG2X77eY08OdZl9tvv
P+A6mejGXlYjvkHvMizwEOCQB/+xUjsHMWfIiUft/oSr0w8nBdLGcVjrZU4o
ewVXc0coi1YzuOoMzVHt0GdcaJ/jEuDyARfEBs6YuFLA1j7N4p8KAb6Uv3bk
46wYlM7teOJU9glT+kehPoYKui9XDrZGibBehG+Uk6EkJJyXc/2Ns4YnhJku
8k+l4JnaSOLs6hdsO3n6fFqYDJQ9SdE+NUgBh4lUIwZDDiJmxr69oyYOM82c
i88r5GFEYyou2owKW4lBbetTCjCSu8dO00MC5LDQc1igCJ8iusb4fpJwcM5t
SdeZDv7iwcqlP0nB6yZvMTdjAubVktyXIqTh0ZWWk0whAZW9GQ6JzjLgKxk5
yucrgYC3/V2mpSx4hcc+ouVshP2x3Tp0WTnY5mfEt/f8BsSnYipt2+XghZKx
fKS5MqS2pQu5V+WhrvJSrjFVBV6VJQ017aRBrJjhj90jKqDc+dyyZYoGcsMx
NiHVqrCYqbHZJFkBJotZ3Pw4NVDewciuU1UErr66RK2zOhR8Pqc4dk8RUnN8
2z2ZGtCm7aray94Ablx3Pu2dBjh0l6dduL0BlvcVifIbNMHEtOSYmywdxif3
RjUlacGp02NmVZZ0uGNlqtnjqQ0UXWmW6xk6VCREEn5bGLDrbvnO+dt0SHL2
sqMKGSCzOf1391Y67BguKE3q0YE6pwdS5XN0yDLIreixY0LbtmYVOp2AnxtT
suxqmXDY/fq/AlMCftB0LurcxIJdKdT9c4cJ2BPSfpxIZsGEBaeEFkBAvhZn
U7eQBW7X+/52iCdgU3NJhsNxXQg9u/vpnlsEpG5pMuxr0IWWfV7OHsUE+Aok
ejsMEZy2kjY5WkPAybJ9/BPGCKYPNBVfIe3ieblrfguCMyMDyw2kD7ygtimb
ItgcqLXN6DEBeuXidZ5mCF4tN0yI/UXAJIdSJLJGYG2vGn2vlgDvvtUoA3cE
NefeBr6pJ4BTtchMvonA4bhacV8TAUGXHNdsf0XAFFR5SzYTEOlY/YqWjiA3
1HbJjPQVYeSN1AwE8WG3sm6TrjQXrWbmIbg46tHt1UKA6Nn6YHE56avfrU+3
kv/6aCkt7Qi43oMtA88JyCkM9k/sQBBdH05QOwgojOBb23Qh0KcubTchXaOS
utLFR6CJX35MJj3sttG/fwCBT1B5hEUnAexxdeuxcQRh3uqBGV0EmFTHMO5O
IhBY3JJ9RnpXwpDI5x2COkbQ+fek7dl5D6ZnEBT9cXASdxMQHshkLCwgOGZ9
oWaKdJxlvOhPAQKtgRwKvYeABIWxlxFCBBIldkxz0ln3C68tLyNQ4iaOXiV9
56KE35MVBEcWGPEPSZcf8dkbt4ZgQsl/aYh0tW6b9u4vCBJVA6wl+AQ0CPRE
6+sIpLQNfIxJ/w9nb1DG
        "]]}, 
      {Hue[0.14213595499957954`, 0.6, 0.6], Thickness[Tiny], 
       LineBox[CompressedData["
1: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
uKesyFBgo/8DBfp/iA==
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1: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
pyoT/geRURbq
        "]]}, 
      {RGBColor[1, 1, 0], LineBox[CompressedData["
1:eJwVl3k4lN0fxseaoqyvtxCzlLFVUtrzPUUiUpboLRRlSdZeiizJLruQspSi
ULbiLSozIfuuJHu2shtjzIx58JvfX8/1+eM55/re933ucx2CrZuJHS8Oh9Pg
weH+/80IsBXcez1Ky+r92fdr66LUmi68oQX+Bgwqlx5pLxWlrtdWBuPxPvCu
e5DO5yRKzaDGKAjgI8Gxrf1i/PctVOfjXi5Mhccwos6ntbdkM7WL45i0oJAH
Z9uuXj54V5i6oW+EPKtQDlFCV/0jz2+g9lA/e838KQdvI+k/PWIbqPkvU6un
SyqgIt+r179DkGp0y+jKlPYnELAr7601FaSmbKxI+e1AAYtR6bUzlgJUifR6
XtqPKiDfuFDQ6MdHzWp86jGt0ACre9hq1xbXKUupZSpD0Q1Qpe5WhgtYp+g6
NI12shsgjGzANty0TpnhY16o6GoEof3uV+d2rFEOHTc6EhneDIl+9unHbTFK
exHGS55vg2a7pZMXMRblXqPamb1XukDmsoYVLm+RklvyXvF1chfsXNogO6W3
SOlMPcm3s7kLhs6hghuTNMoOh4ufth7+Bo/4s5zIajRKI1/Ibpzkd+jyO+oh
4TFPkT7eJ9FW2w0+yhVu8T2TlMKiyD7n3b3AF9uqVzo9SJmSmIo+Y9MLq5k9
Mu++DlDIt89oKSX1wjlZa3GPrH7Ks2PCWaPsXhBOmD9KtO6lJDZE21/62gfa
izVF+JnvlNujcbTTlgPAwks8TC9ppDwVbgoWPzUMmlXV/6l+zQat476WgdbD
oG0kYhBr9gb6XVU15+8Mw0SOsOTidAls7YyaaM4fhmTpFw+MrcohIdVQP0Ls
F1jN/CNxD6uG4J2tW9b7fkHo1I22KMEOcICOxzO3RsGIEtI9KDIIuOfLFX1R
o/D2tu5DqdZBSOWX62/MHoV6/Qg/4dghqG+wl8/rHoWg6qYrhNBhUDLDntsd
GYPAlxdFcSu/4I8j+c0gzzjEZhWvYLVj4JToX9kePwEbloLL+hcngZfxfIiS
NwFpS07C02gKnljU44qqJuBHYdFB99gpaJST1I5ZmoBm3OXXv8jToPoqt07/
4m/4O3E/z79mMzDzsau9SuEP2O1chYGkOXAdVx4tLZwE+gfJ7bGXaTBs/VPo
S8MkKLJaHI/508C0J2J3y9gkhFFrA3MyaXCo6bfPuMwUuAroROQN04CvJEdM
OnwKWqw+8gTbLEKqH0HrzpVpKMtdeNloTodNy+3Xgu9Oww/zoXPnPeng7xYY
GZc8DcJuz66mJNDB1nbo26umaRAiuErYNdFBTS/jZs/BGdCVVRKVPrYEXyS3
PT4sNgurwgKTohIM2B9TX3lKdRZmhHa+rlZlwEtB7zFj3Vmot+0WPn6KAdHs
7j1OfrNwouP25P07DDAfSqp98mcWmlZ4vlr+ZMBUvtgShzoHl8Pt9dMSl2ET
IYQ8dGgBngx3+RsMMKH+WMKegFMLkED93co/z4Swi5kHt5ssAD973P4hjgW8
8R9OX765ABvlnhjuJbFgZW3G4UfGAhSt44Vu27Nguv9CbhsvDWQ9mch0nAX5
LNtiV1EaWDDaB+8uscBRyv3DZjkaqHR2qPrysWHM4EG9gSYNfDR25wgS2NBf
UfmnzoEGQkG9X40usaE5laxMbabBdAAzrP0rGx6U7t975ScNnjsNH0rrZINe
+4nDa+M0cPkvoe7EEBtqNljqH1unQaiQCJBYbPh0O/7Gh72L0D30auyY0goU
mLHzilMWIUJPonnp/go4uwu+PfdiEb7ICjY9jF4BlWjJirmiRYgl22eIP1qB
l9W7GtUaFmEwf/RW/usVyNSwncrlLELRX7TOC10rECvWpJJ1lQ5HC0NMKuQ4
UH5we5mRKx3CNPukJBU5MGbtBpgvHRjEVyS9PRw4WiBpZvGIDiW7R9ZOn+DA
H31L/82tdGAjnfDsaxyQ8ijc8LGPDk1zPg/Gb3IAUnGJjpN0mJ3Bgvk9OZAy
kf2ymn8JzhbzqQwEc0A7eLbN5+gSWF9rGlvL4oBrPlwi6y/BAePfWpp5HHjS
kTD2zXwJ8J1blA2KObCgcIC95xY3V0v/eUlXciDzUwBxIncJ4p84W6r3cIDF
EPUykWbArOY6M00QA9J22/V1EgOeycydGRHGwEinNLJgLwOG3uvvExbHICfx
YqbQWQYYJof5C8hiYLInq64ymAFk3hPYs10YBJjTjZ0TGKBmbYHj0cAgz/9U
/7anDPCqfSB46gAGuObJBc8KBhjouDX5aGFQ4Kgho0pjQF/ltk1pZzHoiQvJ
7lljwD5qNF3BGAP+9927w0SWoSy79fgDMwwuCfhq/yIvw7+hws9EL2MQptbS
Equ5DMt3FDerWmNQYqpw8Zj2Msi9Ox+qZoOB0PNq50fWy7D/fIPWiD0G+xr+
Yuo4L8PsQmxXyg0MrBcc7i/6LENdq4mMhjMGZVoiKWeTlyHoSojtdg8Mhu2s
8Zzny9AqVF/m8i8GIjHF+bnFyyBu/J91jhcGtn1mFL7mZZi8stG0yQeDTWm/
XDx+LsPW4kJ8iS8Gby+5yg1NLEM/7+6qe/4Y8PWG+1TwMGHFMlq6JxCDN4+l
lJREmcBZG5K0DcLA7J+s7mQ5JmxDTJ/vwRhk91Ts8zjIBEWqtaRPGAaGqadH
BnWYUPPtXVxeOAZLFt/iDU2Y4Py4W7AmAoP0v22g4goTYok96fWRGJz6MTtL
dmFCUGS61/sHGMyl3E1PvsuEDPm+0vgoDFLMNxjwRTCBL00+wCwaAy3pJLZ7
MhMumHxd4o3BYOI7PnfwORMUrvMcS+dybHKBuWExE6Rne27jYzE4cOGIQMVn
JigfUqyP4/KgVN07chMTjOcfmUxxOfybqW1yDxOOGpYcUo/DQD1pWIxvggkf
9RrTbbjcY+pCcaczgb9NNCuAy4GSKy6D3N6pnAx2COeyUleYnOEWFvTSV8X9
uNyeKNlULsuCY/UqVZZc9jZ55kNWZsF+WvRjZS7jJXYpJR/g/v/Dr3yEu39D
R3k3rw4LniwqaUdw+VaCbqi7MQtUGckWMlyWMe7aN2jNAuW1zL8fc+erErs6
YuDMAkIt4wU/l53aZ+LLfVhQ3ULcbsXVRyLeB8jhLOCPDn3xnKtfxTnBuaQk
LqebWXzn6msr+jCd9zkLfk5lXGRw9RduUzBwL2KBxLhuHS+XS2PfsAc+sUAm
W6R6leufpdHhXINGFjjIhtyc4Pr7psVEgMzt0bzzUuh+CDcPMUPvkhZZ0NQU
l7+PmwfM0NmWF8eGrM4grW/3MTjbHEoZkGHDnU+jVsMBGCxHSbgaKLHhr513
FQ25ecs0eCpXrskGHb+fiS+5eZxr/OCTdJ4NQmeftJG9uf4/OKXEa82Gwtj5
PqPbXP/PdHa73WTD3hwGn50nBnEN0/sMwthQ9Pif7Vfcuf7Vy8/xfGJDbp1a
XowD17/w1+luDWz45kipU7fj+nf6kMFANxuGCF+mqm25ftUa536gsaGu421R
hRUGHl9DbN3IK7CwoVZv1gQD+TFdweV9K+CfiRFPncegiXdjvh9agSwPye44
bh/sRDG0yH9WINkrVGHtNAY/K5IDs6NWQPGG4kt0DIMTxS8zf86vQPvnOht3
Ine+VseTV7EVGL/XuLwuj0HarMrEhBAH3ErtPgZz+4qhUrRricABPCF5p6MU
t59y3n/aYsaBnZ3/vX8pgIF4Wn2v9gcOPH8UaywywYHK8gcBjTUc8JatNfrz
iwM3ewyJxh0c2FGCyssHOPD1r44b1lMcqGvYQTz+nQM+8T9Z3nIYnDRIM62v
5sCv0CnpQu45Nz786AbuKQdK3EVMt+qvgjqd5OZpxIHmJ5I+BearcDhAbbpA
jwMTNTJPT15fhYej+kkDJzkgs0152vneKjw62EtVOMiBkC+ngr+UrULz95aq
vQocMJe4986JuAavyXjhzNkVWHlHk/zMWYN2oqWGQghXR9+bU+oWOFT/+VXK
mzQ2qFM3ssKtcCj+oHt7WBIbqPy5AkPXcGhyWtfYMoYNwzFj+Bh3HNqS22vB
DmCD/DMri8lIHLJ11q7GbNjwpOZcTdYnHGqyWdq/j8yGxM37MyWIPAj7pnrr
TSELgp5ixkszPEi1MNtarJQJuK5h9OkuH1rSXjS/+ZYBip723mYqAkh2MUBj
3Y8OY4xH5sKfBZGnIhpb86HBmXEn/0QPIfQ+8BoDtc+B0Vi8qrz8JlR9WFK/
d9M0cEMVWF8gjJTXUi0iO37DbvHu7dpXNqOb7zf7Hnk1BpuAYdNP34LyzCT2
lPGMwOnZS0ziBTEUsypMKZgehJ6q6zyX1MSRPDlmT0h4L5RF1FjjGeJowHxh
oX+uG+wFvIZbWyVQ+g2P+YDwLrh2y7dM5IkkepNk1iX3tR32OKi2GtpIoTVH
kZtR35qhTUJN2OvwX8g4vEM53qkePhYGpanxSaNaL0F0cagGfHlUzjcPSKP9
9/DqeklfYFP/XT3X0r/RzKS41PCrzzD+kpD01G8rGqs7wyrSKYckpW385Re2
IdL+6PwjB8q497R9nQ1eBmnIfumyWCuBS0lWrSK/ZdByqz1ZOrUQWDo57KeV
suiILJ9tx9M8GB0/6V0VLocUDnX+9HmbA8+P75VtsdmOnCXjCOe3PYeCUC9x
h13yaOjCpi9XIzIh/MI1Az6GPFJ3bDvE1/kYNPuz8sJbFND9gjP+IUHJkKqc
VtBigEcH33vrSuMTYYmumxN8Fo98C4+uPpNIhHOVi+mHz+FR6Oa73poCiSBo
eiY6xwSPRjcznvlOJYCXH9vJ/x88In8uX/EtSwCTNgulXQ54RNMj/NY9mwAi
XlIvooPw6PGfC8d+BMfDPWpMqkE5HqlP1/1kS8fC1AA1iV2BR2+DyaF0XCyY
c+jxrz7hUaS7HgubigG1A5ci+ah4NH1zeiNQYqDnteLdj7V4lJ4jkxfgGAMa
jyiXVb/hUVvGBtuRz9Ew4UKTF57Ho+GrC1G0f6PgrOyFnMYdBMQnf2CcvikS
Usd2Uy8rEpBDpoV/AzsCxgqE+mbIBJQflJ6R/ycC/NAnMVFVAlJPcr0YVxsB
b+xIfqZ7CchJ79z4r6AI2FRMM+k/TkANcSf7s1fDoU4nFjdnTkAS5cX73Dhh
cMK17rJ4JAH5xpjMRkmHwkrPpG7NAwJq9rkV2ykYCqXaIhp3ogkoZNSteAcz
BBS3GQsNxHHXzz1sPv0jBERqektzUwioH33R4XkSAj3b5jajbAIatSjJ0MOH
gPtXKaorhYBkb8wObdYMhqdytjuaGQT0ovMXscH/PhzZp7rblklAI1GGfAke
9+Gb/tJBFouAlHeK6drY3QehO2EGOzCuHoG7+2XO3gf3jvxbfrxE5FTnVEiT
uw8ojE5VEyWiVwsNksqVgTAyH2IVo0REaSovR1MFA2FH9asUo8tEJD8m9avI
0h9a1VjZ/ZZEdDi64mCInj94p+i9c7ImoqCc7F32+/2h6cZkW5gNEbn9MO4y
EfGHW2KqGykORHTR44Vw6yc/oFgV+u7xJKKjXm5uOng/uMQqvSoWQ0T7zBp2
LC3chfhdVSqdlUT0KFlG48F7b8g9dHljEJWIHP6O0BfP8QaK9tLvvVVElP/i
/HJOojfM/aOYk/CViLYqD/xhuniDQdgDBeNmIjJpbyAc3+kNgkMmUu0/ieh1
6zlvnZQ74Bs/utqyRERa1CNU/qDbYE/n72hQIaHs5RB54wBPsM7XabVUIyFd
Xy8LjpsnmNuENM3vIqEbcVruRTaeoNvGV/vXXhIy2ViqqHnKExRf8360OUhC
3fZJs2UinjBui8tha5OQPjlnR3jGv3C9k+OtbEVCYRibdLT2FtiWLOIj40jI
ckXTKlbDA5yDTLEzCSRUc21u19adHuBlWvpD5CEJfYkXtHnztwdEMLxi41NI
SPDf6VY65g6Fh9mcRxkkdGpkaG61zh3YX9a7X74moTYvQX/WFXeI7xSJqakj
oQ3bLVpe7HaDJy9cHMMaSCgre95FQ9oNXni2aus1kdCOHJnFrlVX+E86fqWp
lYQUuodunmtxhf5Lko5d30koneKfoujiCuTRbdojoyTknbDDS7/YBdRL78pn
j5MQ7+XdheupLnAktI9t95uEtKocpuruu4AhOaN4coo778NyzVhTF7h1Ey9P
o5HQZDtKW2A6g9+x++y3dBKqfPvbXfOXM4RuHvnmySCh0NzrA1GNzpBa9CKK
xSKhNyq3TrlkOMPzQH6HihXu/MrXFVlhzvDa2O6kH0ZCYuLzjknuzlBKrN2u
tcbVG/Wvn7jkDJV0RTb3wYPGRtYGcDrO8D/nB42b
        "]]}, 
      {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwVV3c41m8Xx/OQvfd8eGSnUknU95yIkFAZKZSRUUQpGiqyV0ZWJFk/SiFp
oezsEUII2aSSlVVe7z/3fZ3rnPucz9nXLWnrdvwcHQ0Nzd3N4//3vb9vwzy+
l8A/1xZS33WecsPLhmemtUpB1CH9lZQhT3k8U3H8hGMZTNb9DP3TxFXO/bCO
7nd3JbBt0aNpmGMrX2N//cR9fxUM21ktmemwlY/6ZhjPPq4CmiuKnq+TWctf
O95+9Mu5GlaEu4b7j7CUn9q1W/3nWg1ISK9Pmlcwlqc1pF76LlEPI75xCZl/
SeULia8UBsProYczOM/2LKlcx7FxpH2lHjrIrV/Xq+nKZ0h/TIs7GuDO0RG7
l/dpy9UOGKqHBDUBc4FL1smIf2Vt+et0sr9aIVrdOZTj32IZNzBZsym3wf68
UNc/qwtlGjKx6kH2bXDNfWQfx9p82b2FJ/M3PrXB06DL5HzyXNnu6M/nbHM/
AXvOzaFn12fK7jQo6e880wExzZ6CnZP9ZTkv3sjkxnXAq1OddruSvpS1J2qS
tjZ1gJ7vDY9rZl1l0o4nSwX3dQKT3ZZ74QOtZQ0kf2Uans9QuKOz/8+fZ2X8
B/q4Wz92Ad2zM8ljEh2A0g6/dP92wcETgYEBTZ/BmeV3Y+WubthyJ1G6z60H
Sr8wBLx+3A2cwbtiGJK/gq2nyp+UGz1w0TeUa6lyBPLyQ/pclHsh6/U4V9/Q
DExzT4fr2/TCEYWk16pDP0DWU5+Qi+2F18wJoZT+n/B4P0vayEov3P6xQ2HI
fhZi6sMdTtX0wV8a/vowYg48RyJ/H7b8CoPM7oYxWYtQqDObvjXyK1zZsV0i
gWUJfj0xNiFVfoWOcq2DUu5L4OTO9eaD7ACoCL6Q7t39B079jfHeMz8AUfkK
1nueL0MqS6Mfl/YQLHvFc+ZYrgFx4Kalj/UQ5PV7MRQ/W4P+i4p7fnkNgU/T
Vb+QtTUQbA8bb3o6BEJ5oYOucesQnWigF8z5DdjS7u7OLP4LOxrWJf/If4N9
uVefrNL8g5a1Z6vntL7Bb6pIuKzOP2A+w/ZMy/MbMLDVRHA2/wO/rS3sG33f
YGE2oPRS8wZImd+ecF38BlV7v5Ac6WmwPFi5vJ99GJgeJG6EUWlw/fu9S8UH
h+HXJ3k2tKbBq4VGnVezh6GM33PAs5kGHeHTg5nLIyDLYeijG0uLNOlLxX1h
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
        "]]}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->True,
     AxesOrigin->{0, 0},
     DisplayFunction:>$DisplayFunction,
     FormatType->TraditionalForm,
     PlotRange->{{0, 10}, {-4.868999537920443, 6.352650418695289}},
     PlotRangeClipping->True,
     PlotRangePadding->{
       Scaled[0.02], 
       Scaled[0.02]}], {-1, -0.6180339887498948}, {
    Left, Bottom}, {2, 1.2360679774997896`}], GraphicsGroupBox[{
     {GrayLevel[0], 
      RectangleBox[{1.05, -0.45}, {1.425418994413408, 0.3499999999999999}]}, 
     {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
      GraphicsGroupBox[{
        RectangleBox[{1, -0.4}, {1.3754189944134079`, 0.3999999999999999}], 
        InsetBox[
         GraphicsBox[{{{InsetBox[
              GraphicsBox[
               {RGBColor[0, 0, 1], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 2\"\>", {1.2100000000000002`, 0.58}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {RGBColor[1, 1, 0], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 1\"\>", {1.2100000000000002`, 1.74}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.37820393249936846`, 0.6, 0.6], Dashing[{0., Small}], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 2.4}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.5\"\>", {1.2100000000000002`, 2.9}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.1421359549995791, 0.6, 0.6], Thickness[Tiny], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 3.56}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.3\"\>", \
{1.2100000000000002`, 4.0600000000000005`}, {-1, 0}, Automatic, {1, 0}]}, {
             InsetBox[
              GraphicsBox[
               {Hue[0.9060679774997897, 0.6, 0.6], Thickness[Large], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 4.72}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.1\"\>", {1.2100000000000002`, 5.22}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 5.88}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.05\"\>", {1.2100000000000002`, 6.38}, \
{-1, 0}, Automatic, {1, 0}]}}, {}},
          AspectRatio->2.1309523809523805`,
          FormatType->TraditionalForm,
          PlotRange->{{-0.1, 3.26}, {-0.1, 7.059999999999999}}], {1, -0.4}, {
         Left, Bottom}, {0.37541899441340787`, 0.7999999999999999}]}]}}]},
  AspectRatio->Automatic,
  Background->None,
  ColorOutput->Automatic,
  ImageSize->{802., Automatic},
  PlotRange->All]], "Output",
 CellChangeTimes->{
  3.546136475915312*^9, 3.546136838876515*^9, 3.546136959388898*^9, 
   3.546137131823912*^9, 3.546138998905318*^9, {3.546142361345799*^9, 
   3.546142387850656*^9}, 3.546225011508158*^9, {3.546225312766672*^9, 
   3.546225337160801*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.546137165687608*^9, 3.546137166387722*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[BoxData[
 RowBox[{"Exponencialni", ":"}]], "Input",
 CellChangeTimes->{{3.543684992882703*^9, 3.543684994655665*^9}, {
  3.544320894879453*^9, 3.544320906231942*^9}, {3.544321013728986*^9, 
  3.544321015677552*^9}, {3.546142396032638*^9, 3.546142397914567*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"\[Alpha]", ",", "\[Sigma]", ",", "\[Mu]", ",", "x"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.54613653746201*^9, 3.546136542655197*^9}, {
  3.546136596080742*^9, 3.546136617338891*^9}, {3.546139101320562*^9, 
  3.546139101453113*^9}, {3.546142407108479*^9, 3.546142425391838*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]", " ", "=", " ", "\[Mu]"}], ";"}]], "Input",
 CellChangeTimes->{{3.546137329720142*^9, 3.546137340576589*^9}, {
   3.546137465328741*^9, 3.546137469403538*^9}, 3.546142430457589*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ss", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Log", "[", "p", "]"}], ",", "\[Theta]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.543684996758039*^9, 3.543685116992625*^9}, {
   3.543685161495624*^9, 3.543685164824434*^9}, {3.543685617602922*^9, 
   3.543685622261405*^9}, {3.544295746546906*^9, 3.544295827428027*^9}, {
   3.544295874222879*^9, 3.544295884036298*^9}, 3.546016486016091*^9, {
   3.54601942039296*^9, 3.546019421197285*^9}, {3.546137342783463*^9, 
   3.54613734607702*^9}, 3.546142433418283*^9}],

Cell[BoxData[
 FractionBox["1", "\[Sigma]"]], "Output",
 CellChangeTimes->{
  3.544295884678365*^9, 3.545309805435313*^9, 3.546016487855942*^9, 
   3.546017670089106*^9, 3.546019421888676*^9, 3.546059377336055*^9, 
   3.546060078214513*^9, {3.546060139149627*^9, 3.546060144271088*^9}, 
   3.546060382291988*^9, 3.546061435830015*^9, 3.546061887191896*^9, 
   3.546071462301595*^9, 3.546136812733527*^9, {3.546137347255125*^9, 
   3.546137353812429*^9}, 3.546137471838963*^9, 3.546138999246577*^9, 
   3.54614243794297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ss", "'"}], " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"ss", ",", "\[Theta]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.543685180126496*^9, 3.543685298634426*^9}, {
   3.543685431540192*^9, 3.543685489527895*^9}, 3.543685534481716*^9, {
   3.543685624867701*^9, 3.543685665571384*^9}, {3.543688058809387*^9, 
   3.543688137132826*^9}, {3.54368832453227*^9, 3.543688330973921*^9}, {
   3.544295753339424*^9, 3.544295760783175*^9}, {3.544295853271568*^9, 
   3.544295889194162*^9}, {3.546016489095013*^9, 3.54601649563242*^9}, {
   3.546019427600456*^9, 3.546019428430676*^9}, {3.54613735651055*^9, 
   3.546137357241563*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.543685658802668*^9, 3.54368566906248*^9}, {
   3.54368807593941*^9, 3.543688142568622*^9}, 3.543688332640362*^9, {
   3.54429586658533*^9, 3.544295890282246*^9}, 3.545309806594238*^9, {
   3.54601648969558*^9, 3.546016496189694*^9}, 3.546017677241552*^9, 
   3.546019429586647*^9, 3.546059378810901*^9, 3.546060079358672*^9, 
   3.546060145605671*^9, 3.546060384883913*^9, 3.546061436928236*^9, 
   3.546061887206539*^9, 3.546071462474284*^9, 3.546136812904919*^9, 
   3.546137359182575*^9, 3.546137472997589*^9, 3.546138999342592*^9, 
   3.546142439861019*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"p", "^", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}]}], "*", "ss"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.546016522942259*^9, 3.546016539967992*^9}, {
   3.546017704408171*^9, 3.546017705125968*^9}, 3.546019441035926*^9, {
   3.546019471091529*^9, 3.546019479505023*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "x"}], "+", "\[Mu]"}], "\[Sigma]"]], "\[Sigma]"], ")"}], 
   
   RowBox[{"1", "+", "\[Alpha]"}]], "\[Sigma]"]], "Output",
 CellChangeTimes->{
  3.546016544655516*^9, {3.546017682666078*^9, 3.546017707524088*^9}, 
   3.546019442560441*^9, 3.546019480115117*^9, 3.546060081264836*^9, 
   3.546060146559043*^9, 3.546060400916709*^9, 3.546061439971061*^9, 
   3.546061887221677*^9, 3.546071464395533*^9, 3.546136814598201*^9, 
   3.546137368746807*^9, 3.546137476097946*^9, 3.546139000616137*^9, 
   3.546142448154368*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"csIntCitatel1", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "+", "\[Mu]"}], ")"}], "\[Rule]", " ", 
     RowBox[{
      RowBox[{"-", "y"}], "*", "\[Sigma]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016644463204*^9, 3.546016698494855*^9}, {
  3.546017718072268*^9, 3.546017718824221*^9}, {3.546019484592136*^9, 
  3.546019489873669*^9}, {3.5460588628943*^9, 3.546058863025369*^9}, {
  3.546058985559764*^9, 3.54605898695691*^9}, {3.546142452736256*^9, 
  3.546142456889432*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", "y"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "y"}]], "\[Sigma]"], ")"}], 
   RowBox[{"2", "+", "\[Alpha]"}]]}]], "Output",
 CellChangeTimes->{
  3.546016699867985*^9, {3.54601771087677*^9, 3.546017720075646*^9}, 
   3.546019451857504*^9, 3.54601949082593*^9, 3.546058865086693*^9, 
   3.546058991110302*^9, 3.546059305292639*^9, {3.546060081368136*^9, 
   3.546060082414614*^9}, 3.546060147815039*^9, 3.546060407046361*^9, 
   3.546061531311124*^9, 3.546061887295093*^9, 3.546071465443946*^9, 
   3.546136815322759*^9, 3.546137371159345*^9, 3.546137481278868*^9, 
   3.546137525230667*^9, 3.546139001167078*^9, 3.546142460815129*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntCitatel3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"csIntCitatel2", "*", "\[Sigma]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.546016758763041*^9, 3.546016792970542*^9}, {
  3.546017733204061*^9, 3.546017740186443*^9}, {3.546017914630278*^9, 
  3.546017915139312*^9}, {3.54601813955664*^9, 3.546018141998787*^9}, {
  3.546019493851544*^9, 3.546019499184226*^9}, {3.546058803868124*^9, 
  3.546058826478995*^9}, {3.546058870461028*^9, 3.546058872003744*^9}, {
  3.546059018757644*^9, 3.546059019951728*^9}, {3.546059209756854*^9, 
  3.546059224271504*^9}, {3.546060118428053*^9, 3.546060118951836*^9}, {
  3.546060429719045*^9, 3.546060435859049*^9}, {3.54606155661684*^9, 
  3.546061556750753*^9}, {3.54606187684573*^9, 3.546061879156262*^9}, {
  3.546142469474264*^9, 3.546142469911*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "\[Sigma]"], ")"}], 
     RowBox[{"1", "+", "\[Alpha]"}]], 
    RowBox[{"1", "+", "\[Alpha]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546016797608153*^9, 3.546017744115164*^9, {3.546017901155742*^9, 
   3.546017918255887*^9}, 3.54601814479272*^9, 3.5460194592406*^9, 
   3.546019501847466*^9, 3.546058816227488*^9, 3.546058858910903*^9, 
   3.546058988908802*^9, 3.546059027020108*^9, {3.546059207468971*^9, 
   3.546059213730049*^9}, 3.546059311153677*^9, 3.54606008545984*^9, {
   3.546060121584368*^9, 3.54606015090936*^9}, 3.546060482353594*^9, 
   3.546061561105924*^9, 3.546061888934606*^9, 3.546071469576597*^9, 
   3.546136819048198*^9, 3.546137375365945*^9, 3.546137488172766*^9, 
   3.546137541938578*^9, 3.546139002866141*^9, 3.54614247160102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"p", "^", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Alpha]"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016812881654*^9, 3.546016818147665*^9}, {
  3.546016886250683*^9, 3.546016904857094*^9}, {3.546018151081055*^9, 
  3.546018151902321*^9}, {3.546019505441384*^9, 3.546019506907304*^9}, {
  3.546059876912032*^9, 3.546059883931349*^9}, {3.546060057180457*^9, 
  3.546060062381365*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "x"}], "+", "\[Mu]"}], "\[Sigma]"]], "\[Sigma]"], ")"}], 
  RowBox[{"1", "+", "\[Alpha]"}]]], "Output",
 CellChangeTimes->{
  3.546059884316431*^9, {3.54606006350173*^9, 3.546060085628376*^9}, 
   3.546060152429164*^9, 3.546060487613641*^9, 3.546061563038276*^9, 
   3.546061889005262*^9, 3.546071469972666*^9, 3.546136819448887*^9, 
   3.546137376078972*^9, 3.546137546141196*^9, 3.546139003286238*^9, 
   3.546142478452687*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"csIntJmenovatel1", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "+", "\[Mu]"}], ")"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", "y"}], "*", "\[Sigma]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016918820028*^9, 3.546016933459735*^9}, {
  3.546018162034847*^9, 3.546018162802109*^9}, {3.546019511970786*^9, 
  3.546019518337126*^9}, {3.546059893179542*^9, 3.546059893847781*^9}, {
  3.546060047266137*^9, 3.546060052681203*^9}, {3.546142481870696*^9, 
  3.546142486170149*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "y"}]], "\[Sigma]"], ")"}], 
  RowBox[{"1", "+", "\[Alpha]"}]]], "Output",
 CellChangeTimes->{
  3.546016923575523*^9, 3.546017064644657*^9, 3.54601816733437*^9, 
   3.546019519156449*^9, 3.546059316503319*^9, 3.546059393343114*^9, 
   3.546059588516448*^9, 3.546059894431348*^9, {3.546060064924788*^9, 
   3.546060086001004*^9}, 3.546060156246333*^9, 3.546060505013231*^9, 
   3.546061566515456*^9, 3.546061889013432*^9, 3.546071470260381*^9, 
   3.546136819734045*^9, 3.546137379438253*^9, 3.546137550678813*^9, 
   3.54613900356502*^9, 3.546142487172045*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csIntJmenovatel3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"csIntJmenovatel2", "*", "\[Sigma]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.546017079018856*^9, 3.546017090969569*^9}, {
  3.546018190056803*^9, 3.546018190821094*^9}, {3.546059043677427*^9, 
  3.54605904460088*^9}, {3.546059403368323*^9, 3.546059411524818*^9}, {
  3.546059479614725*^9, 3.546059492483282*^9}, {3.546059617399394*^9, 
  3.546059617680817*^9}, {3.546059915271946*^9, 3.546059916341114*^9}, {
  3.546060024912348*^9, 3.546060025553251*^9}, {3.546061569414866*^9, 
  3.546061603372963*^9}, {3.54606187218996*^9, 3.546061873288195*^9}, {
  3.546142493851921*^9, 3.546142494335385*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "\[Sigma]"], ")"}], "\[Alpha]"], 
    RowBox[{"1", "+", "\[Alpha]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017129629872*^9, {3.546018185130961*^9, 3.546018193247052*^9}, 
   3.546019531385107*^9, 3.546059048224064*^9, {3.546059319837184*^9, 
   3.546059326263401*^9}, 3.546059398031549*^9, {3.546059485206171*^9, 
   3.546059497029928*^9}, {3.546059600135839*^9, 3.546059619744119*^9}, {
   3.546059902110613*^9, 3.546059918797663*^9}, 3.546060032150784*^9, {
   3.546060066913525*^9, 3.546060090042542*^9}, 3.546060159740637*^9, 
   3.546060290156587*^9, 3.546060519250223*^9, 3.546061573570523*^9, 
   3.54606160547765*^9, 3.546061890499446*^9, 3.546071472984868*^9, 
   3.546136822248697*^9, 3.546137382344213*^9, 3.546137557176488*^9, 
   3.546139006196153*^9, 3.546142498577525*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cs", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"csIntCitatel3", "/", "csIntJmenovatel3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546017159619789*^9, 3.546017171553549*^9}, {
   3.546018198699244*^9, 3.54601820322215*^9}, 3.546061584597621*^9, {
   3.546061615263666*^9, 3.546061627686996*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox["1", "\[Sigma]"], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.546017173049018*^9, 3.546018204442568*^9, 
  3.546019534525334*^9, 3.546059053644503*^9, 3.546060092729884*^9, 
  3.546060126263668*^9, 3.546060162380328*^9, 3.54606029189522*^9, 
  3.546060530244291*^9, 3.546061576542723*^9, 3.546061631929342*^9, 
  3.546061890565066*^9, 3.54607147309259*^9, 3.54608081889764*^9, 
  3.546136822442753*^9, 3.546137385359962*^9, 3.54613756185393*^9, 
  3.546139006299506*^9, 3.546142502596694*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cs", "'"}], " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"cs", ",", "\[Theta]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546017177523059*^9, 3.546017189050696*^9}, {
  3.546018219369372*^9, 3.546018251272656*^9}, {3.546137392518803*^9, 
  3.546137393253288*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017189978016*^9, 3.546017505585954*^9, {3.546018213521305*^9, 
   3.546018252329528*^9}, 3.546019535664949*^9, 3.546059054652897*^9, 
   3.546060095789459*^9, 3.54606013262094*^9, 3.546060172383065*^9, 
   3.546060295503429*^9, 3.54606055374719*^9, 3.546061634658587*^9, 
   3.54606189057455*^9, 3.546071473171214*^9, 3.546136822576293*^9, {
   3.54613738679792*^9, 3.546137394710698*^9}, 3.546137564523781*^9, 
   3.546139006314661*^9, 3.546142506743169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia", " ", "=", 
  RowBox[{"FullSimplify", "[", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ss", "'"}], " ", "-", " ", 
      RowBox[{"cs", "'"}], "-", 
      RowBox[{"\[Alpha]", 
       RowBox[{"(", 
        RowBox[{"ss", "-", "cs"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"cs", "-", "ss"}], ")"}]}]}], ")"}], "*", 
    RowBox[{"p", "^", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016927559429*^9, 3.546016927697169*^9}, {
   3.546017069821145*^9, 3.546017085073989*^9}, 3.546017230368702*^9, {
   3.546017453638702*^9, 3.546017454633499*^9}, {3.546017487540381*^9, 
   3.546017511750122*^9}, 3.546060275246113*^9, {3.546060594894228*^9, 
   3.546060607304117*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017256490459*^9, 3.546017457244757*^9, {3.546017489726901*^9, 
   3.546017516275889*^9}, {3.546018256852577*^9, 3.546018260098833*^9}, 
   3.546019563020585*^9, 3.546060105887493*^9, 3.546060175004406*^9, {
   3.546060258495388*^9, 3.546060300214475*^9}, {3.546060588816648*^9, 
   3.54606060801996*^9}, 3.546061640615294*^9, 3.546061890584713*^9, 
   3.546071477817601*^9, 3.546136827059069*^9, 3.546137402444307*^9, 
   3.546137568514864*^9, 3.546139008308292*^9, 3.54614251370908*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Ia", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "\[Mu]"}], ")"}], "\[Rule]", 
     RowBox[{"y", "*", "\[Sigma]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546016832069324*^9, 3.54601683491256*^9}, {
  3.546016912126374*^9, 3.546016916727737*^9}, {3.546017322178493*^9, 
  3.546017372508301*^9}, {3.546017463020216*^9, 3.54601752428375*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.546018279534565*^9, 3.546019565998986*^9, 
  3.546060183851695*^9, 3.546060303687034*^9, 3.546060617535814*^9, 
  3.546061648930034*^9, 3.54606189059513*^9, 3.546071480580858*^9, 
  3.546136829650342*^9, 3.546137402591788*^9, 3.546137603505328*^9, 
  3.546139009160389*^9, 3.546142533956953*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ia2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Ia1", "*", "\[Sigma]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.546017553376211*^9, 3.546017578186591*^9}, {
  3.546060190028669*^9, 3.546060215541151*^9}, {3.54614254077037*^9, 
  3.546142541216962*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546017581525956*^9, 3.546018298476216*^9, 3.546019591866922*^9, {
   3.546060198866893*^9, 3.546060217651798*^9}, 3.546060305919824*^9, 
   3.546060630129236*^9, 3.546061654525928*^9, 3.546061891049295*^9, 
   3.546071482133935*^9, {3.546080914253364*^9, 3.546080918402068*^9}, 
   3.546136831104139*^9, 3.54613740394295*^9, 3.546137609663346*^9, 
   3.546139010546918*^9, 3.546142542167784*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IF", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Ia2", "^", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]}], " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{"p", "^", "\[Alpha]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"ss", "-", "cs"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546018347393014*^9, 3.546018403066614*^9}, {
   3.546018436099692*^9, 3.546018441274599*^9}, 3.546019614310392*^9, {
   3.546019656617135*^9, 3.546019704529838*^9}, {3.546057935083661*^9, 
   3.546057940051575*^9}, {3.546060690488888*^9, 3.546060692698881*^9}, {
   3.546136907926816*^9, 3.54613692580183*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.546142555495501*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
\\((\[ExponentialE]\\^\\(\\(\\(\\(-x\\)\\) + \
\[Mu]\\)\\/\[Sigma]\\)\\/\[Sigma])\\)\\^\[Alpha]\\\\ ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.546142555615358*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"Indeterminate", ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.546018404404153*^9, 3.546018443169971*^9, 3.546018629101108*^9, {
   3.546019667419693*^9, 3.546019705617033*^9}, 3.546057940717521*^9, 
   3.546060221228167*^9, 3.546060308848118*^9, 3.546060698993428*^9, 
   3.546061658414636*^9, 3.546061891057757*^9, 3.546071483795239*^9, 
   3.546080008567537*^9, 3.54608080405*^9, {3.546080909027874*^9, 
   3.546080920813304*^9}, 3.546136832732765*^9, 3.546136928984752*^9, 
   3.546137408183165*^9, 3.546137611738504*^9, 3.546139011232828*^9, 
   3.546142555641956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IF1", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"IF", "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", "1"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.546017428290329*^9, {3.546018467395976*^9, 3.546018491191415*^9}, {
   3.546018587031472*^9, 3.546018597806486*^9}, {3.546137616080186*^9, 
   3.546137619556514*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}]], ")"}], "\[Alpha]"], 
    " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Alpha]"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", "\[Mu]"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.546018482088292*^9, 3.546018491764403*^9}, {
   3.546018592076636*^9, 3.54601859900646*^9}, 3.546018631243809*^9, 
   3.54601904808341*^9, {3.546019682797311*^9, 3.546019707755424*^9}, 
   3.546057945478465*^9, 3.54606022766859*^9, 3.546060313691759*^9, 
   3.546060708677693*^9, 3.546061660974805*^9, 3.546061891066516*^9, 
   3.546071484501638*^9, 3.546079996627684*^9, 3.546136078734947*^9, 
   3.546136322826237*^9, 3.546136834719354*^9, 3.546136940787303*^9, 
   3.546137429657752*^9, 3.546137622030385*^9, 3.546139011431535*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IFun", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "\[Alpha]"}], "}"}], " ", ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}]], ")"}], "\[Alpha]"], 
      " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.54608073954952*^9, 3.546080787340927*^9}, {
   3.546080827508503*^9, 3.546080832763547*^9}, {3.546080881724667*^9, 
   3.54608089839569*^9}, {3.546136031913543*^9, 3.546136106756538*^9}, {
   3.546136264957334*^9, 3.546136269166274*^9}, {3.546136300237964*^9, 
   3.546136302873075*^9}, 3.546136404353272*^9, {3.546136877306471*^9, 
   3.546136878124014*^9}, {3.546136974390393*^9, 3.546136995325726*^9}, {
   3.546137115334749*^9, 3.546137121892679*^9}, {3.546137628329196*^9, 
   3.546137639501537*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.546078399638204*^9, 3.546078434270568*^9}, {
  3.546078523483738*^9, 3.546078526611331*^9}, {3.546078631725602*^9, 
  3.546078677869414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "0.05"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "0.1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "0.3"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IFun", "[", 
      RowBox[{"0", ",", "2"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegend", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Alpha] = 0.05\>\"", ",", "\"\<\[Alpha] = 0.1\>\"", ",", 
      "\"\<\[Alpha] = 0.3\>\"", ",", "\"\<\[Alpha] = 0.5\>\"", ",", 
      "\"\<\[Alpha] = 1\>\"", ",", "\"\<\[Alpha] = 2\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LegendPosition", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "0.4"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Dashed", ",", " ", "Thick", ",", "Thin", ",", " ", "Dotted", ",", " ", 
      "Yellow", ",", " ", "Blue"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.546071566443362*^9, 3.546071604772914*^9}, {
   3.546071664304524*^9, 3.546071734557583*^9}, {3.546071769565434*^9, 
   3.546071781503191*^9}, {3.546077877666447*^9, 3.546077878779971*^9}, {
   3.546078077257591*^9, 3.546078094273397*^9}, {3.546078128979278*^9, 
   3.546078131508565*^9}, {3.546078195525481*^9, 3.546078246143438*^9}, {
   3.54607831567725*^9, 3.546078368785814*^9}, {3.546078441904356*^9, 
   3.546078501052553*^9}, 3.546078697301196*^9, {3.546078795298968*^9, 
   3.546078819926423*^9}, {3.546078851304196*^9, 3.54607891370029*^9}, {
   3.546079894604615*^9, 3.546079946211399*^9}, {3.546136122778719*^9, 
   3.546136164810206*^9}, 3.546136449027762*^9, {3.546137648051448*^9, 
   3.546137654193264*^9}, 3.546224159873265*^9, {3.546224197393473*^9, 
   3.54622421351701*^9}, {3.54622427844899*^9, 3.546224335524354*^9}, {
   3.546224427236103*^9, 3.546224554274741*^9}, {3.546224608733576*^9, 
   3.546224620245159*^9}, {3.546224679854771*^9, 3.546224757997689*^9}, 
   3.546224920497266*^9, {3.546224977242646*^9, 3.546224978243103*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    GraphicsBox[{{}, {}, 
      {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
C8vLbGB1fI7+Zcyh/gPywc2m
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Thickness[Large], 
       LineBox[CompressedData["
1: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
IYFegR2/y1DtlNL86ioLAi16VC+MlqH/A599vWE=
        "]]}, 
      {Hue[0.14213595499957954`, 0.6, 0.6], Thickness[Tiny], 
       LineBox[CompressedData["
1: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
TtAKbYUimf4P6eVajbIChz3n+eS7ZPz3ik9+by0r5H60uK4aRcbV/zwl3FJY
gTVlIeHAAzJGK9ffTLNkhUx9rXb/BDKuEQg6ng0sMB9dpj+dTsa4O9LOq15r
1Kgt1Zu/vCPj5S9fLNc/XKJmap3kCaxk5r9cwcTRcon6ft/csHo18/v/NF/o
SC1RJ48rpt//QEbbs19k7j9mUA/dDieYfiLjWEHbA8dcOpWrz0ystZuM8acd
KqaHF6nyY39nbn5nxtttsmaUv0jdMR/ctvUHGUNL1s0Tri1SHfje3r33i4y5
XxMklIUWqZWasjwmw2T0T/U/lgML1GtRgyuf58iofV5GOef1HDU6ya/3+gIZ
v09syhEJnqNmZYiXbaGRUfNr/KZ+8zlqV7mBb+QSGQm1fXeLFmepu0azZ4zY
KMh+s9dzg+4sdUrHe/jjegpmktT17UenqU6zHG2NmylIOnbNvG9xknoqS6/Z
WpWCbfmtGY8KJ6mWdsEf/22h4PzaE/U/XpPU/S3sdeLqFLzV/SRWenKCqpjN
VmanScHrHn8TBsfHqb/tWdLp+yi4dHh4Sob9L7WX+et2R595M0y96yjfMEbt
aL2ZQjCgIKcm272kyDFqLXUtQd+QgkmcE5vXyYxR02RW794/QkEtf+dv/lqj
VMcvS77KNhQcM3BPVYsYplqH7blcfoqCx/dOHvSzGqaa47WLJrYUbK+YX9u1
YZiql8twv+RAwSM3ilWn3v2hbgin21edZca/cHjwOP03dVBn0ej4ZQrSG9jb
zQKGqPb5M8SwexT0i+Owc+3qp7oFHl02vE/B2Zs97rtf9lMvHS38xv+Agoap
4eWe/v3U0PlLd6NiKThqL2AvubmfmrubvhT3mIKXVZ2EVAJ/UelVa18zsimY
fzSI7WDYTyrbA9sClxwK6vL6EHbu/Unld6yK3JxHQZ0HAwnfpn9QFbiC9HIL
KGjce4+42+YHVc+Qq6CohII7qfcjdbR7qVFf+CNr6ykY/XDjEp9MDzUx1d3l
diMFn/43f+JpVzc11bt534GPFPTnPXKnI66b+kYiivGxmVk/pfrXglLd1N4T
oi7tnRR8M/h+LovQRd00KL1vYJCCHV4UJXPDr9RthVcV0n5T0HLU35ws8pX6
363v9DPDFJxzyJny7emkGm16/Gp0jILvfvDdKnXrpF5wJSpMT1OwXqVF0D2u
g+qnHUAvmKVg6geOOGuHDuotgYEO73lmfl5en2za2kGNz0uNoNGYellTdSc0
tVOf+XM4lzIoONJXf4g9vp2abXpG12+Zgr9VHF3snNqpheQ6eeoqBZvucKVr
7WynvptVpK+tUbDYV/1PCEc79X8tHpcw
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1: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
8Kg35ZoCrkzVjjcVHyMqSSpr/XMUMOnFu5OUo3/IzY7L7SpFCsiYjq48Kvmb
FLjaSKbXKaC/ZYCdf/gv8uawxuk3bxXw2A47AYu1v8hg2NL+mUYFdNv468ni
8DBZcfPpY5tWBXwmYGf6ZecwuT0sZyf4QwFby9/3r9EYIneO9CaenVPAn+uD
biZyD5B7F4NEvFYp4pLyloYSgx4yYrTn/EVtRaRFfjM6wtlDNKY2Tt5YrYiR
lpb9rxt+kjtu4p++r1NE15ngUZrbT1IAD9OcNiuis+2ZgVPJP0gea0xp+15F
FBEU+xcv8Z30FnfE+bkpYuGUlNXj998Iw7uSM8pDEaN6H2Zi0DeS23alp85X
Eaep8fOGNV9J9kPNWybHFbH06ZbS4z5fSLq/n+aaeEVM3L/NaaGni3Qp22bb
JLHtD1435U3tIjLd6ymHUxVR2lGWNmjeRdLM+SeKMhWxtsWGU+5xJ0lWvfN4
xR1FTHL/76JIYgeJ+zFgJF+jiKo/djgfPdJGmtPe3zN8zb6vrIDySreNCO94
qrirXhF31EmQ+olPJLYinCPlvSLGaXTH9R79RKKv/Vcr3K2I3j/aluudayUR
du7buKfZ9oYLGwuftZBcq+7dHkxF9NOT+v7uVAsp32p3sG5eEb2KXByzTVvI
hPGW+CguJexX1/C0+fCB7FZRbxejKGFxt1925VQz0Z2dcFNWV8IE89IegUdN
xHLc92i4phLaZGwOaNjZRLx/9V4c1FFCO4szf0smGknmt7aCwrVKOEvXjfyz
ppHwvin9rbdZCbWZ589U1TeQr2nnT25yVcL1T+uuLjLqCSthPurWfiWUCeMx
fvvxDRGPOZq53FsJeX8yn0ZdeEO2nvOsbDyohMkUz7aBwTry6IA5j30o+343
ly9Pyl+Ty4aiCZ6pSnhYh++qU2wtydeLuvEmXQkZK4WeWFrUkkrNJY/VspRQ
UdilQJC/lkzTZ9p/5ynh49iwyOHLNWQff5dCcIkSnnYaVGxPrCZrunNuRzQq
YWHFzETEm0pC0fRm3m9WwiHewostyZVk5Izmlo6PSpjqnbf8gXslyWOU9a7o
UkIhO3N/BmclEfdtVXrbr4TRJsfS3C5WkLlQ7m08HFQ0LG+oWVtRRgbzPQ+n
c1JxYbjXsfNAGWlrqr+qyU3FB8ySlkDJMlJCjRu056Hiu7Qdl84cLiU+tfLh
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
        "]]}, 
      {RGBColor[1, 1, 0], LineBox[CompressedData["
1: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
h0ShzPnO1OHeKbUcc3E3PUVRoFRmPlmQM6E2HBz8O/aEKDQz8fJ+qRhToy9Y
0R3BRGG/4Jqt3eao2qlvhlUEdVF4r3rg1WjbiJrV7peD5lqi8DF6mstq9bta
nIh09NsroqC4oDBvcWdA7av6C7LF66JgXLjVvsH4TU0qzHjA+T9RcBbSz/qP
rVvN97ts3v59UXi8wcAr9rZVbVx8xzfQTRTqeH58d7BoVDtt//UmW5AoRDsV
nmcQrVXbHZzVqA8WhWOXEu5kvqpRKz7LeNQlRBT4CvvPLAjVqEnxXaX9ESYK
SV0bATwHq9UY64eKs2NEYV3thIlVR6XaIN8iE2SIkuabpEXyz49qEb6sO6tv
RGH59D7l0ImPaheXjk6+yRKFma7lpYboErWqepdPDO9JfPkUHsjeKVbLuE9u
OVAoCja7YqvlEkVqDg2c1fZfROFWX+KJx/U5arIKJ96L1ohCDBMLj+3Ke7WJ
hBsxfbWi8KjR1tNA4r3adYdkW5VGUfgjbmRrn/hWTU1Aho+6XRTU16+cVWnJ
VKN9oOr4akgURPMt0zLp09ReC5pKtG2IQqMXc31BeIyayrFD8qZbomCo87JG
aD1arU9z/cT2tigQV99FVtyMVqN18b8o8VcU+p8XcPGdiFJz6H7n6EYhBm0P
9b3uC0Sogf9atRyLGGzSuZfk0IeqjS/53gqVEYO5UtpykwxvNYm6rJhLN8VA
sajhiY6nvVr44VrZnioxyCzymkgJVFezWDvQ3SwrDoo9ULxYy61mWrhKCAoT
hx0J4cTJzD+qtt56f7VeikNvxgJl1Jc51Ud6xQOMkeJw7IQjXjU6qxq48ehF
eIw4uHx35w0/PqOad2qHGPtKHLRNZXkWFKZUd2r2+zPfi0N93wUVTOWXangP
Y2j9V3HYJu959/dvj2pCup2Vf7M43DH/R33TuEc13anj7IVWceD4dMhqt7pb
9SN3+G5rhzjI2h7wvBzfpTpixGHV+00czly332+hbFeVnuA7Oz5B2l8iFvZe
qlFVofiJcMaUOFiVXZfBrBtUVfyGd8x/iwOPVWcAeXG9qrb0q4LZOXGYjlHI
1L9Rp+poQxBeWREHi3N7a3NT1apuas92itbEIaInl9igX63qxzTe57QhDo9Z
7oXXR31RjctPf769Tdp/soXK2/uzaprXActPu+JA/UHy+X3/StX3V83PuP0V
B8kbC7UFERWqxWKNQvieOFwXqCDuZ35SrVqT2tnfFwf5MWjgqytX/R8VL3qH

        "]]}, 
      {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
Nz7QOfMCwx3prv9ob+cCc4rHI3t1JXzP3uavW52771NqnbW7p4i3Kwh+PvCF
C1zzmp1j2xVwuUsf3gUNcMFMXkzJ8mV5nL6bJ1Vumgssn9t6Ckwcxyt/usTa
z3GBj76C8c+zx3F3+ur70b9263n1aeV05TG8V9HRe3aZC7hzZ+qXM2Xx3Mxy
43QCNzTM/Rm2S5HBzSqZz7bScgPjqUCHFBEZnLXHSmOdgRv0an83m5kdwb0Y
GI4ZsHODYlzJd/rEw7iGuymRnp8b6P/pCxw1P4Svh75gOCbEDbpkXTevRwfx
/Kydf9Yi3HDmiYEZ3/ABnPTl6XyFBDdcN4ha/HNDAh9XXm+5fJwbzM8klDKM
iePJxjr1KfLcIBzYr3BNWxzXuZJZ0ajEDWrHuLKkS8Xw0idaeSKq3ODs578g
kCiKhzA9uvvlLDfw4vG6lWHCuILYvD+1PjcUGO6032EXxn+qqHodMeKGtvom
O58je3Ejjxm7++bcMBxMXWfqLIiLf1UEzIkblqX5xwbF9+B9vyPlXV254V/5
Wb8EOz48gnlUOukyNxAnP7N15fLiy1i44OI1bmCJOJmhrELBG3L6N3Nuc8PB
yR8xzTkk3Lta+k9nMDe85PhsFMdMwqX6gmb+3dvNt5SNucGLG49nkewzi+SG
7HvfbwwZc+H2nn5lrCncsK5xT6jsFBGXkx0uO/iYG8qUmuJzMzhw5j9QrpnJ
DWmaQZGZ5ez4y6v0r2//xw1C12myeNdZ8W2PmDfLJdyQSqv14HADE/5ZZvkN
Zzk36GfUNXvTMeFPfptUSFdwQ+5lQ5+DOoy4todApXMNN/xceOUoNkOPJ155
+nawlRtWw//qPLhAi7scYa7aaOcG63Y2I9aPNLjKwqUqchc3nL8hkTAoS4OP
ucu+0+vjhvCVrxO/ealxGfd31Q3j3KCZGMJUx02F00gL14xMcQMz700eAfkd
rHc+qObfLDdw3ji7lHD2H+Z/WatWYZEb7tBUf3SI2saaL3XX5f/lhq4bZwod
zTewNCm5+mYqEnisp0ZOpq5jHj+T6ydpSGCVpKz7Y3QNI1+yei/MTIJDwwOj
ObdXMTu3mYZ4MglkRkptHdaWsBOSOh+K+UjQcOCmVYbNEsY4V/ihXYAE8yj+
+fH2P1iRq9dHRjESiJEalpfKFrFtl51G/yMkULEYVSG6LGCfD9o1PZIlgayz
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
au5T8tVL+zd2dsQgm/87S3PkSfn/ARqai1o=
        "]]}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->True,
     AxesOrigin->{0, 0},
     DisplayFunction:>$DisplayFunction,
     FormatType->TraditionalForm,
     PlotRange->{{0, 10}, {0., 2.9184461040398038`}},
     PlotRangeClipping->True,
     PlotRangePadding->{
       Scaled[0.02], 
       Scaled[0.02]}], {-1, -0.6180339887498948}, {
    Left, Bottom}, {2, 1.2360679774997896`}], GraphicsGroupBox[{
     {GrayLevel[0], 
      RectangleBox[{1.05, -0.45}, {1.425418994413408, 0.3499999999999999}]}, 
     {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
      GraphicsGroupBox[{
        RectangleBox[{1, -0.4}, {1.3754189944134079`, 0.3999999999999999}], 
        InsetBox[
         GraphicsBox[{{{InsetBox[
              GraphicsBox[
               {RGBColor[0, 0, 1], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 2\"\>", {1.2100000000000002`, 0.58}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {RGBColor[1, 1, 0], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 1\"\>", {1.2100000000000002`, 1.74}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.37820393249936846`, 0.6, 0.6], Dashing[{0., Small}], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 2.4}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.5\"\>", {1.2100000000000002`, 2.9}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.1421359549995791, 0.6, 0.6], Thickness[Tiny], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 3.56}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.3\"\>", \
{1.2100000000000002`, 4.0600000000000005`}, {-1, 0}, Automatic, {1, 0}]}, {
             InsetBox[
              GraphicsBox[
               {Hue[0.9060679774997897, 0.6, 0.6], Thickness[Large], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 4.72}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.1\"\>", {1.2100000000000002`, 5.22}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 5.88}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"\[Alpha] = 0.05\"\>", {1.2100000000000002`, 6.38}, \
{-1, 0}, Automatic, {1, 0}]}}, {}},
          AspectRatio->2.1309523809523805`,
          FormatType->TraditionalForm,
          PlotRange->{{-0.1, 3.26}, {-0.1, 7.059999999999999}}], {1, -0.4}, {
         Left, Bottom}, {0.37541899441340787`, 0.7999999999999999}]}]}}]},
  AspectRatio->Automatic,
  Background->None,
  ColorOutput->Automatic,
  ImageSize->{795., Automatic},
  PlotRange->All]], "Output",
 CellChangeTimes->{{3.546224734390818*^9, 3.546224760903115*^9}, 
   3.54622492439247*^9, 3.546224980945025*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXV8lFcT9703EQptqXt7lxp1d0FqVGhLqVMoDoXS4lCkaHGH4u7uLsXd
3SVAgGBZCCRAEpLz7vecOWevhaR3YPs+z/vH+/mQkOvKZvfMXHPmjPxm5vPS
tSqW/610rUplS+f+qEbpahUrla2Zu2DVGoFbEf/x+SLu8/n+0z23j5+Vz2e/
qcA/z7f/8o3f/f93/79yt4f+L3vge2K39ZUf3XL7M28tzJ8/f+DrndWvvFoq
1/IE5auuXxMVoS6dLrl6UL1jBe66s0m+xpOjjqUoXzX9u+hIlXqy4ZxmJWpV
bdenbu9WlX6t9Ne6bGfTlPnT6Fsvxc8f0uynUhWb9RzQqGfTUg1KNF8UEX9J
/ap/fUM2lXbuwx1zBm2s9/yto+7/vuNb45ed8qUqFfjEUw3nNytRu1rb7p3b
VC2Zr8WieN8lpYaatfc0b377pZOz+tYv1zvn9qR07tycenpbzoNJaTX0ryOi
VfK+VR1fezlP810XhZToV86tqbzouXxDIg5fUjnU+S0b6zz/6iPt9iZXc9xI
rrOnzQv98pRd4zun1A3q3OpdpfK8+HDHfcm+3/Rrrg98Pzd0dfE8pV8fEMta
ufti4vrfVj3zWveomBT1UMr+zptffbZ6zo1JyicL7mVWdE/K0Sm961Voc/vC
k6myouz/UekJDdc0K9OoRtNWDVo1r32o0AP3tS1Yu9M9k48m+6q6ZV2su7vV
8/3zlFnrS1QqSqUcWNvz5dxvf740wRdc+qXv4kZ/ND3PpxOzHU9Td106Nn73
x499fPfYuEv/sPTkWnvbvTDksZ80uTeqsyv3Fn3kxYc7BciVpffW/0Xenxw7
elH5fD8+021Loi9dKfOpUbmTY4ZVrNNze/bzF4O8Dq7oQvPtDZ5YfcerHXJs
O5/+QMqhITEf5n4rd/eYFPs8Ag/a33JRvXydPqzWfG7VDwq802CJ35emVOYL
Pt9pc7UnOj9RdZMvSamcKmnjzsqPP/lMrS3n7YIfNbz2GT2kH4/PSERk4Hva
N8fG5l19/6u9og6mWCIC31OKHJ7Q+Lk+m7as6nAFEZdKHB78xvjHvhpRZkT/
9gNqlS5XuMmkA76Lyu6P6DwXdzXf9PJztQNPPP2FxA011jz7Sqvsuy/+AxHJ
tfe0fWHwYyVCud4xyPWMiAgKQ3re04sr1i7SdpfvglJvnF3x/ZaHnmmafedF
u6LIwK481mhm0wZbKjyjqZGFPpS8v/PyfG92iN6brAIvOVF00Yh5kcdT7WZ9
KXFd+VVPvqZZE5DirtteeapSzg1JHjrOjlz5w2OlX7tC8HtEHTB/crngZ0SH
aI5bLvmX9mtTtsxvDbr2HNiy1NeFak07ztvK7g1s7mm7Sz72vHf3BvbKhe/2
jW5Uo1aHfg36Ni/d7bPKY6OOptj1Bzb8oY4jqxf79fe/+rfrWqvodzVGx/qS
lVfZfLltYtcBdUsX++i3WSdQKPwmIIPxDRY2L129Vsfe7TvULJO31WK/R9lk
REJQm57/v/KiR8yLHjp7NJ7X3ZBy/qLnRRfMi+42N+yZXIlv/UL+vtSWmRu4
G9un1B+++zL44Izu3RvG6yL199tv8fvVa6tWqe9HjVJ12rRRf/36q5r8xRdq
xRtvqJjcudWF665T53PkUIfvu09teu45FTiU1JTPP1cjf/hB9a5QQbWpU0e1
/v13VbdVK1WzfXuVrULv3oE3/2nIEE3pt2PGqCITJqhsH8ydG1jBu/Pnq5fX
rtVfvgjz/fmNG9XD+/bpL9+N+nvEncePK1amVxytf7r7br//4nN+/6GP/P5V
Jfz+KbX9/r6t/f7WPf3+eqP9/p/n+f1fr/f739vr979yyu9/NNXvv+Oi33/3
ab//oUN+/3Nb/P68a/z+Dxf6/V/O8vt/mOT3lxrj91cY5PdX42Oydfb7m0Q0
8fs7+yJr+f39qvn9g/iq6PePiijl90/yRRT3+6d96fcv5MuXTX+PKOz3L3rX
79/Aly9af494ye/f/6LfH6OXf5v+KeJhf2Adfv9pvnzZ9Xf9QNy9SHPvmxW7
1pdYsH25vspm7vXstmDwsLZzej1yKt5v763/ZdQfe0sOrZnn+KmT9p76sHvx
i5/2KvVwvN+9bmv5EXU3/zyivl6L3JvWaGqH6YGv4Ouy8RG+aG7YBbUetGxs
64FLx3BP/q7e2DXT6o9ZM837/r/M2Lig8vSNC7z3ii/asar4wh0rvZ/JvcJr
9mzyvu7zdXs3f7F2b4b3gvRny7/z0N6IDH66jIGX/zYnP8L2F+LiDhfZsHv9
D+t2rPxs7+71n+zfs/GLwP/fbt25qtimbUuzFd6ze50vB7eKb9q65MfN25cV
jNm3mZdy76dNWxfzQZ8HfvZl444v5/dbdqzgdd/t2r6iyO5dq+3fltqweSE/
847Fdm5dko0X+SK49d7BmO35Dx3c5cv22c49ASF5MS4ulpXx5cuWb19gxVFP
nDhx3NLzQmzcUc1AQxKXV/WT4Q6XHlb+n3+XbKHvoqm6eor+nXcxf6KFMj09
3TfSq4Ejo9NSLmkFObLcT28c33ogHOWa+etu5tZ/0tPVY7t3q+JDh6oONWqo
OR9+qOLuvlslXn+92vDCC2rMt99qxVq5Wzf15cSJ6s3ly9Uje/eqHOfPq1wZ
vPU9+vsd2QI2Fbc/VWr6L0p176JUlUlKFV6n1Esnlbo9JWCuxip1/4qApcL9
7kr90lSpRr8q9ddPSg35WKmZrym1Ko9Su+5Q6kRUwBjz5cwiybebkz0iLT3t
P+kq3d6vNHHb7BZ9Vo+8LvlSin39+jLj6/g/HVQ654XUi9nMW82rOrXZpHqz
2+qXyb1qYzZP58+jU9JS7b0Xdp+KefLA6cPZ0gLPL0cWOX+n/p4zV3Jy4iMJ
pw+/cfzo1tePH93G/7zslRPHdrx88tjOV0/E6f+zPX/qxB7fdfyaW/z/5rEj
W/nVwwlnjtx+4fwZ3iqjB/FvH9JZfd2IKwwWNeKPotMn1e7vq5nBy+82DEEE
f+neXZ/3/ltuUYceeECLHnbAxzNnqtwxMQpRfVa/PNc9Sh0tpNS0ukq1Gq7U
jxuVej7gAV2/V6lHZin10V8B8666Uh2/Vmrcy0qtvVupuP8ELOQ7M1jB0+be
e+uObPl1/NaZ1wckwT7iDWXG1bnwfr9id8WfP2Pv/dl3zag/Bq8bf2NSynl7
76GjZ4/flnDhrJa21zL4DCO5ubJfupTCY3/p5LFdL5w6vpv/eeRWBPifa373
4snju3nGN6SknC+WwVtmxMwQ3kfq3wxuWzy1T4Fat184k1gjg7+4Q3/P/tK6
daplvXpqV548Kvb++1X/MmXUj8OHq/tjY5XvOf2a69mCbyq1vJZS7cYr9dVh
pe5jK89WqmCHgIFeUqlBLyi1IXvALfX9N4PPymPu1Ru6YeLMWjNa5o47e8Iy
sHe7xX26d1zS747TFxLsvTv958/ovcVVAWGj9/0CX9ddSk3Oc8Z/iE1hGcjP
2eBsYIsG+Pi0/9T+Wy5eOOv7+ZqZmN6uT1nV/ovKdTYOn9dK346+48QJVb1j
R7X9ySfV7sceUy3q11cvrl+vnte/vu5JpbbXUaoNspigVK4NSr3QKeAef6fU
6AeVOvCheRc0lP3cjn8tHxzz7YjK72yK2yEc+GbBvhWfrji4/obzKRd8H+l7
Odjuz8Wf2AuBViXwP1RD7q0XAxzUb9jZS0cUdKR07FJDNSxXeu/IH5pnS09L
9zU3v8uza5fqU768ir/1VjW0eHH1zpIl9qlfFxHwdAsotYAdtV+ph/Yp9XA3
pSp/qdTEm5U6bZYV0azfmtHxhQaV+WrR/lVeBfnfY+dO6quC5t7dSYnxSDZL
9WXjJ18Ey380sCsi0uEGr+t5xdJTmzT589iIn6uo3nmrfxqzfIevmfndo3v2
qCE//aRO3n67atykibr95Em79GiElaXGKXX3aqVeRVk8rdRWWcr38/YuW1tu
fN0qY7fMsEvOc+jM0ftOJMbrK/OQskempV168nT8ATjOgu2mvScp8ZRZ7oAr
lhv/889jRm2c/Kfqnb/a2qFlu/qamN/lSkhQ7WvW1Mv9488/1Q3nzimf0WnR
tyt1kr21Q6kn9ij1aH2lWjys1L4PgjqmyYC1YypO2jbHLvfp/f5Db205tksf
S7LcgDmR9tgZf6xdLkt9Nv7kPraKWW6IBxvNcmOLFFndLO5ku0tdv/05vVe+
Gg+cO366kZH/r8eN0w5Xz4oVNXPNYqOeVWrzYKVKnFHqpoFKlYLXvvfNCtCM
L+06ud9K9qs7Tuxt2XvViJd3ntwnchCdMzXlAqtDfDnN+BlNlyLb68Lpc/mO
btxbfseUFe1WdJ8yeVbdfiV2zVwz8oqlH3rzzdgNKw99vKtpu1oIx7DJzUb/
YZYOs5GNHU88od5atswu/S2llqGzjih1LyIB333CZHTSmY8HlhrYckEP2XHR
OVJTL1pGstQnTscf5Cy5aH4Nrz49uGJ77Y0j5vdf2HrUiokVO/sHfVo/itUE
/KUl7cc61TLcu/zsLD/u0UfPrYo/n29M14kdVe981S70eL9uZNqlNF99QwP+
8N5HHlG9fv5Z5UxKUs8YGjCNZij1CTuynFJ9tXn0nqGh0PKD64Y1m9c1p+cg
u/lccqJbhXldNIKCYFh745n4k/u5Z4IJ0UQP3jq2JeaXbROW9l7cbsyySZW6
nBn4cb1oTVd0/KBCDSB1wMJWI3/fMGzet/vmb8xz5tCJkVeQeCFnzjTO5ei0
SykHhpery99/vX/hJl89s7Zyffuq43feqQpPmqR8Qt9TSm2boFSRA0o96OiT
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
fR0mN+hfL7vBqphGCkF2c9DDAw7+iLRL6YIYAz7CU9WldbIRAM8BldZXgkfH
kgeyqa8WZawsOOE46aZnQNX7jmuZt/m7Gvbse/hhA3nxsIfonAtvyOsAShZc
HbvJ+7oMvCBd44IZDh0fxa7aIezB6qeg2CuNZN4OKvXfF5Vab/WEbvxh31Kk
kSyUbozjYZlXT6CbsI+wk2ZkQKkJR2TaUfBquAU8UnfF8HChqlKd/7JtBHNm
uk+jwHizXOADr23fflxnnAWAQu6GdnVe9oDucOAjUw8fccvZi4n4orpwxGMn
cQR52BPFeW43K1gZrGjfrAzoypK9KMRTgkFMw0t8AaUWLFYqr5d40t84rV7i
ycpa4F/1GaPXLqhaZaol/uB//xtMhQnxgJw+UmqWl3gystRJe2WjYGzMahea
XGg+i4ga5dgQT1JLI+Vmh0m8Q7x4iMeCpauLhg2J1gYvb3E99nXuQPUwpN+i
1qNYYNelnSfEfP/tiFd27jhh00uka2GKlyEwgypj/VmlzT0gSy5ItsBIOeVC
JAKsq0hUgntzwqS/fosWCrfJe4+IDikz7z0LRNAVlBGZ7wZbJkIUqda4ketB
JVj6adoIYNtLPzuhlFID9ZW0agKVfrmywHV2ESTDk6g7z/vPWa+BYBrFHL6/
w2QIIS4KBL33piv1aRGljDciAgFs3uXV5FyhHMfVs4gbRQCdBVbbOGbxsS8L
D3n4yJEEG0em5Fy3xeBKmm2R0SZKqU0G2SHjG8xpTzsbfSX5S2BFLmayIMh8
C34h/UGmyDcvTIaAmKFrnPceSfwm1u293twLOTVEGvDqWQwhz8cPHTxDFamN
f9mTVQNqRRpAuGu4vUcaQPusKzv+dw08EuIxLwE+e4n/fu+8DYDPrHrQVVvz
wySenk9U1nvv/aDUyIlKfWk2ZgYiK9JAAEnn8oIMieQss4kpjlGbiZk5M+j+
iCBg1OGm4K7YY9SbyHUBtYDmcP60oTca05oCThtaGLSgxQgqpxaEyY67jh3T
yXXvvSeU2kGQxcsOGqs9fvD0ES87QmJqsjn+WDd4jg194KLljos7a6NGxBga
NmsWwpMQy6ukuff+4YNrnZtmhD0qV3LiBTD2Np5ALEPO0KwQr18j5BH4Arej
W0PIPcx6Ymk8IksyLc5KzNxlPyQzBRltT0wezSc7Vu45/uUXQ3JcvJgqzhON
b+nBqK/uEc4plQqHibZ729m5Q/PF4A50CQfhBHDr7aOLt7YWAy1kxPS/BjEQ
3YdH7ULswhM6PeZXaqH3da7ez8MTjGRdJucRA1shyf+T6tebXX7qlB1W8SNy
ZJs0lk3EgHI8F7J9SrZBukrfUmJsTR18FIYAv3zE4tKFIew6EKV8HnVUlH/4
loTJEAogXXxdGNJTqYpVbZu2GzLVkdHWDUcoPl2/fP/uYkVHoSeFhmLDhily
ld5tQIcGzEivmqQ+8HLVQMzZbTmhn8wW5bnQT12ILrVaGib9pMPcQSb0k18Y
qFQpr14ApK2bLWa2SUQgbKwd/aCxqkuXxNiHSljCBdxlhxDg5dDU0MmfgnoR
+Je++juoF8mpWPeCTj7EGZeFST/d9QDSeumnOERj+j301x22YWKXLssGeul/
4NzZ4w5EGxkUUtYICPH9Deti8Sss/Q7456Gf87ijko7osiHoe+dwF5KSxd1y
ZvVc81kggBAEW2NDbxRJV14rQ7IRGxbWkPsB1apbfAkbntsbf3BI8/ndvOzK
KATizULTrEg4QNUEXSy9HODtSWpzGlkOkLJHJejD+YWg+mFbeDlAAM+i5FAN
NKOQtP61iwTigFh47wFkBg3kVQkZib/Ft4EI5I6OXsqepumCg5MI8WB7nbcm
xHP8ukyv/O2d55P8uveDh3jKxmkYyedRqvzk6QPHfKvCJB5d4FLkcm+EUkWd
0hLiCcI4BS1BZOTRYuMBk7P/qeeRuBa9hdCJXvpp41DcNj6UclXE3G1/oZVS
Fgt2WzWxQifybwIZunZa0fvof+896rDcfhShx4MiP5Cp0MvDB2zIAgH8NBk4
YG3v9u0WW/sPQaB9w71HjjjiH1TqADU/2mGQ5k+05XSlqiL55Aq0l8mVcRu1
zUzdI583cXb9AbqN1powGQLQm1Sh914IbsfDEFxKnXAWhug6PKugRCAoBEQx
EWN49fCOwxaPIc4RIQYXAheeUOlOS2p99YTlnUqnJx85KcsTHCgHhhaekHuy
dnOXZV0mEPkSoPS18wRUKlaktmLkHjgUDHx9JVgUDgiLD7YHBPkOV+Zj/jZq
8IIWw20YgOSRjt0LQ2gc5jSPQfloExK3XndkECGhsRAtAHQpvmgIKhUpxdFX
JraiG2rZ0AOWA71FpATiGhgiD5+OkHfHxYUwiQW6StMbZXd5LSbZITbGQOLi
pZjdxwe1arHAEk8pC73OvcR/rtSUpUqZkOWP5h4eg0vICqGYQjQH0AXiAU+S
Wg4pa8my1yDkkSfWMyc85E1V6jOXgxXyeK4OcSyvWyDxT4qFLVlsfFimW6Xd
E3y/UjZ0IkIe4ofKMwXV7O6ZyFsUYWhanfA5NG6hmZxvY5jPdObHHysCwl5i
8OYdXliEvOTMXQtf2358j1fIvc055G9dSJ64M0Ioli7VLYS3vY+Y9k1AETTS
RHjx9ua4ncsqTfrDywusYd00xcMLTjzAgXwU/YP0fJVNYfKCDtsUaXl5Qbdy
OmtfvuFdXV9kpjIf7cUkEFX5ft68vR+tXhUrexnMMR/p5Qn1biSOvfIBqt5F
kvSJmo2QrmwApMCWYNI1gw5Ltjz0mjnx5x9/6H5LXk6AHKFnrJcTtDNwcEHh
REiiRlQfLZ9sjAe/APvAqjQwaiUGDzafdZe5B+DlgFIPUtRmX+ftbmrPVmph
XURXRANv2ZaJUCBDlyApcL52huC8kBjwMgTxp8HIbUqd8t1k7mVgHIQYR2/F
bYnZ8+MPI9/ZvClOHi/1VXQk9NJPyTuodn0lPRRc7IyvmWYhtG+wWDyASESX
pVj92mml6YjzXuUefSc+UMrYZLkyEHl50NYQomq84uRJ24gM2H5zuAC6tt8j
72wtBz6X19Gw0HXjEgsSte/Qu0I8Frf1ijn0dbnstjCJp5PC6ldfDblHl3i6
BXsln67U9ET1Sn5IskU6SVhDiIhWnvhDJ+OKFB5678mTSdJLjYLwQSVLhjx8
sL5+pW6hDtvyhMYY+74f+ZvO2QtPMMJxRD080cWF1hACQL8jTHYw48G5bXIP
hwC0nJcdBDlp3KF7y8v+0HMyQuUj0tpAlGLccP58ipBHCUapgQND2AAYj3iM
VzQ4KikC8uoASsWcDjA5xyhEwVZ7ICKVtk1cZtu8XDMvAI6mREUZz07ugZak
Oby+EiAiIFXXk0VEA6PV2cjCC2/aBTNGaITdeswVV3cG9SFd/nU0UZqQUD/h
lmjS07p7Lf02bFwAX8H27rl6uuXZ4ry4ikB5tkRT0X1aRkX34b25VlSGP1HW
LqKdLnj099etPWw/K0S25KGjYyij11eyR/A1bPMBrz5weBUhHtAtDhGfR/s5
jYrYHSbxtDJgBJlXEOh7AwLV+9CRTNe1QR66HqgQugGivfbRw3FHEk4X+mTg
zefOJUuPH8xgGn57eQKe6melenl50rXzsgFgFr0bAdXjHHPhCaVaNjePF/36
8W0HbKAo54ULqYDFNTj6ljD5RLbJtXwQPjHooYpSXbx8ouGhRlQ7PmUjkGb+
4gqLaXDLFgvqDx2yXrhDIvK3rl1Dtob1yHT9nGwhwmiuvb5Y4zgPJGm93CEZ
Sd2shd4R1hXuRBLOBcIzsmmTv68PcCpcBpGfdFB8YVBppQYMUqqkl0H0eiYv
4d1tGQkSveUtQOXpmP1+DhZyEtIuZcszz+jhJ15WEeHoq1Q5ffVdUIu4CIOB
EEWRhbP5B9pu0F3MhpceP3Qw2BA56zzRrxFOkLomhe3lBIYe3VC9nAgx+IQT
+F4uPyec8BZAkD2dWvf3mdge0vcBFNqZm24ybrxwAoppfauBR7KlciUmu3o3
u6U4wpwtK9wBwmBllPoHHZAyAPiI7Ckpl7Dy9dUdYUoMEIdulSuH8ImYAOA0
7TPdLHwK6F131orepRuADUgRiPvvsWPnbCMM3D0QaV7RKKDUAgY26avHrH4w
XYN0kwyLCbpw/jT9xbwM0d2VR3z7p41+6qYYhiGRJAfXVCg/YWyjhnOp+M2I
J1kHB0dnNoX4qatgq2127r1HYkq3AfWIH9ocs+t/bMRIlIiF06BAbMusevWC
LpRwGavJVRwJl0kKDm6xoJtXV9nySC+XKeizHi9DDnS/FuFyoRXLD1Lm8tv4
cVuwTjIfqfUvo4f5HjIxN0s4WGE64C3ae3jvcWTo7veeB0FChL6AOjEi68PU
dk1a5PDosaSDxhRjAHEHTDHceND8Cbn69+bNU969ietGHJZCC5801aInqFMx
ZmqHht1aDBfgEHLVds+T54n95qthGkN29z/Kd+aY4lvDZyfIQedeyb2QA0Zg
xU37rxkDPsMr17YnnFetUjiE14IdSSON5b9UnESLHSmZIrcOFETjOUXgKPNl
Jom+Mo1tdD7X4VeFnVi+FvJOk3sdwpbkzU2Jia7Gw1pAIeRK8IkquW+VGsOX
L5f+rnPM7nX/JtT4X5B2oDMXs2cPucepR08VfSWHKZ6Cq2wUbY43Da9Ig3K8
LK38y2RbukYzKuewynPYFtCIriBe1oQqc+AD0TO4Ti7XLM+GVnM21w48UveQ
WRYU9S+XLI7RVxkNH5RnQygfq1VXAuTS3yOcGHqeje+f8Ma3hMFz0Rwc+7cF
NriHl/oEdZ6L8NzbF9ZqE2/A+o6k04lEbd7esjlOiohAiDJgyKtN8Anc4xT1
TjCTNkxetocEdw2aPurtuM376SOuqzhn1e2nG44K23+ePHk7kJPPli87aPHM
IeR+4FgVMvb7aljFoKSnt24NEU/Sk/ktPES0B/D0fBuPbvdqjxBMpYgsRRYW
DVBp0sRtU+rVnWULsMgy6tbTHt4hHk7xC++IsThHWgLJBNic4ye8o8zQRvzY
KjoKZuARkdclJ18a2Krlgo1lSo97LDb2zAMZsMDguKMynDp+NTwM6Y4iPKTr
i+vwKDzE/xnTSIrNbGIpYFi52JGIIJFMC/G/NSnhPJlFDjQRAUBduic8V7eL
9gwcMnhD9NqxTQeBYLr8kLAMsIIF3tGtSCfMRNya9e+3ZvifTefh9WQ4NDKz
limZWWeerjPpmXWmybDnh/CV1DkdGbx8ZWqj654mfMXl+3rh/pXe7Z6BbEbY
iUjAalxdpPf0FJnE6XaBLnnuQJVcllZkEnXt0tbCYNoTgm/lc+gdqBksFoN2
uO2assRgYx7kulwXctfTj0Zl2rMmc962rV1b1WvZMoS3uZWKoRhAX5mP1o6X
Q+xJ5Y1FigJBINcjchkSwxBWgjTTXb24Em8eI+RY4SHldbGhqEbY6NxRk3XT
BXI24c28ER3nFfRTqZkzduHf6KuHss7KK46VCMeAzFvV/AMbiUow38F7D3AT
sVx9JSdNSE1XBkEPRktRqNymV8+VAhzjlHEdb2Sbg5jhCenCYJFM4qIOqyCS
ycw6578KO+mRbLc+A540O835FBmVmprWrXPHpTuLFxud59ChMw//KxzNvJON
5qjuuSJbk57MLvcgfKRPg8vBylYn3vx3tWnNNMBY/jYk9yK8ZfAShJI3vf/k
8XPgEOhCJ+lYeibbXvGWt+Cy9GgTrqQhJngD5/YKHzl1LB9J6Xv5eJc//vzi
3ypP5tTLFTBoH/l3JDPT1jb/IJlMq3T2odwjy0h3TX0llSJzq0/707WAkEMJ
YKo7OYSj2IO2zx7dywe0brWw4eBB68TzYTIGboGekCEcJVjM0JPHlNptNz9t
/ezMELv5XXiOL1MBG0X/KctlHDzv5p9dq8Z0eyZmeC7/A4tDDCVJ1GXWA+cf
uEtpvYthyz3mpM9R6kMvdxnM4sLD/yCvNNeAVOLmTx44cNoijcURCslOCXc/
UWoG6TmvaqWZtQsqiC7Ax3NluMJdwFWJwl0m2GjuihnAx7rlZYm7RsdlbEcJ
izPrlvMPLAaGg+Okn7Lco9rndODD9VEh9bg4Ti5FKOwkSGIbUhD6BnaDEyPs
DImwCTvp71heqT5edk6rM7O1HblgsXpk3lxxi7ATI95+HEVFmp0C3Ea1Esom
6m4z+1cfGhT1R84YkLWXT0zCcl2Npb4jZPSB8BieORSNnPg2V0ZnVAtVIS/v
UDnCY8xKzEvdPcIUU+jAuksFCyPoCmm9GcIxuk2jYUQkYZmFVX6bQpgW3Rgu
L9gPLtItvAC3yCRA7xZkpMzkurPaereg40PwXqQXukbfelFsdiiKlx3E8oYq
VVxffRlUYs6CMdEIjdGw7KCsQxuDwg52+d6iP4xs3bvXKnIOT4bJDiYaMKTR
y46MyiKJpm37aUwNrZWEHZgKDmtqRCPaFsfxPxnbDt27rWArynYJadgk90Au
OLCAGGX4cfg8IEasRuJEdbheYdUrJ3YcsqwC0eBhldZI+3/4bkTxObN32/e4
Zj5hrYHL9fKJELCDXQgxzrD3qBXEwrbAuy/xRALOJTFY+ZPPp0zR7ZC9osL0
eWexiVlFK0uai2ofV9QKbW1dyxnhCZOHbEiGbqCaJ0vtDveEy54KkydkZRi1
5uUJbaIw23S7qNuDqtYhsoycRNnMK6qEhpTLKleaZF/fon79YCxcGMKwS1c2
Jgwh4+MmbgoxrgkNX1LNR99+iwlmFptmyKKgni3691yTDXkuTIaASXAtFeTe
OqVecrkC0bNMxr33pAwjiM5ccEhP2aDSrRcSknb8VGz0u+vXHxGe0Iup4OzZ
5k/E8SJexbgebTxJ/28sB3eUC09ow2VRRmPnNhykO68bnkSSef+7erVpGEw4
n+GyhSCH6xsl94Bq1FCqg5ctjO9sPGDtWC9bQow8kR2LEmBmIpub6IOln1ou
aol0uy7hEzO2nMkjCgbsvGvRILLD+eyCKsInpgza2DOzGnWgTfj0yJHDCTwS
RjZEBHTx82Hy6alt2/ScGO+9kkoNGqnUD14+gfnXjVg9fCLI5dJNwifb54kJ
RbkuJl7UgQThE8G7nY8/HrLHGNni0FXCJ2wZ5iHrKzlsOMKdNSp8AmFp+eQC
krLHcG/IN5NltSUu18wkujQk5MoVcg+sYYxSufWVhBAyOqsxsCgIY5FgfIRu
+mi5emDhDyYjqCptungOJfiOM2JlhvSPO79NWyfdQ83m3qZYXkj9Gbl3t6wX
sswL/Ro5ihOvv940ZvRwgODBfUoZMIdWo9kYHWGUcrQdIkcRCBv9rS1bjj1x
8OBpyQh7J2xZ+mmY72wV6TnPQeOKD4VWUj02m0sbKVA1Us2vEc0v7dplxk2/
cq3PXahmggawYC/VE5QqQgsh7+bgUAA1oqFvYq+6FhQe3QofbCH1N/sWbKw5
atQmKtmFJyHobuEJ0x8ZZKWvjLCFzpSR/YFd5JBNwie6XjBz1eJuNcxU+ISh
QsZ7Ts3q023p9DXzKSSqLHxi4q1r6yN1OVPqzmpDAxmvEqGw3dVKiEFH23Rb
SHnj+aRkXExkR1CdlHYzwicyNdXxCZSbM16ET3i0IP50aaDwiX3jkhvCJwq1
No8t2ZaPJPBKrzzhU+Td8fFJqypWmEgxANCJcFk1uESJIMZGWMVRTY8ZL6s4
K5ydISKVQaBYN3Cwe4H2xPhvw5o3myesYgzYonz5QkSqnVK1nFkjrOJYajho
3TivSCHBLp5qfhMFa2xsGpbBOitSHE37in4/ssGQwettb4Zr5hPYBFemLXyy
dp5GlkgekZyYW6SIj42oIT43J567ePKLzwazOCmOYGyMm9MsQU9MGOr8HlFq
rx2HQFjJJfCFfraQ7aRJQBRPzB45uM1kn/VVuPSjG3tWrBhyDwiI67wqxOhz
wf6tB/XtzkrhCeeBVT0UoHAm4MvJ2zDJ0TVrEZ5Q3+LK/2RoAmh2l4kXnhBu
s3PgwQwyRd7KBO6YW96bYfKEkdZuNJXcI3nl2uXJ3qHSid7K2mmRvQM/HLrV
3Iuk8wuL3jiudDuOadkzRC50QYyHF3RfdWbKg+YegyF+H7ZhknfPhCDgzRkR
BevtGAzCknqkpvCn7vBhG+ZVr2oS22+FyR8Gv6x/8cWQexxVbn6HPGwSvi/s
ln4ioobZQ+7BemTG9p7+MmaxrtgAXCenHjyiZN/LJ9AqmDAa6ih84nRkcucr
O07ss3yiOfD1NkcqfMJFwi2w+cRn4vcflS4ckQCziIytL1dmPNj0t8NkFZEp
Cp+89+iIwdr1KBthVUhnDBGlEK9JWIVlZ4P49546mWgbBtqnENhabDEvq0gl
68FzKqiGXVNLvgQpSu0ck769rNIdwAWnTihCD2IWVt2YlJQyqxZzsmvN4Od3
wmQV3g2Yct0HWh496A3dh4sr0cR4266eUNhCcxBrlQIr7tGxw5KWfXqvsps3
oIXdEC9hC7XtzuD5JCiczp4yWifSQqmIvL91bEuMbCj64BD/0bM78l4r6UIm
Degczl3WzHwUNytApAQDI6/F4YmUUBd7uZTY9t8Aeh+KO5rAwQSyWs43Dmq6
weorsQkZVBUTcDO0XSOJWPQa/hFdt+2GCinDNVISSRsCPo7MJH3k9RtnC5Mn
9DTLu3hxCE+KKjUCu9jLE1pfUg7iVcIY8oCtLhcRgM0slMH1/du01skaC1oP
2HjYerqdj4gIOt8ZMMITACwMC9GVihKvxXdwM5iEJ0zosaUH+Kpm00Tk27jx
aN+2bcxJXiDLLNKvEcZQIlp0xIgQxuAeUT+on4wcL616rRrhkN/CmBDHUTxp
W5CGsGC9UJZnI154Ca5nsEgKrQroiq1NGFG94GJdD1LRJ8A43EMQrtAFgZoc
ClEoyBCuAOSiudR769YdsQ25r1lwGItSq127kHsU6+lZS1xJxgPcpKsRkJMa
D8/2N2LgnGwY77Rfy4bCSk1apJTpeivjUzj4XVBHSEYdQS5k/xwwGIXkamPH
bAYq+cz+/fG+98Ikmc5kbvip3AN86AC2d2euK6ygMgIZdY+xRjDFUwjKFHMv
6XSPAk6prx6w+jDhmJM22RccYK5dh2kKHol+sGV6VGgJO17cvfvk9hLFRz94
LO6c7dh/zexgqIhrdyz3Sik1kFSIvpIdQiVNo4Hrxnp3CPhMl+cVFnnzvMxO
AhZQdezYLcIieh65rIsUANGcl6ychtYJi7BP1pSfUFdj4IRFVIi6EXbCIrJz
NhPJoGox+/EKHaXhSgxQyeVvvhlyjy401LB7WUQIIL7QoDL6CBClEBKGFhbZ
bttI0as7t5849O3Xw5EiSbSBjCW0oz1pkaLflWrtSjCERdT0d+q6fJBW5qJH
aCXoIg6GRVEMBrNR7142WSud4og4OPeoYJh8ok2U63koZj880srPwyfXLewy
UbpMwWhRsuhpul8SFik7bdoO4RM48JWvvx4iSuh0+iFrFKsompDIsZkqoCNz
9oAb9XfjwToTIDwh6r3k18qTKSLyfZQBuVkpPDBufXgD1XJfBe+pUjmfI4fC
MLS8B4PmVM89mWu1GptGLYQRTFXmzAWyShhbULnVOnVSf/36awif8yq12NXd
PGD3nMfrFXkkOuIiAcJ7IoUWtwRSWEdFDe8j7zt5InFLqRJj2/cw2cLM2f8v
VySEN7ctS09Kngo9ne47fDjk6VVUqucgC3QWFpNgdY2+ZJeg/R69bJcQ/SCw
b3dJux7dVzA0Sp4eJbIOBClvTVs9N7ZE0Hfvrz28hZYp3qdHDgRPx/v0qNKx
cTmCLjp+KTvn/hMnEmmESgjVugmZ7JzMSxqC/fyvbvjb1TwDykdc5z15BmRa
XW9DYRRdpRZUmdrESJy5l4GnGUH7DttoyAZ86FNDIser+YDZctLpsUSybYY1
m9f1kxUyIs7WlCUnB9W4MJ6STAp4bJRPB0Sl5yW7lXygvsqI8SIM4HsoEtS1
0NnCuGfMwn+nSCIrgL//Mbruap49LZCZ8eC9x8i+3MxR9zwrnJbZNaY311gY
efYcr67zt5jBFKHQVoXngvMirKZ9PT6SLh8UccLEdFMO5PE7oDpfAmAPaWcn
jx+XzAb00J46yCv7LiSgVyjzxw9woMLk7XN1DDtbGPfuCu7RTOswbg6+5lpH
613NY8Wkx7T33humVDGHyRJYbAh6TobT2rbebC+6TWFosKVIn1D+JUYYBeaA
9PSVgemFdtkz8/x0zGyyjPoh0KLrYOVR/TR71m5gH7o77mcZkGNqMq5qrt4j
V8Gm6h07qi5VqoTcK6nUIOBrXjaRRnYaSNiEpNvUrnbTq1aZStodHDhRI5Fy
ut65rM99VkGlp437Y04Hsj/2dCHJ5EDGwjps0yHzmw+34UZdWS2swwsklUE5
hs1EZsS6a5ysdzXCxlAGVwsq9x5Q6hDZVx1WEInB1Udves8PN8clyNns9CGz
fW6Yi7mr+I+jJn75ZboOXQhbAWI1sX2Yha3lpu6YBwBXKxE5O0LaehnlEWn7
YDKsEI9JONp0QP814BY4t+3g9KwGWITq11euDCJLJcpEhbTuwMOVrJ5mDPhG
GsflmbzljHPhBDJm3UfC28hY/B13pD62e7fTzKScqL7UGvv+oLZ2gVpbiOzN
iwgn7BR13Grca+EEcCiSvnr2X+EscyJj6cC6O3bXXSE8IULpesGIdFBa54ZY
C09CGtaIhWdTIrTH/Hbu7KMXc+RIxTgWdjBVfLZSBT17ILRUzOytSMLhNp5E
olv/8prbEwit+BsMJNQtk4VWoj1uQfJ8QvxgqfUi806fAGj7q0fDnXoAqMjL
fKXe/V6pUV6dVGbazvmv7pBgdp6g/nVN1YTQb/fN32gb/EC0tInH1wUtqZG0
X10r3UIjUWgGDnl5AUSEWQK6O6PkdXVjG/u3Yi3i5zr4hFgR+oEE1nu2yJML
O9SueUmeLWEGYpXRgVPUsoEeR8e/GFKefjGWDSHVssIGb/QIfLhhg05FsKtG
NGs6j6hDuJzggGSkU8g9pfK6k1KknajIqUKDyxL8ssnjDLA50RwB2s595tbt
w9tX2Qwo8NsF8/cJkymxoLGSVzDY/C53JpsfBjtApHAE1WeLAuj8JByhsAM4
QfdOHZdwLn8dJkeoO3OdyeRefaVauC6hsumqj948zc3plf0PrvVyD4/OqCpX
9Nmz7Qu0KbR++X4OQVIpEs+2SD+yEjbWhWp1W07OVlJ39vgGIqvjQHPdNk5f
W77ceGr4bEH7NdMPbNPBBOTeK0qtcQ2PxPTFFHPpEXn6FEYk35zzPItkUOzc
GtWnEfMRWmmr59LfEtKgE4IrLZX9ENKexNQu67iDzXvRMN4Td9AZKkfGN2HS
TztgRkV672EMMbYpj1K7LP08JHc+GfqzU8i0uOC7F4AJUwf4zZoFu8AuA0+1
u4aW4Awm0FcSreZ8PVJk6M8frondZJlAPtfNFhEm4DbY4Au7TLvvIgTAahwt
34fJBEZJuG4hos2IYLpDUBQkmRfXIFI2AQBvXGCzZMOY5g0aqMZNmiibYaX6
lGyqdnvl7yhjwJXT2tI21A/oBjf0SOuGbCRuZU/gRBOGDXGqhR00ZiDRopF6
P4TJDmCW1Ep72UHbAc45LzvoWDu/ytSm+kqed0jEQQpiZn30ke6/iW9BKhF5
ofRc/gRV47JxBYIa0SFDRRy8XiXlmOwRSz+GKPTrHFfRMOlnwltSzpwh9BPv
pymNLjp2sN30dH2weegn6vW49bqF/pO33+6ai1nrlk7yIgkcwRjjusWsbBEC
F64xi5wSoKHftR1ThCde9w19qaEhwhNK6eEJYVLbXvbqeSL0M1BNT7z33AMW
gkGnrySNio5wQVTjjud8aP/+YKw98EX7Tlv/8EHsmt11RgzfiM6QIAxhYOaC
6ivJ6RFgXFVhYv1KE7fN9kYeXIhY+ME5YZvD8RGImR29gwehxx5xlXV+6NcI
xaRM3QxMuUegxFVQCziXOMzlpyXLdegeCVR8PW5c0DeTGZzW6mer49yXmzZ1
h41PAfIrqNRsL2twV4vO3bNU+1XCmg8OH1jjPH3DmkgyTrwvmtol8zNqcHE1
YkGbA44B7z3kmAIqPXNdGELhAHXQz+4LbA2zVaKJ2DpcSuDL9swS3xdtb9Me
DRcMWmBPFokqvKHUit1KPaZPzvzmHibaZYeIc6IwsoEHyOYoM33azte3bzN7
96cwuUB9nRvWJU4Bw7Mc1k64AEjSddE2XIjCqbS9UFxthFEcURbGCgR6du0a
07Qo2Fh5QOTcGA9B0MDdvJdpDaxt+ut7ecJAKrwrvvgM4QmtlQiJAxbwlQiT
JyEgSeEJPVOY1qmvHrQ71uBpcRIpstK9TAz9OXG6bJO29n93m0HJti6RDPzW
Tktl1o2QT7kXsD2dhxXy8V+cPhbyEQPrcyEeQj6wUz5B9xErGSb59P5wqWoh
n05sVDDqK0H8k1p3MF3RFIDgC65dc4SJu7YKAMgl6yV6m/tU3BlRIJybfZQq
75UCjiVXJSJLxN9y3V+EDSgB62G0XdljirDhl4kTthH1owDCVypMNlDMSwG6
lw088RilcoO4tmzAvZhVc3oLrcTkKG3Yq0fsuG+/NUpMTM7lkypq6GzTNf21
w4b1hD+hMSCC1gIM7swQOReoHLJHDlZZ0J/IBsqudJhkUiHoRguID4njh8Dr
KykSY/BQr3aL+zBX0ZIJrKXnH/WPesiMpmbZ1lA9e2Tf8RaHDnVlIp08YeaE
v7FVrCNZFgGky60DrAFvfYvOHM+2UpKWjnutr8peK/3ySLGWNMDKc+9tpZY6
L0rgiWC/vpw54zzWvoUp2UHz46c0GJK8f3/uL1NTp1qxwFU6+uXQn7UfLp/P
uebcRY+7ZIeFLJzyWzftKQihBMdJj3f+q8syX7kwCd3+5JPqmS1brpBnSv+1
TyuHMo0WXem/9I0GIwFWgmwLFahscxteetq/Pw6VlDqzzjeJx+MeqDFm9CbL
BA542gTpq0dCmaBPP2EC/oDNdjr/wDBBN72gyye4TmJKWeJD1lveZI4LyKjo
Xfg2/dNPg235ZdOAzKM5hVef4XWNbPJ3Z60bpHHbCxs2KIpr7HtyimJ2Cjv7
L2w9Sh1Z/8CWtSNKU8SlBd1jtbulyKMmxo1t5mUnMmTVDV4oPRAtO4lFTWxQ
f/bk+nVn8XP5rLAzaw1uMk3c/wMnsT/otO/l5MtKrT2g1IOaJOEkVvSAVgt7
6DShcBIM2LBixRwnef17Rw6uE05+luSfl37ueK70vu9Vm9Gm9gRdm2HbuAXM
jc0lx9bSgu7hpLM+hZMEL+wud/h1GRD6wp7dpyiN0WV+FbLOxitaiEi8MiTN
/g8sA0jo5osKPYBxXM9jiXuADnSmXbagqnVoYjHV6NM09+CyCrocYEzp9nec
OXPevm/fNot6kZ33bmDiKZ8c2r9Cd2H0OC8Eu6zzAhjKpz/5sTAYI05oZuno
f+ARoHM6JHh5RFsV8gP6SpxVTrOXd8rIT+HRupdeCnadEZOVJshuDKl5XTQl
vzi/d6WcP2WtfcpvZAAle5phwzoJJZFRoqEWuM1BKXoetUYXOX1VKXyGZZbo
DfbzkXABWFrX41PYxJhayNLRHcOm7PjzJz4fXE77QIE7tI9x08LNbryBc8GV
DAW+sO2aKqWRLqQKoJtJGK/s3xl3z6lTSRJoZlSx6xmfkUEgrGO8vc0o0b1L
1Bk5edpVsBE5Lq+Sexn0mQlN+mbPXMYw993kTtHQDGRyzZAM86I+XXFwvUUY
kcfb8MILDuhMoIjkLC4BiJXblTpp54NT3qn3ZK/S3aj/EAANoce4wkMraCtK
GEYUz6X4hGG/bJuw1HqP8F8YRk8PYHf92rZeBMN+yQrDstA6JrN8b0abVPQ8
ZcXXJyaGSF8xpYa5CIq4+HTvcoFeeSB4BN0vXfpVl1nKaFz6PjDNOq1Pvhpn
in/cU2ewc9otlnrRtVUVRYa17QLDwjVG9Vn/Emi0cI2kFlNRgNnixlXOCtcy
MsY85a6un6OQTjCN2LWuKxbSY57/cHu/as33eEkHx3suLe3GR1NT99nWpwx1
52Ef7luk+Yg/m/wtLyV24bx20cT4Uy4+KVTjVnoR0OJPfbpixUHrtPrCJZm+
Yc5mku3SVanfGitlgF+SZdr3aJ6UDd916qkbfkvaDs8b1Y0+RTnIA6e1uNW8
Z6p83On5vXtO2XjT69uO7yFsg8NhSUdFXZ6s8nawgouikh3ZfFUJk3T8JNcY
X0jH7Tuk1AM61CRBdKK3DpIsp1GIzScnDxJAZt5WoGP0XO/YEmm17ZkBn9S/
L+FEgnCEGINLAchq8WZcC4ZRViftPmwdTsbHaodzlui8hIQLaA+9taqGyRam
qjmQjMSZFiqV3/UJlkP63fnzg8BwYcvoRnM7/dVp6QDtjso9xtO5GI3cw9Nw
OQ5zL7tVrLTU4s6d/vNn2vRcOeyZ/fGHbFIH4wazWsfkPGhm65My3lP7pMIY
XPFNZUqNbdG3z2pftTAZwzZxxZ7CGLL0C5Qq4GVM7bZtg11uhTjQGe26rxiq
RwAG7nCcIyt3KnVctMX1WIAuMx74CirO/DW+2zRvW+teq4YzwkIXj3sSvaT7
tHXsgRhT9WqbEehUnzCELNe2kj+NaTRo4Dpf9Qxo/Xfh3clFjk6oNfbrb2r8
0qZ7p94NK3xftMaIGN9FlUXQsDCehgeuI4gwHjuIjaqnjArjQ0biCUp2RlLK
F0cnbX9Hd+8wW+46u704eTp3WTZoWbPe2tE/3/GDhp+sWnFQhI3SQTd4XnhL
BtEOanUZRFFOdu6Gvsqct/8XsNsXixya0Pvu2XH67x5N3tP24HP//fTm+aev
7jFgXoKy10pY4k906XVzyiVUQdMvxlYZjpmlApk/EHAeP9p4dN2Pc/csMdvi
BnDXKm/v74BxcQfoVuFN+1cAG3t199F99hg5VO/r7nys7YN46VIKakD3wZJC
D4ITXoTwbRcSEq1PGNI79p+lPjxodpR7MOn5Ty8svfmxZ2vl3JyUNXSd2Bs0
RnS13iLshKQJTQOIcSNcTpzQEzr00xCRIc9OpyWdQzPRwOzYsTYlYI+g1O4F
6pSbM3WrbSGFD+XQKMJPtIZNjhIJ08lR0SLUO7t8ea0MaDG9Kf9PI6R5x+Qi
RyZ0rdqlc72hRYu3vmv+sRTTtiaLzAfO4+pdPa1NeytlQgkSQft45kylAVtB
EY8op1Rfhm/q+Iixb7PbXARJA3u+nWnycStdC2zyFRpWTdZRj8b2FJ7bLCzl
DTrAIcynSoQiFZ27qZ0BLeIcA4XEjta2dC79PcIVkAVpCR/HHBT6C3/s+POl
li/V2+Y7nxl+WS9VuB3SecS2xlPqBCXvAEott+mC5kIr4rkAN6M9BtAa8Zuj
yP2V2LV2fkrf93URpZ716YGboPc1rFfaRGBC0VkwJDziEXGAqKSSfXUy4PL/
gCpnc4xLf+vMspolKgw+6EtRl348Ovz1BQ8UmP6fU+lZVL63BHkACsQrhW2V
qu2GvQn/yJ8yi9DLK8Cz/ZQyMflclnaVPnhBjz6q92c/kxjWzSaNrR9JbARe
0aCSn01Tmsi/lnYaD6uoOKRXpcekIMtVY/SoTb7fM+fU/0Am33bp1N+Dm5ao
UKlZjy7jfv+6+Mtt157NMgxemMThP6Jo0RAm0cIK3Ul3LMskMitgrbzbhZY3
1Ouha+WjtCdzZNg3jVTvwuU7LxoyQm9tc8pFglPFYuML4TIdwFxSHOeFZsdi
G9AAqvKECSbClxGTsmSICpmEwVztnxwHdZVq5UauijMDiS6JZGcsK3WRXglg
yeR10fZYSPurQK1C+7atgySq1G8NigonBLcZmaS5YFyByAbrB8/1xn/0Z11z
RyKhj3HJrj3mncF1E06lca+lD5yAG74u9NFKyPHBHJ85rOZd36dsd+7gcEIM
8o1m1gSZOE4UJgX3OQ750i1BTODIVepbDLFsAADkQEH0Vf1rpV1oIvqiu/Z5
aH9fqb9J8+puksKjkElJ4lUVUGoBIqxnqxpRj8SJSO1boJbqlbd6wX2r99gC
neSL5yBTR52z6TZOObjGlyDGx3HBXQI6/Iw6yH024JGawUqRZXZOW2kDMiV3
zVztYQVnU+2RIzb6GoTJirUvvxysUxPbkiaAqD19JYcTIAcOZPv3+N8A4XQ3
VcNCF4k52fOzpjSokpbjdBawJfdE5i4jo9aokZt8f4RJBgrppyFDQsggoMjp
lU+pRRK4zI4h5wVF4eHQr1H3EhKlg0KKGW56a5Gxlna4n3sCRZTzCBlEYSFD
a+aGYZLRtFGj4AEkDhebESdMV/SZgyU7tQp2aDUbizIkNqTeZObvdHQHr5ZJ
SfSuXWhugx+wMwuarek3c05Qd7rVhPs0ig0bpvAT9ZUEeMA8LFQqv46tG1si
+sfhw9Xo777TrwNPSKcrunzJEQk6l2XuGvljK1pBGFROJG1fbNiq0/KuE+VB
aHPPLqRxmBTQm55GAh4KIi2jSRoRujJR/Cg7BaG1Ur9vUuo5rRhMDFM3sDg0
+GstSh2Wd5tssMC6ba4NMzGCQ4eZZga3BcEDPTuiSZhkkLQmy6/9F+EqD4Bh
73RuQdkZnRy5+rXX0mcvWdKMLsMc58akA9B+ML1Xvhppgc1L2saER3Xm28aD
RsxrOlTHg4QCrLrdxYqOqjds6AZf02ulQLwyujU5K8JDATqKnkFYHMYJi3w+
OXl72g03JI1PSip+vVKJxvSPHDS9xRiWuW/E983Z2jKdHJ1tPV+8AD2aRygg
R4O1RUMaX7MsU6BfI+sOmelmpEGf8UwdJSbVRKnGekeLYf+gUgcICSesWvXB
gZdfPvmQkBpwEE93+0QXK9H6SCaJM3LP1jDNnVa9pzf6RI1B44ED1uqrrC8+
Y/b3K1tW0W5FXxmRuIGlYumeUeomgOJYA1hGLH+5Um9STdJSqXoNOnc+R47b
+L+Rn+5csTu1T4FaHAMfxq7ZNeNKUjS8lq6eszPY0uGS8nvr1kFom5GNnOCD
6XdH8wvKPn5V6i+OC62kAq+wneZNSCTSzkCgOxoN/GUAYp4zh07YNjVMl9KD
yUSUCI5qaBpXLcIkAVvMBUelxpFjwAWChNXsRhumwfeSAWqPnYk9YUV+zvTq
PXVczbNOgrj6NG4Z5jrB2riOvxLos+3YPSMxIhtOGLTiUq/8tWyfsMnBddoy
CsxK7zqJwoNza9uzx0pfqzDXSbCNAQ4McrDrDGmRbv42il4vp2oV6sSCaBei
54hKC3RvB17mGXsXS9kPres6dvtrua/1tS5W/CnqwdyDlsh0SPtycy/y+/nz
9p1rV1A/ZfrqSdfkRxIOn7LrdGArURkM1GliVUa462Te8mdTp4asc9577wVn
MD8m2jAgCGurlx11oe/7dVgUA4Zs0ODhhCOnbAtCxgjrMYz6rz8Mc3U013cz
iyz6xdvI22yrKDogNV/QV/tdtLbRHT/HBFdnY//M3ORUsY+cMk+0L/llX7sw
F0uWyHUDldeFdNM2MD3dbHr6zNp9WBD/Sxyd8bd2nTQCpr+DrDOSdTI3s2eH
9kt4EuEuFd+Ap+xdatl+/YLNrk3DusiH/Ufi/QM/1a2CqDoVEE3us3Hxtk8p
PT/0GFNZKjAwevYDBGCp7cNcKoUNtEjxLpW+WhRVeZYaxWOc06X6SBtpwObx
mbKJKIpi9o38Xmc0gJvd5FkvGE1GLNHSjvV2yPJ69WvsaKJLlzTORAM0ZZU8
dzfy3awymgd59Ksvh46Z3mgoq9k6pkQb9vZQs1COVysD1H574IUR+TduOKq7
BHCV9VVe9iIJAWEtv7p6tfccisDLch0qTPg/igDNjHq1p7FOa//6zDgUnX61
jWbovO8R2NCsdOcwF0vLGiYoeBeL4nfhZrPYaAwQytcrLpy0wbocwPAHmfXi
idj53rR69R78pEMAGr6/bu1hX5cw19ugeXPVrlatkPUSrMVf1FcmFxBNbQQd
s1mjTrb1/6AOTDUNmvSANdvKjJ5U2mwUqWW9E/5oMHtU08Z/o7zCXfIXkyer
aYUKhSwZo5iqPX1lRhhE2rof0h8Ip+m1G4U5cMWUQlkqsNhxDf+YwxdL7Rrm
Uhmeo1H7XEkDfqrN8ZyY0S5LjaZ0P/eJuDO0ZmRdjDBH9ZruH1HgZ3C2dd3D
im6TveCB6mNGb55Uv95snST7K8z1sp3ASmgAkayXcKVzWGW9BIjGNG40F+UK
/IyFMciit2Ej6pcAAbeBmOlIQDZW2O1aFyixNLoR40HrKwGRA910Pb7k2WNX
4SlSYUm7j2z4BgEzN2ZRsINYd/PSOhuHz7OxMLrbCV95/A8cP27M6x5hLnvI
Tz8pzizvsmnf6ybCvqC/Z2egDi3E0A7w08brdWpD1ttyVe9pNoxZdse0lZ71
Dm3+53y+fD3DXC8YiK6//RayXkLRDx44YO6ZARjZp/1eZyYNEhHI4QFnnXXR
PF43+DGbR6dpui/pOM7GmQnaifBGsmhAhoANwWuGu26KpRbmz+/1xCKwbN2U
05f09+t4sLjiXHGkWZdm0ZRfu6G6zCmg83i2owsKjxZldumcGswBXFTlV730
XmEunag5CWHv0rEbyLLpK4OAjfRWggMkMn2Ddc90JpnZTinE6OxpTOUOHRN0
q6XeGSzh30WNpGdWIJC1jNldQXHDntJXUkyK0+wOVzOLIzuP8dl9++K5ImNo
D9PftoxbLKZHFFB9+4iZF0TQ0hj9GVWK/7+C88iVBZyHtUJC0McZ57/1ioVT
lFMXnjQphFNwL3dMjJdT19F8d0PZMuMixDDDLbI9VRi7bAx1PQSHcmqYxbAP
b/IaoWeyNROmff3+UZLCQ2JEOtZlgRkZC1CbOnWCHqykkelpZ6PbsqGum1+t
ytQq48a6NpvNV/edDu2YX7SdaGPYQjbQDiTDNaNo2W4wSolowqEHk2XEFjsj
fk2/mczu4st3k/4eQRTFvc5Y6P/ngBf/ApuJtLuSZWFz5W7dFPE9D5tz0P+Y
9uSEg7jDsWDnp+Gf3Zt0MkHCLlGkpGxChOFvVPpbXjMleE2F8hM0r/tnzmue
EX/Pl+8m/T2CyPjlvPaFi5/4F3iIWO595JEQHlIs6tBwevhHti5duyyTonA4
ckVDxeb6d7oJDZLG3ub3LVb3mc49YSC5Ttql0CfeNyBzBiLwpJb58t2kv0fY
oQ36SzyDf54ge0U9wNXwBcgupjLJBtuMCRVEAwXdhvQNc4+DTZPDlXDI2ywE
IJT2SJoFuUcPDn4HRBMzynZJ+GLp0gNE1/RVRuzJEh4iY1R/lmiX5BwVJK41
kQDX8dBdhMY0JNdwUdtoGLdBuzMmuxOFjiIiZxEyBMfNuXfN1dyyOoxDVwYl
q+OaKVz6SkaP0Jum4OrVsd4ngzHrnQyqvRnTu1XHEm1bLYILemSHJBIpNWP2
ub4aHCYBtJV1ZW5CAGB6Z5ELAS/v2nnyyNdFhmrxEij45WlCk5vVA2DtNEJG
GunAnqwdhwl3X8PuhoS5dtSF8yoF4I/nRhBcT8iVCR0Mx0BneHZ1JOOrbZKW
tZssf1SpXTNWY+Fym9I8HRaVteNhurUPzcrazX98T+y2vvKjW25/5q2AVZ4/
8PXO6ldeLZVreUKIvZiZTZlRlYuwgMAqI7d1YFVYQN3V1qefNq8TFrCTiWFp
CzEyYxaY4tJo0kN28CtfzDdnMwkXcM0cF4ZlhQtSLnv7pZOz+tYv1zvn9iRt
dt2cenpbzoNJaV7DLzPjMMOKRUl74+e4kIfcq9uqVXC4s5S/AzTUwyWtOs6A
BQYhp9MjDJyxpebEHWy3FKxGWjPrqyzRL5nie1KOTuldr0Kb2xeetBWYWbH9
MqS5be3awciU3Jv/7rvBEpi8wUPCzfKOyphmA3yNYsZZgmijHaOLtdKxWDkL
dEdFu4QRWaHZpH8i70+OHb2ofL4fn+m2JRFfIQgn/B+2WJTHricnR8rDK/cU
syD3Onb7UcaEGYS0HuQGzsGaASTTyScIbZRGrv65/AQd/Rx5FbQFvqd9c2xs
3tX3v9or6mCKh7b/ZSNl+EgtEFo3fxcqmcvlAqamOEOjF5jD43mkUV7KgTfq
k8TUFelzkbA0vyPcx/QTK8tsCZA1unfoqKxrNI0HzXt6ccXaRdruopLxjbMr
vt/y0DNNs++8aDXs/7CHQj9HNBfK/LlNm0Jsnx6VKgWnmwgPCE+SStXDoKOv
5AGxCo02MFOvowrGrt5psRScpq+e2HHQ8oCGNzTj0ynk0VnXZ9G3XPIv7dem
bJnfGnTtObBlqa8L1Zp2HMNOyL+aafdCPpkclyLxVCE8u3mzuSeTYl7dseME
Daz0thTyAR3Z8fMk+fXBVUmWEtDeGMI2FEkgnboCT09NnD89imRMVjiQ0Zks
NJTv0yeYkZKQDj02XZ8rmXXCcAAdotMrNDQwbMsmJ+jCftf5+LO+n80rMGPJ
/NuIX8N1g2Yj5vpNr7l6UBZNxo9W795FV+nSRSF73kVff+FC6pR6dWfxvy2y
JSxgW2wQLiBs4DN9D7SvbOEANKjh2nYrxL7WXUy5GhcmAdYZ0BUXQgAq050H
pjGwbvxvezfgxJOu8JUxHCb+x1lv9SRZ4fsST5yZF9wnB7/7ZvhDR4+elfme
17BesTCBrjkwoaTjMGGAjeY4f96q9NCUlEgJET4K5HQFSN8CNf+f8s4txsqr
iuOnnG9mIFET0zQxNlp98Jroo4lWX1oJ0MpFaCklFmxNfTKpxLRFxVYFaQLV
UmgjUG4lYKGE1g7XzAyXgYEyTCllBkFggClghhppDVqNLyC//1r72+dMzuac
mTPxxYf54Lucte9rr73Wf60lBdf37QtEz5CYlQMNSneCJZW0ASEWA47nOh56
G0ggnyslvQ0oAfJ0dN4G4rTm4dU8GigzN0Cs+cNEg9xlGXqVuguoZwjG1LNp
xgIitnmmgIe3b4vNeL3OZgB0vHT77WXNQI+RD483Y3pr6xmQFkIMeYyuab1t
bwdrF/ISZnuPINfIYqbeYcHSHtq1x8iN7Tx0QfXnbsht8LMwwI08TYOLW0gI
7KdKruzpFMiBLvgNd94GIiCFKYOqS0d7U4c2wkQRHYLNCbmIKaaCKjkMDabS
OJ3DZEorDazz9UmT7JlXmqhjKIy08MwhpxHjPWozKsV6xa7A/LGop43o50Pu
Wpg+0hDLxvsekQdrhe6a62xGmYzizeAAmWdsu8eePdjWekYB1LhzlDpIdJZp
6RwvWLK7xk//4/L7QZHPHybBCLItPrql+STsSCS31NwGfeM1R3ZEhiQJecCj
w4RALzN7wkzGvBucJdHGwVTQolj4+ib4JrtrODZypMd+Bt8J2UiJfts39f71
ClG7dag97hoxsFMwGt25UyMIwjwkicfVB9WRa3Csx5WOiTghQRQgky+9aoPU
RJ0xWga4IHMLebk0G++3jh3rR2DSfNxWZ1tgohseeKCsLXhj5wc6bws40Vxc
cGwzpp2wclmhrFQWhqfAgsdOPbv7KMqvwghTfCIIs4D1xT7/7sYeo5hu3NXb
niDFK3aJh/L4/KlTSokqDJxH6Efm6n1w2ivf3dd+PkDOGRvCoAZuwyBMP9N6
RNK8SSBNbNghTbSA2xumz8eYq2+8QUGzrL8dQ22QG1BY2mRK0J1HdQMngeOG
7ibGWUFEKakFrOGNgLDD0SOgY4iDbVJ8ExI7QkZ4TXsJ9a6FY54NCrqHpC8Q
zc4624LJ7I0JE66XTKIi0sbfbr31OnnPnPUUyb6EVV93eTCza9cYDMS5MJsA
gtFGfeF6MmRtBoQ8XOE7jh54GAnF1mHfYWkhcudn+vuvBpX+kBsGTAGuhe00
NOyRlStjY71hIA+0bLn7eJx1VC6gbFjyoLVR7oVk22jVH+vZ1I6cGxqFPIuT
hhrlqjWye+SNahlqo+6wZ6hQsb+XsC+pu1D8SiFsDoNFZNqFb77YjCASKoei
G28SuQOarbuIQIKhGIVO+A72Qe5YQaIPxk4ihpkOhK11NoJ4bCDhlFrBG8Fy
ytNteJxyTgLEbZdN0rGzWGsBOTAyocKMADFUxJC/Yt9hMWJ0sH/4dxmjyHEJ
aYZOUGFDBvM68gH0YR4T36M0om9F2aiTxv35KF0DySCnU0fUwJh/cmzDHsSS
UEnEQtbQQ6d3djHFDBgqyz7tgTewT5VMOMJxopwrdBrVH722+bgMYNztqrN5
o1tarhPHUFg6bx5+vWCqdBCZas+Y3X+dOP5l6VLdMYtlDz/DkodE4y1E4cJi
Ai32iQ+vXLWSGtBN3NnffY5DLIxCoBz/CToM5B4885AyDluhmPtAZYu57x5q
Sz8bB5Kd1ziAPSPgFAnaFcbZI6XP3LHjFIUKU+VOTygO8DEDIhJHp4EmADjk
BMmxAERUiFGF+WXMxc6Tc4683IJuQiuwaM1l1W5u+flqjPCAEQ0hXUTDhXFO
8suempurb7yRZCjF/K8I495Izp3Ey9Gdh0MnVhVYZN25/wvLi2hrpBhAq5Kp
siOxamBHIrbLrO6Ne4lshMzK54ypxakdyWRAd4HRBm9SKLGxb9/++HIw1w3W
dLrrhY7fbWbewIAs4kYR3D24Yc3rvUMdaccDzp0zR7pTBf1xizmYZ8KE6aBt
jp5K44LzEf4XTFgWW2FktBbjfAEat1C0K3t1sF0VmmwKYAoCBI0chuAl9Y2Z
SRWHP89wVmejMhYoWxujiYNBSY5L1EwCZ82IzHwATx7JQqTPSfhH/6MOYyxo
MzN6VBxsgiyT3pIBh+2iJEfhA0vticwuL2F/hUrXDiq6rRZQUeKba8lIo5+s
pWfN/WYkvckxgj2WQNWYMrGvELWQbvVeRSpj2ejui5HBw7mlAyjaFfURXjz6
4rRvGDf6CzMMupggDFXor2GGHd1WC+wo8U06ZWhNXevOGHe3tSkeFe4RGFe1
Imfa9+gT0cOjEzS7tLsMMn03PfWL1u1PPL4drFG6v+qHGo2o4RtfaWXBRGvq
hAX27OvHj1/GDGnnLZ65ZyE4VdC7W2Y/uYNGH6hAI0+A2NH3w+Y3TvBXGKFr
Vpr1hPeZHjcMfCyr+f867aX160dv9k0qBmltfeuOJQQHowvtOVcPm066QmCP
Sj9zMN2x2OaXPbtwH3+FEbpm8pH173if6XHDwMeKIT1cCSVjhyW/ScUgHVSH
Mc9Gd3VdjB02qgJLrzQTqwRNsf4clXpdFgL0U7VUWFfHtCMActjWXWe6cjfH
5Xwk9ToVabOmjrVkxDIrfixI5Xpzi73AbxnsgIIlH65AoCYpwEtZ+tuF+3Cl
iKUUihxu0U0peXFXnQXAcI88+oPNAD0L15wj3Jj4pHoXf3lrqAUYVlmgIOx4
igxgYoq824iMqbvaC9A37rMzsWP/efUwd86nygwpbw+13rq6GxNoJqyGonw0
RbGilqwibZ/eZVADY97F+/buOfvepAlr2T0K79Rf1OK4/hlLZZ/yopBK2KB0
IDg2bK3C2gFZbUjmSqEU9cdnznhVVpDu+otyl5K5K17qYlykSfCiyhjaMLTK
i6KItlk/3qoFYpYcOZSj7da0+FP9Rb0YO0v7F3fCuFvYXPy/kBlYq8NQmq7m
Q56BdMPJcO1v5u2m6BP1k3e3DqD6JCrV4cQy7UgA4qjNwZe+OzlspUENuWDx
84sOFMwKWcwz/PA3DEW50wfMC602BsqCRUMuxo3gen4GGFRReuPeGqhcUL1o
yV6yZzAi1pY0I2fqb4v5mhW/2X2sPw8rcMGeYQNFyS1G1DtM0+1pewG6EIPW
l8+ff79wtn7aDr9HsTh/+bJOzbVzcd3ilSy3rnPDVZS8clmP6+b9eheTTi+l
u3mSr+9IE1gZ68qGq83Lpwock9lLVALrr9lpOg5TBs4EY5+2q623YAG4iyQA
xAJnkU159tM0ndVxtuV7sS9/nE3Zi0RbX/+syvhafbXbgNdnXtkLg5wOEiSa
zChSCVfkAFv4cw416Ylcobye3o7a0Zrpc/FN6gIWl0mi7cnFBnjf7PXrjpqy
hmeGgq6InAw5Vqvls1gb5zpmf51QTPBRrlj009h4KLu0yARw0UFdg0kW4Qhh
eGL3wzM3aZM0gS4jwDVyMKq+fKU8XVaBwgB0oVegevKFtXENKDwQdy5qYxC+
NGXyOssGwbNflU7BWlB91fMX6OoMpMwSqesvSydZNQjdYKL+O3KTnI5T2vca
U3NtCbIByYdjLeall6zT+Wpv7xUgNuMPdPS5Vi/j9IJ3E9oreF01Ug6oRLpn
z1IKTrehs//CoRRgTl/PT9PZGH/D5nNnT3d/UImTJYa9T7T19TNpOg7tQxWb
O4nsjtwg+IFWpaOrp8IACU2Qg/hiQfqHjnKj78j6SuWDTZdOYveDDRidhWk6
jj4jqTQdotyuFuuoiG8fnT25vf2c0Xk2TccRYDN27jjFWBOjJYAz0BQRN5V5
UHrsqUjH4Usce4krJmnbISl0dPlRuJSOyPyxwlpximwysqXmv16UrkVzHMr8
NxaHN2MFoLjBExz/M/3g+aqkaDznU0lbr0bWhfMkvJOG6QeL06S8H5gjkNK2
uSHWFOQ1Rjxr3QtpOj4uYRvXAd/plMWw0nVJmo4DPIg+TFpH3TmnZvyJKGL0
ePb7NJ1KmRxWxfkEYEuRjfVmaZrOzri4OUppYZo4lLEgQZtyLCD5hH6wrBop
iWGEQ8J/HgnPBcGvnTjxHirCuMkuT5Mq8XhhVcrS6TI+gljuUqCvV6bpuPkc
7kuWNd15DAH0sWxG4rD6elUVljPF2seGiq88Gyjdpner0791Focsj8ufBA9b
Rnl0hOeWLD5Im/SDNQMXqAdFpOHo4RkmFqtrW9gVyuu5Jl2XPXGIGAu2ANix
KyTvOnLkLwqIl5NalyblOwndh1ipSWuBpTImNwpfhm7coTcttN/6NKkSIFT+
zPajjFgyV8bfu2beipcOI0Lq5R/SpFxbCndQWBbu5sYBj3pjrq9Uo5ORvprl
DiKHwXoqjmV0Vea6KU3KNN4ZGgRMKRwwvtTX94E7fLEcOG+wafCvdUIVkofs
Gcfc/CRtx4kMhTKmHAK9UE39YHOalCspqcYXLjgc9onYYSiOYitfq0YnY5XD
e5hG0PQsAUi8EkBzUs1pUi6kMrGJ/3Jixvc2onB2fxJsVQiWHIIQ5uUCX42k
axzRTNI5TFD3zcjYEeADSFWAOfWDrQPXoMmxDcUSRRbTUczMRRHqqBw9eRu3
pStk+rYMgAOAJcCpjPwjcTTg3sCAjFRLmpTNwoxzHUmcQC18+62uSzNjd4G1
ZRYTJeQbPT2Xq5L0DHrUCGEWABzcx62v7AksMAMt8KwtTepU5FLaxrkzHEsD
gqQJjvat6df43+5q9BqY9shHtBgWJJnHUGaK5YfNCbZEjE/kNKPbnqZrx/0G
6LBb0IvQVxsNYthAFyDs0o2wtbhU96XpmtTfwOiYCsGeS7Mz1r6HM2DRVjJM
j0Gde/jlk2l/uow+K4OVwGRCaQg8WQCOu/SuEewD2iN0lX+/Z+xqDBf424jA
oTTpd+O8RxPBsH9w77jVCndo3kAZyCCmBF2eS2SH0ySNKTfBEkpDEjOiLAMh
bjzGCvs+R5Rdsx7bwh6pD99Jk7ZUYI1wbc74V8eNWUU+J/gqIqkFy2lkkV68
b/I6UmovWfRcBzyOvqtG3XSXEmbhss8sW9rJFPYR+87BA++y5ajXPxcXHyPP
XsGGyKE/jDDvco6rAnoGMh1LYdSIFEQzPhwzeiXSAmOHYOWEysTPPM3tP/9D
M7FchLxaFEiPcIQk0xtiIhYg/fDP6WabJJ9RDNIvs4jZ5FRhp/AWJh06ZYYJ
IdJf03rcxXDfhrtSIJT8NUewwAYgjGaA5euvcV2Bz/979N0r0GGwHcTXxVJu
bF14Ot0Mg6E3ssBhRpRKiQT1ZkSdJDs0fIP1XxiBKa8wqlTCwrLBKKLSYUTZ
gXS+8t8zY/k+8oYL6Srpqsu//h8+ig+MBdrTwi3/BZsvXOk=\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.546224597714701*^9, 3.546224600315322*^9}}]
},
WindowSize->{935, 1028},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/honza/IF-Exponential.pdf"},
FrontEndVersion->"8.0 for Linux x86 (32-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 296, 5, 30, "Input"],
Cell[856, 27, 392, 8, 50, "Input"],
Cell[CellGroupData[{
Cell[1273, 39, 733, 16, 30, "Input"],
Cell[2009, 57, 570, 13, 56, "Output"]
}, Open  ]],
Cell[2594, 73, 157, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[2776, 80, 620, 13, 50, "Input"],
Cell[3399, 95, 631, 13, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4067, 113, 706, 13, 30, "Input"],
Cell[4776, 128, 775, 15, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5588, 148, 460, 11, 30, "Input"],
Cell[6051, 161, 898, 23, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6986, 189, 623, 14, 30, "Input"],
Cell[7612, 205, 848, 19, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8497, 229, 1034, 19, 30, "Input"],
Cell[9534, 250, 1119, 25, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10690, 280, 503, 10, 30, "Input"],
Cell[11196, 292, 583, 14, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11816, 311, 632, 14, 30, "Input"],
Cell[12451, 327, 681, 14, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13169, 346, 894, 17, 30, "Input"],
Cell[14066, 365, 1033, 21, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15136, 391, 337, 6, 30, "Input"],
Cell[15476, 399, 755, 16, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16268, 420, 343, 8, 30, "Input"],
Cell[16614, 430, 815, 18, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17466, 453, 787, 20, 30, "Input"],
Cell[18256, 475, 1813, 48, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20106, 528, 549, 13, 30, "Input"],
Cell[20658, 543, 1534, 42, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22229, 590, 314, 8, 30, "Input"],
Cell[22546, 600, 1083, 34, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23666, 639, 532, 12, 30, "Input"],
Cell[24201, 653, 876, 21, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25114, 679, 735, 17, 30, "Input"],
Cell[25852, 698, 1402, 37, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27291, 740, 339, 9, 50, "Input"],
Cell[27633, 751, 1278, 31, 63, "Output"]
}, Open  ]],
Cell[28926, 785, 1292, 31, 78, "Input"],
Cell[30221, 818, 241, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[30487, 826, 2289, 47, 240, "Input"],
Cell[32779, 875, 39191, 667, 423, "Output"]
}, Open  ]],
Cell[71985, 1545, 172, 3, 88, "Input"],
Cell[72160, 1550, 271, 9, 10, "Text"],
Cell[72434, 1561, 296, 5, 30, "Input"],
Cell[72733, 1568, 353, 7, 30, "Input"],
Cell[73089, 1577, 226, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[73340, 1585, 601, 12, 30, "Input"],
Cell[73944, 1599, 523, 9, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74504, 1613, 706, 13, 30, "Input"],
Cell[75213, 1628, 612, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75862, 1642, 410, 10, 30, "Input"],
Cell[76275, 1654, 694, 17, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77006, 1676, 623, 14, 30, "Input"],
Cell[77632, 1692, 771, 16, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78440, 1713, 983, 18, 30, "Input"],
Cell[79426, 1733, 1000, 21, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80463, 1759, 503, 10, 30, "Input"],
Cell[80969, 1771, 584, 14, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81590, 1790, 627, 14, 30, "Input"],
Cell[82220, 1806, 681, 14, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82938, 1825, 845, 16, 30, "Input"],
Cell[83786, 1843, 1033, 21, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84856, 1869, 337, 6, 30, "Input"],
Cell[85196, 1877, 661, 13, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85894, 1895, 343, 8, 30, "Input"],
Cell[86240, 1905, 667, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86944, 1923, 787, 20, 30, "Input"],
Cell[87734, 1945, 695, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88466, 1963, 455, 10, 30, "Input"],
Cell[88924, 1975, 497, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89458, 1990, 437, 11, 30, "Input"],
Cell[89898, 2003, 600, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90535, 2020, 685, 16, 30, "Input"],
Cell[91223, 2038, 445, 10, 49, "Message"],
Cell[91671, 2050, 564, 11, 70, "Message"],
Cell[92238, 2063, 727, 14, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93002, 2082, 397, 10, 50, "Input"],
Cell[93402, 2094, 1219, 30, 48, "Output"]
}, Open  ]],
Cell[94636, 2127, 1254, 31, 56, "Input"],
Cell[95893, 2160, 241, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[96159, 2168, 2552, 50, 240, "Input"],
Cell[98714, 2220, 118861, 1974, 420, 77710, 1298, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[217590, 4197, 146, 2, 69, InheritFromParent]
}
]
*)

(* End of internal cache information *)
